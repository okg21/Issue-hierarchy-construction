<%- include('partials/header.ejs') %>

<div class="row mb-4">
    <div class="col-md-8">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/"><i class="fas fa-home"></i> Home</a></li>
                <li class="breadcrumb-item"><a href="/repository/<%= repoOwner %>/<%= repoName %>"><%= repoOwner %>/<%= repoName %></a></li>
                <li class="breadcrumb-item active">Issue #<%= issue.number %></li>
            </ol>
        </nav>
    </div>
    <div class="col-md-4 text-end">
        <a href="<%= issue.url %>" target="_blank" class="btn btn-outline-primary">
            <i class="fab fa-github me-1"></i> View on GitHub
        </a>
    </div>
</div>

<div class="card shadow mb-4">
    <div class="card-header bg-dark text-white d-flex justify-content-between align-items-center">
        <h1 class="h4 mb-0">
            <span class="badge <%= issue.state === 'CLOSED' ? 'bg-secondary' : 'bg-success' %> me-2">
                <i class="fas <%= issue.state === 'CLOSED' ? 'fa-check-circle' : 'fa-exclamation-circle' %>"></i>
                <%= issue.state %>
            </span>
            #<%= issue.number %>: <%= issue.title %>
        </h1>
        <small class="text-white-50">
            <i class="far fa-calendar-alt me-1"></i> Created: <%= new Date(issue.createdAt).toLocaleString() %>
        </small>
    </div>
    
    <div class="card-body">
        <div class="row mb-4">
            <div class="col-md-8">
                <div class="d-flex align-items-center mb-3">
                    <h6 class="mb-0 me-2">Author:</h6>
                    <% if (issue.authorAvatar) { %>
                        <img src="<%= issue.authorAvatar %>" class="rounded-circle me-2" alt="<%= issue.author %>" width="24" height="24">
                    <% } %>
                    <span><%= issue.author || 'Unknown' %></span>
                </div>
                
                <% if (issue.labels && issue.labels.length > 0) { %>
                    <h6>Labels:</h6>
                    <div class="mb-3">
                        <% issue.labels.forEach(label => { %>
                            <span class="badge me-1 mb-1 label-badge" 
                                  style="background-color: #<%= label.color %>; color: <%= getContrastColor(label.color) %>;">
                                <%= label.name %>
                            </span>
                        <% }) %>
                    </div>
                <% } %>
            </div>
            
            <div class="col-md-4">
                <% if (issue.assignees && issue.assignees.length > 0) { %>
                    <h6>Assignees:</h6>
                    <ul class="list-unstyled">
                        <% issue.assignees.forEach(assignee => { %>
                            <li class="mb-2 d-flex align-items-center">
                                <% if (assignee.avatarUrl) { %>
                                    <img src="<%= assignee.avatarUrl %>" class="rounded-circle me-2" alt="<%= assignee.login %>" width="24" height="24">
                                <% } %>
                                <%= assignee.login %>
                            </li>
                        <% }) %>
                    </ul>
                <% } %>
                
                <div class="mt-3">
                    <p class="mb-1"><strong>Updated:</strong> <%= new Date(issue.updatedAt).toLocaleString() %></p>
                </div>
            </div>
        </div>
        
        <div class="card mb-4">
            <div class="card-header bg-light">
                <h5 class="mb-0">Issue Description</h5>
            </div>
            <div class="card-body markdown-body">
                <div id="issueBody" class="markdown-content">
                    <%= issue.body || 'No description provided.' %>
                </div>
            </div>
        </div>
        
        <% if (issue.comments && issue.comments.length > 0) { %>
            <h3 class="h5 mb-3">
                <i class="far fa-comments me-2"></i>Comments (<%= issue.comments.length %>)
            </h3>
            
            <% issue.comments.forEach((comment, index) => { %>
                <div class="card mb-3 comment-card">
                    <div class="card-header bg-light d-flex justify-content-between align-items-center">
                        <div class="d-flex align-items-center">
                            <% if (comment.authorAvatar) { %>
                                <img src="<%= comment.authorAvatar %>" class="rounded-circle me-2" alt="<%= comment.author %>" width="24" height="24">
                            <% } %>
                            <strong><%= comment.author || 'Unknown' %></strong>
                        </div>
                        <small class="text-muted">
                            <i class="far fa-clock me-1"></i><%= new Date(comment.createdAt).toLocaleString() %>
                        </small>
                    </div>
                    <div class="card-body markdown-body">
                        <div class="markdown-content comment-body-<%= index %>">
                            <%= comment.body %>
                        </div>
                    </div>
                </div>
            <% }) %>
        <% } else { %>
            <div class="alert alert-info">No comments on this issue.</div>
        <% } %>
    </div>
</div>

<script>
    // Function to determine if text should be white or black based on background color
    function getContrastColor(hexcolor) {
        if (!hexcolor) return '#000000';
        
        // Convert hex to RGB
        const r = parseInt(hexcolor.substr(0, 2), 16);
        const g = parseInt(hexcolor.substr(2, 2), 16);
        const b = parseInt(hexcolor.substr(4, 2), 16);
        
        // Calculate luminance
        const luminance = (0.299 * r + 0.587 * g + 0.114 * b) / 255;
        
        // Return black for light colors, white for dark colors
        return luminance > 0.5 ? '#000000' : '#ffffff';
    }
    
    // Parse markdown in the issue body and comments
    document.addEventListener('DOMContentLoaded', function() {
        // Parse issue body
        const issueBody = document.getElementById('issueBody');
        if (issueBody) {
            issueBody.innerHTML = marked.parse(issueBody.textContent);
        }
        
        // Parse comment bodies
        const commentBodies = document.querySelectorAll('[class^="comment-body-"]');
        commentBodies.forEach(comment => {
            comment.innerHTML = marked.parse(comment.textContent);
        });
        
        // Apply syntax highlighting to code blocks
        Prism.highlightAll();
    });
</script>

<%- include('partials/footer.ejs') %> 