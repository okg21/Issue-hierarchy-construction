Repo Owner,Repo Name,Issue Title,Issue Body,Author,Assignees,Comments,Labels,Issue State,Issue Number,References,Combined Text,Cluster,GroundTruthCluster
ckeditor,ckeditor5,There should be an empty paragraph in the newly created editor,"When you create an editor, but not call `setData` you have the editor without any paragraph inside and strange things (big fan!) happens. You can type, but you can not break, since there is no paragraph to break.

Note that this should be up to the editor's implementation what is the default content. The one-line-title editor might not have any paragraph by default.
",pjasiun,[],"[{'body': 'As a matter of fact, that paragraph doesn\'t exist. It is just a place where the caret can be placed so one can start typing.\n\nFor instance, the expectation is that the editor will return an empty HTML if nothing is typed in that paragraph.\n\nTherefore, I was wondering if this couldn\'t be a helper, instead of a Model element. A view only element that is created in the Model only when the user adds something into it.\n\nThis problem extends not only to empty documents. It also applies to other situations where we need an empty ""escape"" place at the end of the document, when for example we have just a table, a widget or an image inside the document.\n', 'author': 'fredck'}, {'body': ""Shouldn't editor return an empty data when you have an empty heading inside too? I mean... at least in CKEditor 4. Because I think that it complicates things a lot if we try to think this way. To keep things simple I'd always have a block in the editable and also in the model (when talking about block editables). Otherwise, it'll be crazy.\n"", 'author': 'Reinmar'}, {'body': '> Shouldn\'t editor return an empty data when you have an empty heading inside too?\n\nYes, it should. So maybe a different strategy, that involves touching the Model as well, would be better.\n\n> This problem extends not only to empty documents. It also applies to other situations where we need an empty ""escape"" place at the end of the document, when for example we have just a table, a widget or an image inside the document.\n\nStill, this situation is valid so we could use the very same logic for these cases as well.\n', 'author': 'fredck'}, {'body': '> Yes, it should.\n\nWhy, in fact? For me ""I wrote an empty blog post"" or ""an empty email reply"" simply invalid. I wouldn\'t expect anything special from the editor in such case... Do you have an idea why we should return empty string?\n', 'author': 'Reinmar'}, {'body': '> Why, in fact?\n\nBecause we learned a lot from the CKEditor history.\n\n> For me ""I wrote an empty blog post"" or ""an empty email reply"" simply invalid\n\nExactly, and that\'s the main reason for it. Many platforms do form validation based on the data produced by the form fields. If the editor returns an empty paragraph, it\'ll not be understood as empty because the expectation is an empty string.\n', 'author': 'fredck'}, {'body': ""> Because we learned a lot from the CKEditor history.\n\nSo I was asking exactly this – what we've learned? ;)\n\nThe validation scenario makes of course great sense.\n"", 'author': 'Reinmar'}, {'body': 'DUP: https://github.com/ckeditor/ckeditor5-core/issues/65', 'author': 'Reinmar'}, {'body': ""If anyone wants to tackle this – what's the proposed solution?\r\n\r\nOne that came to my mind is to implement it in `ckeditor5-paragraph` which already handles similar cases during conversion. It listens to `insert` events and autoparagraph content which is either unsupported by the editor or which is not wrapped in any block.\r\n\r\nHere, I'd see a `changesDone` listener (`change` is not an option, I think, because temporarily the editor may be empty) which checks if the content is totally empty and, if is, creates a paragraph and puts selection in it."", 'author': 'Reinmar'}, {'body': ""Note – the advantage of listening to model changes is that we'll fix the content in other situations in which it might've been emptied totally. We've been trying to implement `deleteContent()` and `insertContent()` in such a way that they don't ever leave an empty content, but who knows what other features will do.\r\n\r\n"", 'author': 'Reinmar'}, {'body': '> Here, I\'d see a chagesDone listener (change is not an option, I think, because temporarily the editor may be empty) which checks if the content is totally empty and, if is, creates a paragraph and puts selection in it.\r\n\r\nWe may face the same problem even when the editor has contents. For example, if it has an image only.\r\n\r\nI\'ve [commented the following earlier](https://github.com/ckeditor/ckeditor5/issues/331#issuecomment-247336739):\r\n\r\n> This problem extends not only to empty documents. It also applies to other situations where we need an empty ""escape"" place at the end of the document, when for example we have just a table, a widget or an image inside the document.\r\n\r\nWhat about figuring out a solution that would handle all these cases where the user doesn\'t have any place in the root to place the selection in?\r\n\r\n\r\n', 'author': 'fredck'}, {'body': '> What about figuring out a solution that would handle all these cases where the user doesn\'t have any place in the root to place the selection in?\r\n\r\nThis is a bit different issue and if we want to have a quick win on the `setData( \'\' )` I wouldn\'t risk investigating the other issue :D.\r\n\r\nE.g. In CKE4 we introduced magicline to deal with this problem and changed the insertion algorithms so they don\'t create an empty paragraph after tables, hrs, etc. Magicline isn\'t perfect too and CKE5 gives us far more options than we had in CKE4, but, exactly for this reason, I wouldn\'t want to spend more time on this now. After all, we have only the image widget to deal with now.\r\n\r\nAnother example – what with spaces between two images? Should the temporary ""escape"" block be there too? The same question can be asked about the space at the beginning of the document. Nooo... I already started thinking on this. Stop! :D', 'author': 'Reinmar'}, {'body': ""OK, it can be done this way – you select an image which is the last element in the content. Then you press arrow down because you want to type after it – this adds a temporary paragraph. It gets removed if you move out of it without typing in it.\r\n\r\nBut, if we agree this is the way, then it's certainly a separate issue. It's a magicfing... magicblock!"", 'author': 'Reinmar'}, {'body': '> you select an image which is the last element in the content. Then you press arrow down because you want to type after it\r\n\r\nThat\'s my point... I don\'t think that this is the way users will do it.\r\n\r\nThe fact is that before an image at the start of the contents, or even in-between subsequent images, there is no **visible** empty space. For these cases, magic-line is definitely the right solution.\r\n\r\nAt the end of the contents though, users usually see empty space. So if they want to type there, they go on that empty space and click. It would be frustrating to see that the caret doesn\'t get there and to have to learn that I have to click the image and use the arrows to reach that space. That would even sound weird, because arrows are used to move to *existing* places, so why it didn\'t work with the click?\r\n\r\nThat\'s why I\'m proposing a simpler solution to solve that one problem. *Something* that would guarantee that there is always a place to put the selection in at the end of the document.\r\n\r\nIdeally, such paragraph would be marked as ""magic"", because it hasn\'t been created by the user and would be removed when retrieving the contents (that\'s why I proposed it being a view only feature).', 'author': 'fredck'}, {'body': '> So if they want to type there, they go on that empty space and click. It would be frustrating to see that the caret doesn\'t get there and to have to learn that I have to click the image and use the arrows to reach that space\r\n\r\nYep, if we\'d go this way, then this would need to be connected with the magicline. \r\n\r\n> That\'s why I\'m proposing a simpler solution to solve that one problem. Something that would guarantee that there is always a place to put the selection in at the end of the document.\r\n> \r\n> Ideally, such paragraph would be marked as ""magic"", because it hasn\'t been created by the user and would be removed when retrieving the contents (that\'s why I proposed it being a view only feature).\r\n\r\nWe can\'t have magic elements in the model without having serious problems with editing algorithms. We also don\'t think that we could have magic elements in the view without having them in the model because there\'d be serious issues with the selection, mappings and everything around.\r\n\r\nWhich means that this isn\'t a simple solution to implement. Its simplicity is in how it could work for the user, but it\'s not trivial to develop.\r\n\r\nHence, I\'ll report a separate ticket for it to not bloat this one.', 'author': 'Reinmar'}, {'body': '➡️  Magicline and magicblock: https://github.com/ckeditor/ckeditor5/issues/407', 'author': 'Reinmar'}, {'body': 'Okay, so as the discussion shown, there are actually multiple things to resolve, and we should resolve them one by one in separate issues.\r\n\r\nIn this issue let\'s stick with the original problem which was: there should be always a `<p></p>` in main editable (as long as there is a paragraph feature).\r\n\r\nThe ""quick win"" solution was already proposed by @Reinmar - on `changesDone` check if there are any contents in editor and if not, add `<paragraph>` to the model.\r\n\r\nAs I was about to implement this solution one thing came to my mind: we could have multiple roots. Since paragraph feature should be universal I think it should be ready to handle editors with multiple roots. So my idea is to check all the roots on `changesDone` (except of graveyard root) and fix all roots that are empty (and can have `<paragraph>` element according to `Schema`).', 'author': 'scofalik'}, {'body': 'https://github.com/ckeditor/ckeditor5-paragraph/issues/19 has been closed, so now when loading empty data or if some algorithm mistakenly cleared the editor completely an empty paragraph will be created. ', 'author': 'Reinmar'}, {'body': ""And I'll close this ticket. It was originally reported to handle the situation where you initialise the editor on a completely empty content and we fixed that. Other considerations, especially magic-line oriented ones, should be handled separately (https://github.com/ckeditor/ckeditor5/issues/407)."", 'author': 'Reinmar'}]","['resolution:duplicate', 'type:improvement']",CLOSED,331,[],"There should be an empty paragraph in the newly created editor When you create an editor, but not call `setData` you have the editor without any paragraph inside and strange things (big fan!) happens. You can type, but you can not break, since there is no paragraph to break.

Note that this should be up to the editor's implementation what is the default content. The one-line-title editor might not have any paragraph by default.
",30,0
ckeditor,ckeditor5,Typings for TypeScript,"Hi,

I'm currently using ckeditor5 in TypeScript and I think it would be pretty usefull to ship typings definition. Is there something planed about this? I think it should be possible to auto generated them based on the JS files.

**EDIT (by @Reinmar, 07.04.2023)**: It's out! 🚀 Read more in https://github.com/ckeditor/ckeditor5/issues/504#issuecomment-1499078025.

**EDIT (by @filipsobol, 22.03.2023)**: The TypeScript migration is at the finish line. Alpha release of version 37 with typings is already out and being tested. We have updated our Vue integration and are in the process of updating React and Angular. You can follow the progress here: https://github.com/ckeditor/ckeditor5/issues/11704.

**EDIT (by @Reinmar, 23.08.2022)**: It's happening. We're [migrating to Typescript](https://github.com/ckeditor/ckeditor5/issues/11704) 🎉 Having official typings is the main goal of the migration. 

---

If you'd like support for TypeScript to be introduced react with 👍 to this post.",ssougnez,[],"[{'body': ""Quoting myself from https://github.com/ckeditor/ckeditor5/issues/347#issuecomment-309859172:\r\n\r\n> We maintain a very thorough API documentation (JSDoc-based notation) so it should not be hard to generate type definitions and maintain them in https://github.com/DefinitelyTyped/DefinitelyTyped.\r\n\r\nI agree that it'd be great if typings were available. But we won't be able to work on that now. I wonder, though, how much work it requires, in general, to produce those typings out of JSDoc comments. The problem in our case may lay in the fact that JSDoc didn't work well for ES6 so we came out with https://www.npmjs.com/package/@ckeditor/jsdoc-plugins – a set of plugins which fix stuff after JSDoc and extend it to better work in our case."", 'author': 'Reinmar'}, {'body': 'Typescript definitions would greatly help our cause of developing with ckeditor5 platform', 'author': 'nadavsinai'}, {'body': ""I've found only one good looking tool - https://github.com/englercj/tsd-jsdoc, but it doesn't support the `module:` syntax and we use it in a custom way...\r\n\r\nAnd there're few problems to solve anyway.\r\n\r\n1. Events \r\n\r\nJSDoc provides the synthetic `@event` and `@fires`, so all events and their documentation will be lost.\r\n\r\nFrom the e.g.:\r\n\r\n```js\r\n\r\n/**\r\n * Fired after {@link #initPlugins plugins are initialized}.\r\n *\r\n * @event pluginsReady\r\n */\r\n```\r\n\r\nWe'd have to create such declarations:\r\n\r\n```ts\r\ndeclare class Emitter<EventMap> {\r\n\tlistenTo<T extends keyof EventMap>( emitter: Emitter<EventMap>, event: T, callback: ( event: EventInfo<EventMap[ T ]> ) => void, options: any ): void;\r\n\t...\r\n}\r\n\r\ndeclare class Editor extends Emitter<EditorEvents> {\r\n\r\n}\r\n\r\ninterface EditorEvents {\r\n\tpluginsReady: PluginsReadyEvent;\r\n}\r\n\r\n/**\r\n * Fired after {@link #initPlugins plugins are initialized}.\r\n */\r\ninterface PluginsReadyEvent {}\r\n\r\ninterface EventInfo<T> {}\r\n```\r\n\r\nto not lose the informations about the event. (Then, with every new editor event only the `EditorEvents` interface needs to be changed). I don't think that any JSDoc->TS plugin can support such syntax soon.\r\n\r\n2. Builds\r\n\r\nWe'd need to provide typings for every source file and for builds. We'd need somehow to combine type declarations, so the builds will include only one TS declaration file with all proper typings.\r\n\r\nI agree, that these typings would be super helpful for someone using TS or IDE that supports declaration files. But it feels super hard to implement a tool for such conversion, IMO writhing declaration files by hand wisely would be easier as the API is established. "", 'author': 'ma2ciek'}, {'body': ""I can see that only reasonable choice would be to use that lib: https://github.com/englercj/tsd-jsdoc. It operates on the JSDoc output, but it doesn't support many things, e.g. the `module:` syntax, so we'd need to somehow patch this tool and align to our needs."", 'author': 'ma2ciek'}, {'body': ""I see that I overcomplicate this issue in the https://github.com/ckeditor/ckeditor5/issues/504#issuecomment-408404900. If we'd like to make this tool we should implement it incrementally and make the TS output backward-compatible."", 'author': 'ma2ciek'}, {'body': '@ma2ciek I know you made [some work on running our source code through TypeScript compiler](https://github.com/ckeditor/ckeditor5/issues/1415) and using current documentation as type definitions. Could you write here a short summary? Is that feasible? How much work would it be needed?', 'author': 'Reinmar'}, {'body': ""To sum up that thread, it's possible to use TS compiler to check our JavaScript code by taking advantage of JSDoc our comments. So once our code whole codebase will be type-checked it should be possible to generate proper TS declaration files for every file. But note that the [PR that allows generating declaration files from JS code](https://github.com/Microsoft/TypeScript/issues/7546) is still an open issue and the TS team is waiting for the community PRs (we can also try the mentioned [`dts-gen` project](https://github.com/microsoft/dts-gen) but IMO it'd be better to wait for the official option).\r\n\r\nAccording to changes needed to bring that type-checking and be somehow TS-compatible, we'd to need to work on:\r\n* converting all `module:` syntax to normal imports (I assume that the ESlint might complain about unused imports, but maybe there's some plugin for that, dunno)  or to the [relative `import()` syntax](https://github.com/Microsoft/TypeScript/wiki/JSDoc-support-in-JavaScript#import-types) and add some changes to our JSDoc plugins so it could work properly with that syntax (not sure how much work it'd be needed)\r\n* checking whether our mixins could be understandable by TS - TS supports only single inheritance, but there could be some ways to mimic that effect.\r\n* checking whether the caught errors from JS files are highlighted in all IDEs we use.\r\n* fix all incorrect typedefs, interfaces, types, etc. in the existing code (like [that one](https://github.com/ckeditor/ckeditor5/issues/1425)).\r\n\r\nIt's hard to tell exactly how much work is needed, IMO it's better to check all potential blockers first."", 'author': 'ma2ciek'}, {'body': ""> * checking whether our mixins could be understandable by TS\r\n\r\nShouldn't the [`interfaces`](https://www.typescriptlang.org/docs/handbook/interfaces.html) be used for mixins?  Instead of \r\n```js\r\n/**\r\n * @mixes MixinFoo\r\n * @mixes MixinBar\r\n */\r\n```\r\nwrite:\r\n```js\r\n/**\r\n * @implements InterfaceFoo\r\n * @implements InterfaceBar\r\n */\r\n```\r\nps.: TS docs about mixins: https://www.typescriptlang.org/docs/handbook/mixins.html"", 'author': 'jodator'}, {'body': ""@jodator, we could use just interfaces, but then the class would need to implement all these interfaces anyway (Otherwise TS will complain). So that's not an option IMO. Yep, I've seen that part about mixins, but we can't do that in many cases as it's massive code duplication (we'd need to mock every property and method for every interface that we need to implement)."", 'author': 'ma2ciek'}, {'body': 'it will be great to have typescript definition for ckeditor5 platform', 'author': 'medmor'}, {'body': 'it will be great to have typescript definition for ckeditor5 platform.\r\nme too', 'author': 'andysanti'}, {'body': ""> To sum up that thread, it's possible to use TS compiler to check our JavaScript code by taking advantage of JSDoc our comments. So once our code whole codebase will be type-checked it should be possible to generate proper TS declaration files for every file. But note that the [PR that allows generating declaration files from JS code](https://github.com/Microsoft/TypeScript/issues/7546) is still an open issue and the TS team is waiting for the community PRs (we can also try the mentioned [`dts-gen` project](https://github.com/Microsoft/TypeScript/issues/7546#issuecomment-438007094) but IMO it'd be better to wait for the official option).\r\n> \r\n> [...]\r\n\r\nJust stumbled upon this. FYI [the issue about allowing generation of typing from JavaScript](https://github.com/Microsoft/TypeScript/issues/7546) was merged a few weeks ago, although it looks like it wasn't officially released yet. It'll probably be included in the 3.7 release. ([TypeScript 3.7 Iteration Plan](https://github.com/microsoft/TypeScript/issues/33352))"", 'author': None}, {'body': 'Please/ TypeScript support is very important for use in project. Please implement base Types support', 'author': 'CrazyAdmin'}, {'body': 'Do you have any plans of rewriting this in Typescript?', 'author': 'IonelLupu'}, {'body': ""Hi @IonelLupu,\r\n\r\nThere're plans to either rewrite to TS or to use JSDoc annotations and generate declaration files out of them, but I can't guarantee when it happens and if it happens.\r\n\r\nSee [https://github.com/ckeditor/ckeditor5/issues/1415](https://github.com/ckeditor/ckeditor5/issues/1415)."", 'author': 'ma2ciek'}, {'body': '@Reinmar @ma2ciek\r\n\r\nI recently developed a plugin for CKEditor5 and found that it is really inconvenient to not have TS type files. Although CKEditor5 has a very complete API manual, but the manual is not as convenient and timely as TS type.  I know that rewriting CKEditor5 with TS is very difficult, but I think If you want to write a TS type, it is relatively simple, even if all types use `any`, so I know at least those `Methods` or `Properties` are available. thank you for developing such a good and easy-to-use Editor. Grateful！', 'author': 'SolidZORO'}, {'body': ""自己写 type 真的很花时间，最主要的问题还是自己不一定能写对！\r\n\r\n下面这个 writer 蛮常用的，前后整理核对下来花了 2h。😭\r\n\r\n```typescript\r\n// @ckeditor/ckeditor5-engine/src/model/writer\r\n  class Writer {\r\n    readonly batch: any;\r\n    readonly model: model.Model;\r\n    //\r\n    addMarker(name: string, options: { usingOperation: boolean; range: Range; affectsData?: boolean }): Marker;\r\n    append(item: Item | DocumentFragment, parent: Element | DocumentFragment);\r\n    appendElement(\r\n      name: name,\r\n      attributes?: { [key: string]: string | RegExp | boolean },\r\n      parent: Element | DocumentFragment,\r\n    );\r\n    appendText(\r\n      text: string,\r\n      attributes?: { [key: string]: string | RegExp | boolean },\r\n      parent: Element | DocumentFragment,\r\n    );\r\n    clearAttributes(itemOrRange: Item | Range);\r\n    createDocumentFragment(): DocumentFragment;\r\n    createElement(name: string, attributes?: { [key: string]: string | RegExp | boolean }): Element;\r\n    createPositionAfter(item: Item): Position;\r\n    createPositionAt(itemOrPosition: Item | Position, offset?: number | 'end' | 'before' | 'after'): Position;\r\n    createPositionBefore(item: Item): Position;\r\n    createPositionFromPath(root: Element | DocumentFragment, path: number[], stickiness?: PositionStickiness): Position;\r\n    createRange(start: Position, end?: Position): Range;\r\n    createRangeIn(element: Element): Range;\r\n    createRangeOn(element: Element): Range;\r\n    createSelection(\r\n      selectable: Selection,\r\n      placeOrOffset?: number | 'before' | 'end' | 'after' | 'on' | 'in',\r\n      options?: { backward?: boolean },\r\n    ): Selection;\r\n    createText(data: string, attributes?: { [key: string]: string | RegExp | boolean }): Text;\r\n    insert(item: Selection, itemOrPosition: Item | Position, offset?: number | 'end' | 'before' | 'after');\r\n    insertElement(name, attributes?: { [key: string]: string | RegExp | boolean }, itemOrPosition, [offset]);\r\n    insertText(data, attributes?: { [key: string]: string | RegExp | boolean }, itemOrPosition, [offset]);\r\n    merge(position: Position);\r\n    move(range: Range, itemOrPosition: Item | Position, offset?: number | 'end' | 'before' | 'after');\r\n    overrideSelectionGravity(): string;\r\n    remove(itemOrRange: Item | Range);\r\n    removeAttribute(key: string, itemOrRange: Item | Range);\r\n    removeMarker(markerOrName: Marker | string);\r\n    removeSelectionAttribute(keyOrIterableOfKeys: string | string[]);\r\n    rename(element: Element, newName: string);\r\n    restoreSelectionGravity(uid: string);\r\n    setAttribute(key: string, value: any, itemOrRange: Item | Range);\r\n    setAttributes(attributes: { [key: string]: string | RegExp | boolean }, itemOrRange: Item | Range);\r\n    setSelection(\r\n      selectable: Selection,\r\n      placeOrOffset: number | 'before' | 'end' | 'after' | 'on' | 'in',\r\n      options?: { backward?: boolean },\r\n    );\r\n    setSelectionAttribute(keyOrObjectOrIterable: any, value: any);\r\n    setSelectionFocus(itemOrPosition: Item | Position, offset: number | 'before' | 'end' | 'after');\r\n    split(position: Position, limitElement: Node): any;\r\n    unwrap(element: Element);\r\n    updateMarker(\r\n      markerOrName: string | Marker,\r\n      options?: { range?: Range; usingOperation?: boolean; affectsData?: boolean },\r\n    );\r\n    wrap(range: Range, elementOrString: Element | string);\r\n  }\r\n\r\n```"", 'author': 'SolidZORO'}, {'body': 'Any news ? 😃 ', 'author': 'pierre-H'}, {'body': 'We want typings, we want typings, we want Typings', 'author': 'Anamican'}, {'body': ""Holy obvious omission batman!  \r\n\r\nThis is a pretty big flaw to not address this as of 2020... For a professional package, that I'm expecting to pay for, typescript types are feature #1 that I would need.\r\n\r\nIt's also a sniff test... if you guys are missing this feature it's not a good sign for other features that I would expect.  "", 'author': 'burtonator'}, {'body': ""> It's also a sniff test... if you guys are missing this feature it's not a good sign for other features that I would expect.\r\n\r\nGoing to TypeScript is a HUGE architectural change. And typing all packages by hand is irrational. I know that typings is a cool feature and I'm super happy while using other packages shipping their typings but it's only a DX feature and the cost of changing thousands of source files, thousands of tests, aligning 50+ internal script and tools are a little bigger than our capacity right now (considering the fact that the some parts of the codebase would need to be frozen at some points, even if we go package by package).\r\n\r\nThe only way to provide typings right now is by extending the current ones on https://github.com/DefinitelyTyped/DefinitelyTyped and install them from the `@types/` scope packages later."", 'author': 'ma2ciek'}, {'body': ""@ma2ciek is there a @types package? I couldn't find it... pointer?\r\n\r\nI agree WRT to rewriting the code base and typing ALL code... but it's not necessary for external developers for 90% of the use cases.\r\n\r\nYou could provide high level types for the react component btw and that would solve 99% of my use case.  \r\n\r\nI'm going to eval ckeditor5 and should be able to just write basic types for the react component by developing my own types in the module. \r\n\r\nThe main issue is that types provide a MASSIVE amount of productivity gain by external developers. \r\n\r\nIt's like the difference of being in a cave in the dark and having a flashlight (or not).  \r\n\r\nI'm basically suggesting that the pareto principle (80/20) rule be used here. Any edge types, for now, could just be 'any'... or you could just create an interim project that we could all contribute to over time.  Pretty quickly you'd have 95% of use cases solved.\r\n"", 'author': 'burtonator'}, {'body': ""@ma2ciek \r\n\r\n> Going to TypeScript is a HUGE architectural change.\r\n\r\nWhereas I'm huge TypeScript fan (spoiler alert: I flee JS like the pest) I think that people don't necessarily want that you switch to TypeScript (although it sure would help you making more stable/robust code) they only want to have working up-to-date definition files for them.\r\n\r\nIf people that write ckeditor could also provide up to date typings along the way, it would be a huge win."", 'author': 'pounard'}, {'body': ""> If people that write ckeditor could also provide up to date typings along the way, it would be a huge win.\r\n\r\nWe understand that.\r\n\r\nBut, we can't reliably provide typings of couple hundred classes and thousand methods if we won't be actually using TypeScript. In order to have typings for the editor, we'd also need to redesign some APIs with TS's limitations in mind.\r\n\r\nThere's also an option of manually providing typings for a smaller subset of editor API just like @burtonator proposed. This is something that also crossed our minds. However, what subset are we talking about? @burtonator mention React component. We could also consider some top-level integration API like the \\`.create()\\` method, the config object, etc. But then @SolidZORO mentions the writer, so a plugin-level API.\r\n\r\n### HELP NEEDED 💗\r\n\r\nWhat I'm actually interested (and let's treat this as a poll) – what subset would be sufficient for you? Can you all list classes/props/methods/typedefs that your implementation use? That would be of real help for us. Perhaps there's indeed something that we could do relatively cheaply and still satisfy a significant number of cases."", 'author': 'Reinmar'}, {'body': 'I was a person who was originally frustrated by the lack of types, but I don’t understand why people are still complaining here.\r\n\r\nSince there are types in the DefinitelyTyped package this should be a non-issue.\r\n\r\nThe DefinitelyTyped project is intended to provide types for packages that don’t have types. This project is not a typescript project and has no type definitions, therefore it makes sense that the types be in DefinitelyTyped.\r\n\r\nIt’s not a big deal to install types from @types/... where required. You almost certainly already do this for other packages.\r\n\r\nSo really, if the ckeditor team doesn’t have resources for, or doesn’t consider it a priority to dedicate resources to adding types here (remembering it’s not a typescript project), and if the types in DefinitelyTyped are insufficient (I’m no longer on the project where I was using creditor5 with angular so I haven’t actually tried it out) then an issue should be opened at DefinitelyTyped to improve them.\r\n\r\nSee the DefinitelyTyped package:\r\n- https://www.npmjs.com/package/@types/ckeditor__ckeditor5-core (Also installs the related -engine and -utilis packages as dependencies).\r\n\r\nThe code is at:\r\n- https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/ckeditor__ckeditor5-core/index.d.ts\r\n- https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/ckeditor__ckeditor5-engine/index.d.ts\r\n- https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/ckeditor__ckeditor5-utils/index.d.ts\r\n\r\nAlso, for reference:\r\n- https://stackoverflow.com/a/39907679/1751497\r\n- https://definitelytyped.org/\r\n- https://www.typescriptlang.org/docs/handbook/declaration-files/consumption.html\r\n\r\nIf the ckeditor team can help flesh out the types then great, but if not then the community will have to step up. I can understand that people might think that ckeditor is a company offering a product and they should do it, especially if you’re paying them a subscription fee, but they are not offering it as a paid typescript product so I think that’s a non-argument.', 'author': 'rooby'}, {'body': ""> Since there are types in the DefinitelyTyped package this should be a non-issue.\r\n> ...\r\n> It’s not a big deal to install types from @types/... where required. You almost certainly already do this for other packages.\r\n\r\nHere's a counter-opinion from someone who has been using TS in large-scale projects for ~4 years now: while I respectfully acknowledge and commend the hard work of the community in making the DefinitelyTyped repo what it is, there are some areas it will always fall short in.\r\n\r\nHaving had to rely on community types for many packages over the years, one thing I constantly encounter – so often it becomes an actual time sink – is community type definitions that fall behind the actual definitions, i.e. because of minor version updates. Sometimes they're just plain wrong and it's not even a version inconsistency, it's just human error.\r\n\r\nI've personally submitted a number of PRs to fix DefinitelyTyped type definitions – I promise I don't idly sit and complain about these things. But that doesn't stop me from recognizing that the only real 'holistic' solution is when the type definitions are generated automatically on new builds direct from the author. It just isn't sustainable to expect the community to religiously watch for every new patch.\r\n\r\nMicrosoft's **[dts-gen](https://github.com/Microsoft/dts-gen)** is a good place to start for incorporating type definitions into a library without rewriting it for Typescript.\r\n\r\n"", 'author': 'wosevision'}, {'body': ""@wosevision Exactly my thinking. Especially that if we'd offer official typings, there will be even bigger expectation that they are flawless. It's different when it's community-driven and different when it's getting official.\r\n\r\n**If** we'll decide to provide official typings for at least a small subset of CKEditor 5 API, we must have automated testing for all that. Ideally, the entire extraction must be automated too. dts-gen or https://github.com/englercj/tsd-jsdoc could probably be of some help here, but my guess is that we'd end up with something customized, the same way we ended up heavily customizing JSDoc to fit our needs.\r\n\r\nIf you start estimating the amount of work needed to put up a reliable system for that, you realise that there's no quick win. Also, long-term migrating to TypeScript sounds like a better option so that makes burning days of work on a flawed, incomplete solution even worse idea.\r\n\r\nI may be wrong thinking this. But that's how it looks to me now."", 'author': 'Reinmar'}, {'body': '> long-term migrating to TypeScript sounds like a better option so that makes burning days of work on a flawed, incomplete solution even worse idea.\r\n\r\nAgree 100%. The long-term solution is always the better one. I usually only put `dts-gen` out there when it seems like there\'s 0 intention of moving the codebase to TS, but if that\'s potentially on your roadmap, you\'ll have more holistic results that way for sure.\r\n\r\n> to put up a reliable system for that, you realise that there\'s no quick win\r\n\r\nNot necessarily! Granted, the CKEditor codebase is no ""regular"" library and would definitely represent its own unique challenges simply by the sheer scale of it. _But_ – the process of ""migrating"" a JS file to TS is quite literally just changing the file extension! That doesn\'t make it a ""good"" TS file by any measure, but if it was valid JS to begin with, it will compile (albeit with complaints).\r\n\r\nSetup and tooling are obviously a whole other matter, but the basic act of changing a JS file to TS and giving it a bunch of `any` types will still provide a basic level of autocompletion. They have a pretty good [starter guide](https://www.typescriptlang.org/docs/handbook/migrating-from-javascript.html).', 'author': 'wosevision'}, {'body': ""I absolutely agree with what both of you are saying in the last few comments.\r\nIt would definitely be preferable that types are in here instead of in the @types packages for the reasons wosevision mentioned, however I think a half-baked solution is probably not going to be much better than what we already have.\r\n\r\nI think there would be benefits for the whole package to move to development in typescript and types coming as part of that, but obviously that comes down to resourcing vs perceived benefit (and probably wouldn't happen outside of a major version increment).\r\n\r\nThat piece of work is also not really something that could easily be community driven, since it's going to touch all the code and also build tools, so needs to be sensibly fit in around other work that's going on."", 'author': 'rooby'}, {'body': ""I think that if it was easier to develop types and override then this wouldn't be SUCH a major issue but the main challenge I have is that I need to override some @types but I can't really do that without setting up my own private npm repo - which is a pain.\r\n\r\nAlso, you can't define your own '@types' namespace without it having a path which then breaks when using lerna with --hoist.  :-/\r\n\r\nI've been using github for this too but that's not easier either because I can't just push to it.\r\n\r\nAre there @types for react too?"", 'author': 'burtonator'}, {'body': 'Any news/updates on this issue? When will it have typings?', 'author': 'ParrotStone'}, {'body': '2021...yet still', 'author': 'kidzen'}, {'body': ""Nice product, but I can't use it without Types.\r\n"", 'author': 'vbomfim'}, {'body': ""Can't use ckeditor in my vue3 project for the lacking typings"", 'author': 'BoringDays'}, {'body': ""@vbomfim  @BoringDays  I ended up using TinyMCE. It's easier to use and has typyings.\r\n\r\nI know CKEditor has a paid version but with the lack of features like typings, it is not worth the money."", 'author': 'IonelLupu'}, {'body': ""I have used CKEditor all my life, I can't believe i looking up alternatives because of Typings support.  "", 'author': 'Laxusgee'}, {'body': 'Hi. What about react typings? ', 'author': 'popuguytheparrot'}, {'body': 'Short update regarding DefinitelyTyped:\r\n\r\nYou may have observed, that typings for `DefinitelyTyped` got updated recently by @fedemp, and a lot of more typings got added ([see closed and pending PRs](https://github.com/DefinitelyTyped/DefinitelyTyped/pulls?q=is%3Apr+sort%3Aupdated-desc+ckeditor5+author%3Afedemp+)).\r\n\r\nBut as JSDoc of CKEditor comes with flaws, these typings carry on and enhance the flaws (like for example properties marked as readonly in JSDoc, but which require to be writeable by extending classes).\r\n\r\nCurrently, we handle this by bug-reports at DefinitelyTyped, but perhaps the better way to go is to report a bug regarding JSDoc here. This would be an immediate gain for JavaScript developers, as well as the TypeScript community, which is in need of easy to rebuilt typings from existing sources.', 'author': 'mmichaelis'}, {'body': 'Hi, what about Vue typings?', 'author': '0biWanKenobi'}, {'body': 'Need typings!', 'author': 'jperg2tami'}, {'body': 'If you all want typings for Typescript, please help by approving PRs .e.g https://github.com/DefinitelyTyped/DefinitelyTyped/pull/57571', 'author': 'fedemp'}, {'body': 'Need typings!', 'author': 'rsuardi'}, {'body': '```shell\r\nnpm i --save-dev @types/ckeditor__ckeditor5-build-classic\r\nnpm i --save-dev @types/ckeditor__ckeditor5-build-balloon\r\n```', 'author': 'johnmanko'}, {'body': '> ```shell\r\n> npm i --save-dev @types/ckeditor__ckeditor5-build-classic\r\n> npm i --save-dev @types/ckeditor__ckeditor5-build-balloon\r\n> ```\r\n\r\nare these official? why not add them to each package ?', 'author': 'nadavsinai'}, {'body': ""> > ```shell\r\n> > npm i --save-dev @types/ckeditor__ckeditor5-build-classic\r\n> > npm i --save-dev @types/ckeditor__ckeditor5-build-balloon\r\n> > ```\r\n> \r\n> are these official? why not add them to each package ?\r\n\r\nIIRC, they are not official (thus, by CKEditor-team) but a contribution. Anyone could provide more packages. Unfortunately, they are also not always in sync with the actual implementation – most of the time, it is the JSdoc to blame, which provides wrong details. That's why I sometimes report such JSdoc issues to CKEditor, hoping for better generated typings next time."", 'author': 'mmichaelis'}, {'body': ""If somebody has some minutes, know enough about CKEditor, and can test some types, these PR's need approval.\r\n\r\nhttps://github.com/DefinitelyTyped/DefinitelyTyped/pulls?q=is%3Aopen+is%3Apr+author%3Afedemp+draft%3Afalse"", 'author': 'fedemp'}, {'body': ""Hey,\r\n\r\nFollowing the points from this thread, I implemented an example of how to use ckeditor in Angular. \r\n\r\nTo be clear, for most scenarios you'd probably just want to use ckeditor's [regular Angular component](https://ckeditor.com/docs/ckeditor5/latest/installation/getting-started/frameworks/angular.html) - but this shows how you can actually use the editor without needing that component, if you need that for whatever reason.\r\n\r\nIt also includes `@types/ckeditor__ckeditor5-build-classic` in order to allow intellisense, since that would be very helpful if you want to use ckeditor in this way.\r\n\r\nRepo: [Jake-Thomas-Hall/ckeditor-angular-example](https://github.com/Jake-Thomas-Hall/ckeditor-angular-example)"", 'author': 'Jake-Thomas-Hall'}, {'body': 'Some good news, everyone: #11704 :)', 'author': 'Reinmar'}, {'body': ""Some status update.\r\n\r\nWe're doing a good progress [migrating packages](https://github.com/ckeditor/ckeditor5/issues/11704). We covered more than 50% of them, including all the core ones (that are by far the biggest ones). So in general, it feels like we're 75% done.\r\n\r\nOnce all packages are migrated, we'll start publishing the types to npm. So far, those are omitted as they would be incomplete.\r\n\r\nKeep your fingers crossed, TS is coming :runner:"", 'author': 'Reinmar'}, {'body': 'Some good news :)\r\n\r\n:white\\_check\\_mark:\xa0 We migrated all the code already.\r\n\r\n:rocket:\xa0 And released 37.0.0-alpha.0 of all open source CKEditor 5 packages. This version **introduces typings for all these packages.**\r\n\r\nMore information: https://github.com/ckeditor/ckeditor5/issues/11704#issuecomment-1446345091', 'author': 'Reinmar'}, {'body': '**TypeScript migration at the finish line** :runner: \r\n\r\nSince last update from @Reinmar, we have released new alpha versions that improve types and fix bugs. We also released an alpha of our Vue integration and are in the process of updating the React and Angular integrations. For more detailed updates, you can follow our progress here: [#11704](https://github.com/ckeditor/ckeditor5/issues/11704).\r\n\r\n  \r\nSo far we are quite happy with the results, but any feedback would be greatly appreciated.', 'author': 'filipsobol'}, {'body': 'Alpha versions of the React and Angular integrations are now also available. See #11704 for more details.', 'author': 'filipsobol'}, {'body': 'Hi everyone,\r\n\r\nI am happy to announce that we have completed the migration of CKEditor5 project to TypeScript! We appreciate all the feedback that we received from the community during this process.\r\n\r\nFor those who are interested, we have documented the migration steps in our documentation ([here](https://ckeditor.com/docs/ckeditor5/latest/updating/guides/update-to-37.html)). We have also created a separate documentation on how to use CKEditor5 in TypeScript projects ([here](https://ckeditor.com/docs/ckeditor5/latest/installation/working-with-typescript.html)).\r\n\r\nWe would like to invite everyone to provide their feedback in our other ticket ([#12027](https://github.com/ckeditor/ckeditor5/issues/12027)) where we will track our future improvements.\r\n\r\nMoving forward, we plan to update [CKEditor5 Online Builder](https://ckeditor.com/ckeditor-5/online-builder/) and [ckeditor5-package-generator](https://ckeditor.com/docs/ckeditor5/latest/framework/guides/plugins/package-generator/using-package-generator.html) to use TypeScript, make typings work with [DLLs](https://ckeditor.com/docs/ckeditor5/latest/framework/contributing/development-environment.html#building-dlls), migrate [the inspector](https://github.com/ckeditor/ckeditor5-inspector) to TS, update our Contribution Guide and other documentation to reflect that it is now a TypeScript project, and other miscellaneous stuff.\r\n\r\nThank you all for your continued support and contributions.', 'author': 'arkflpc'}]","['type:feature', 'support:2', 'squad:core']",CLOSED,504,"['11704', '504']","Typings for TypeScript Hi,

I'm currently using ckeditor5 in TypeScript and I think it would be pretty usefull to ship typings definition. Is there something planed about this? I think it should be possible to auto generated them based on the JS files.

**EDIT (by @Reinmar, 07.04.2023)**: It's out! 🚀 Read more in https://github.com/ckeditor/ckeditor5/issues/504#issuecomment-1499078025.

**EDIT (by @filipsobol, 22.03.2023)**: The TypeScript migration is at the finish line. Alpha release of version 37 with typings is already out and being tested. We have updated our Vue integration and are in the process of updating React and Angular. You can follow the progress here: https://github.com/ckeditor/ckeditor5/issues/11704.

**EDIT (by @Reinmar, 23.08.2022)**: It's happening. We're [migrating to Typescript](https://github.com/ckeditor/ckeditor5/issues/11704) 🎉 Having official typings is the main goal of the migration. 

---

If you'd like support for TypeScript to be introduced react with 👍 to this post.",14,21
ckeditor,ckeditor5,Table feature,"We plan to bootstrap the table feature very soon, so let's do it under this ticket. I don't have any concrete information yet, so I'll just leave this ticket like this...",Reinmar,['jodator'],"[{'body': 'One of the first things we have to settle on is how will we represent a table in the model structure. The easiest and more obvious solution is by doing it how it is in HTML. However, keep in mind that our model gives us some room for experiments. Maybe we can gain something from a different table representation in the model, as we did with lists. Lists converters got much complicated in the process, but we were able to use same mechanisms and algorithms as we had for paragraphs which was a big gain.\r\n\r\nAnother thing is an ""add row + add column"" collaborative-editing problem. We had an idea to use deltas for this, but since we already decided to drop deltas, we will have to resort to either having this managed by post-fixer or having this managed by a custom model data structure.', 'author': 'scofalik'}, {'body': ""This is a preliminary analysis of requirements.\r\n\r\nWhen it comes to use cases, we want to support **data tables**. This comes in contrast with the use case we don't want to support at this stage, which is clearly described in the [HTML5 specs for tabular data](https://www.w3.org/TR/html5/tabular-data.html):\r\n\r\n> Tables should not be used as layout aids. Historically, many Web authors have tables in HTML as a way to control their page layout making it difficult to extract tabular data from such documents.\r\n\r\nWe'll still see developers asking for the above though and we'll handle such requests in a separate issue.\r\n\r\n## Macro elements\r\n\r\nThe macro elements of the table feature are:\r\n\r\n * Table: represents the whole table, including the following elements:\r\n  * Row: a sequence of horizontal cells.\r\n  * Column: a sequence of vertical cells.\r\n  * Cell: the smallest unit of the table.\r\n * Caption: a caption description for the table.\r\n\r\nUsers would like to operate on all the above elements.\r\n\r\nHTML-wise, we follow the [Editor Recommendations specs on tables](http://ckeditor.github.io/editor-recommendations/features/table.html).\r\n\r\n## Features\r\n\r\nThese list of features may be incomplete and it focuses just on UX and high-level features. The order in the list matters as this is the proposed way to releasing enhancements to the feature as a whole.\r\n\r\n**Milestone 1 (MVP)**\r\n\r\n * Insert / remove tables.\r\n * CSS controlled styling (kinda nothing to do here... it should just work).\r\n * Custom selection (table).\r\n * Type and insert content inside cells and the caption.\r\n * Caret navigation through the cells.\r\n * Insert row / column.\r\n * Remove row / column.\r\n * Merge cells (if UX is found for it, otherwise part of Milestone 2 will have to be anticipated).\r\n * Table copy / paste.\r\n * Set the table header rows.\r\n\r\n**Milestone 2**\r\n\r\n * Custom selection (table + row + columns + cells).\r\n * Multi-cell styling.\r\n * Multi-cell copy/paste.\r\n * Styles, which set classes to tables, to define alignment (like image styles) and different design for different kinds o table.\r\n * Set the table footer rows.\r\n * Column resizing.\r\n * Rearrange rows and columns (move them). This may be available as copy/cut + paste first and later as DnD.\r\n \r\n## Details\r\n\r\n * Captions should work exactly like in the image feature.\r\n * Cells selection can contain multiple cells in both horizontal and vertical directions in the middle of a table.\r\n * Coping cells sends a table to the clipboard based on the subset of cells selected.\r\n * Pasting behavior is to define, much probably based on CKEditor 4.\r\n"", 'author': 'fredck'}, {'body': ""> CSS controlled styling (kinda nothing to do here... it should just work).\r\n\r\n There's one tricky bit – table's default width. If you won't set any then it's 0px and you can't put caret inside table cells. 100% width is not always preferred. Padding in table cells may help, but it's not applied by all developers (depends on page styling). Etc, etc.\r\n\r\nI also wonder if we shouldn't propose a similar feature here as image styles. In a certain way, tables are very similar to images (they are blocks of content). (EDIT: I can see it's in milestone 2)\r\n\r\n> Set the table header rows.\r\n\r\nTwo things here:\r\n\r\n* do we need/want to support setting multiple rows as headings?\r\n* should we support the `scope=row` attribute? (I guess this is a valid, but rare case so we can skip it, yes?)\r\n\r\n> Merge cells (if UX is found for it, otherwise part of Milestone 2 will have to be anticipated).\r\n\r\nWhat about split?"", 'author': 'Reinmar'}, {'body': '> One of the first things we have to settle on is how will we represent a table in the model structure. The easiest and more obvious solution is by doing it how it is in HTML. However, keep in mind that our model gives us some room for experiments. Maybe we can gain something from a different table representation in the model, as we did with lists. Lists converters got much complicated in the process, but we were able to use same mechanisms and algorithms as we had for paragraphs which was a big gain.\r\n\r\nI am against having a custom data format (no surprise ;) ). I was thinking about some formats we could use and don\'t see much we can get using a custom one, but I see much we can lose.\r\n\r\n> Another thing is an ""add row + add column"" collaborative-editing problem. We had an idea to use deltas for this, but since we already decided to drop deltas, we will have to resort to either having this managed by post-fixer or having this managed by a custom model data structure.\r\n\r\nI think that post-fixers are the way to go.', 'author': 'pjasiun'}, {'body': 'I was thinking about the UX of the feature and this is what it should look like IMO:\r\n\r\n> Insert / remove tables.\r\n\r\nThat should be possible using the (main) toolbar button, which opens a drop-down representing a clickable, highlightable grid. Using the grid, the user selects the shape of the table they want to insert at current caret location (2x2, 1x4, etc.).\r\n\r\n![image](https://user-images.githubusercontent.com/1099479/31708726-2e8cb84a-b3f0-11e7-9df6-f2b694948ba9.png)\r\n\r\n\r\n> CSS controlled styling (kinda nothing to do here... it should just work).\r\n\r\nI think the table should come with an in–place toolbar just like the image, which offers different styles (side table, full–width table).\r\n\r\n![image](https://user-images.githubusercontent.com/1099479/31708736-3536e92c-b3f0-11e7-8d95-7daa84e103a7.png)\r\n\r\n\r\n> Type and insert content inside cells and the caption.\r\n\r\nThe caption ""field"", just like in images, should appear once the selection lands in the table.\r\n\r\n> Insert row / column.\r\n> Remove row / column.\r\n> Merge cells\r\n\r\nThis is where things become tricky. Most text processors use contextual menus to provide these features and we don\'t have this option. That\'s why we must either:\r\n* put these features in the table button in the toolbar, e.g. below the grid, when the selection is in the table\r\n* create a contextual menu that floats in the table cell, which sounds like a better idea to me.\r\n\r\n![image](https://user-images.githubusercontent.com/1099479/31708741-3ae7425e-b3f0-11e7-991f-dbb62421bf1f.png)\r\n\r\n\r\nWe can\'t use the image–like balloon toolbar here because it\'s huge and we can\'t cover the content with it. There\'s a lot of things happening around the table so this UI must be small and smart.\r\n\r\nBTW: Let\'s create a ckeditor5-table repository with dedicated issues for the engine, UX, UI, etc..', 'author': 'oleq'}, {'body': ""When it comes to the caption, it is still unclear to me if this should be in the bottom, like in images, or at the top.\r\n\r\nAnyway, I found this interesting resource, which clarifies how CSS can control its positioning:\r\nhttps://www.w3.org/Style/Examples/007/figures.en.html\r\n\r\nSo, it doesn't matter much if we output it at the beginning or the end of the figure element. Maybe to make it in line with the image element, we leave it at the end."", 'author': 'fredck'}, {'body': ""@oleq Regarding the dropdown in table cells, how it would work? Would the menu button appear only when the cell is selected? I'm wondering how a table with some financial data would look like (plenty of narrow columns with numbers) with this proposal."", 'author': 'wwalc'}, {'body': ""> Regarding the dropdown in table cells, how it would work? Would the menu button appear only when the cell is selected?\r\n\r\nYes, that was the idea. Then I figured it might not be the best idea after all because of what you just mentioned. Knowing that, I'd rather see a balloon attached to the table cell instead. "", 'author': 'oleq'}, {'body': ""@oleq I thought Froala's (https://www.froala.com/wysiwyg-editor) way of handling the UI for tables -- both for inserting them and for modifying them on cell click, is pretty clean and simple. \r\n\r\nWith regards to the modifying of tables on cell click, they do have quite a bit of bells and whistles though, hence resulting in quite a bit of buttons. "", 'author': 'jefflam'}, {'body': ""Thanks for the feedback, @jefflam.\r\n\r\nWe've been considering that option and we're now undecided whether to attach the toolbar to the cell or to the table, so we have just one static toolbar floating around, instead of having it moving over the table contents whenever I move between cells.\r\n\r\nWhat do you think about that option?"", 'author': 'fredck'}, {'body': 'There are definitely pros and cons for both decisions, but the concern I would have with one fixed static toolbar would be the lack of context in making changes: i.e. adding a row below a certain row, or a column to the left of another column.\r\n\r\nIn addition, in the event that a table grows quite large, would the static table toolbar -- if say, positioned at the top of the table -- make it a hassle for the end user to make changes contextually and quickly?', 'author': 'jefflam'}, {'body': 'By static, I meant to say that it is always in a predictable place, no matter the cell you are. If you start scrolling on a long table, we could think about having the balloon stuck to the top of the viewport, always visible to the user. But this is indeed a problem to take in consideration though.', 'author': 'fredck'}, {'body': 'An additional problem is that the editor itself may have its main toolbar stuck at the top of the viewport, so the table ballon could collide with it.\r\n\r\nIt sounds like the ""on cell"" toolbar is leading this contest.', 'author': 'fredck'}, {'body': 'Just wanted to mention that there is another use case for tables when creating HTML email content. For HTML email, ""tables"" are really the only possible mechanism for controlling page layout. So for users creating html email content, there may be a layout table (maybe 100% height and width, invisible borders). Then one cell in that layout table would typically be the main content cell. That cell would contain paragraphs, headings, images, or even other (tabular data) tables.\r\n\r\nProbably, a layout table would be managed by a separate plugin - like an Email Layout Template plugin. I just mention it here so that when designing support for regular tables, you can consider the possibility that a table might be nested inside a cell of another table. The normal table editor should probably ignore the layout table (maybe some class name says ""I\'m not a real table, ignore me"") as any layout properties would be set by the layout-table plugin.\r\n\r\nI guess the only real concern for your regular table plugin would be that the regular table implementation does not break if the table is inside a cell of an outer layout table.\r\n', 'author': 'DaveInMaine'}, {'body': '> Probably, a layout table would be managed by a separate plugin - like an Email Layout Template plugin.\r\n\r\n+1\r\n\r\nVery well said... I totally agree that this is a different use case that requires its own implementation to work right.\r\n\r\nBut then, what is the really right way to face this requirement? Have an editor where you can insert a layout table inside of it or having an application tool that handles the layout tables and then create small little editors inside such table cells, eventually even having different editors for different purposes (title, text, image, etc.).\r\n\r\nI would go with the later option. It is much more work ofc, but it makes a much more powerful solution.', 'author': 'fredck'}, {'body': 'Closing in favor of https://github.com/ckeditor/ckeditor5-table/issues/1 (and issues reported in that repository).', 'author': 'Reinmar'}, {'body': 'I reported https://github.com/ckeditor/ckeditor5-table/issues/3 to discuss functional requirements for this feature. ', 'author': 'Reinmar'}, {'body': ""I can see that people look for this ticket, so I'm reopening. I shouldn't have closed it until it's done.\r\n\r\nThe entire development of this feature takes place in the http://github.com/ckeditor/ckeditor5-table repository.\r\n\r\n* https://github.com/ckeditor/ckeditor5-table/issues/3 contains functional requirements\r\n* https://github.com/ckeditor/ckeditor5-table/issues/1 discusses the UI aspects"", 'author': 'Reinmar'}, {'body': '@Reinmar\r\n\r\nHave you considered providing support for [complex, accessible data tables](http://html.cita.illinois.edu/nav/dtable/dtable-example-complex.php)? ', 'author': 'retro-blaster'}, {'body': ""For now, we're going to implement the accessibility level defined in http://ckeditor.github.io/editor-recommendations/features/table.html. With time, we may add more a11y features. That would certainly be nice and we'd like to do that.\r\n\r\nBut, at the same time, we will need to be realistic about the cost which may be significant because designing and implementing usable UI for such features is generally tough. And I'm curious what's the benefit. How many people will actually use such a feature? How many of them will do this correctly? How often people create such complex tables? Actually, the longer I think about this the more I'd see this as a 3rd party plugin. "", 'author': 'Reinmar'}, {'body': 'cc @Comandeer ', 'author': 'Reinmar'}, {'body': '[Those](https://github.com/ckeditor/ckeditor5/issues/610#issuecomment-392863811) sound like advanced HTML editing features, while we must be focused on creating a text editor that produces quality content without making it too technical. It must be a well-balanced solution without going to extremes in any direction.\r\n\r\nThe ""summary"" feature is one we could take in consideration for the future, though, similarly to what we have for the ""alt"" attribute in images.', 'author': 'fredck'}, {'body': ""> I can see that people look for this ticket, so I'm reopening. I shouldn't have closed it until it's done.\r\n\r\n@Reinmar Since we've [published Table feature as an MVP](https://github.com/ckeditor/ckeditor5-table/releases/tag/v10.0.0) I think that this might be closed as the discussion on particular tables features & bugs would go to http://github.com/ckeditor/ckeditor5-table. Also many ideas from this ticket are already obsolete.\r\n\r\n"", 'author': 'jodator'}]","['type:feature', 'domain:accessibility']",CLOSED,610,[],"Table feature We plan to bootstrap the table feature very soon, so let's do it under this ticket. I don't have any concrete information yet, so I'll just leave this ticket like this...",16,5
ckeditor,ckeditor5,Style feature,"I would like to propose the **Styles** feature as a replacement for the “Font Face”, ""Font Size”, “Color” and any other inline styling features that target formatting only.

The reason for that is not a rage to “ban formatting features”. It is a matter of UX and to give a tool that better satisfied the user intention. If I’m not wrong, ofc.

I believe that users are not really intended to use such formatting features just for fun. Like making every part of a document with different font size. If they use the font size, they do this on purpose, for a specific scope, and they much probably reuse that same size in other places for that same scope.

Some use cases that came to my mind:

*   Change font face of **all titles** to a font that I like more.
*   Change the font face of **the whole content** to a font that I like more.
*   Change the size of the text in a paragraph to a smaller/bigger size because they have a specific secondary purpose in my document. Reuse the size in other places.
*   Change the color with the same intention as the above point. Reuse that color in other places
*   Change the style of the whole paragraph so it displays as an alert, information, tip, etc.

In other words, the user is either controlling the styles of the document and elements in it, or using a set of block/inline styles for a specific purpose. They don’t need the whole range of styles, just the ones that they like. Actually, having so many options makes it easy to make mistakes, like using different font sizes in different places, just because one doesn’t remember precisely which size was used before, etc.

That’s why I propose the introduction of the “Styles” feature, very similar to what we have in CKEditor 4 but limited to CSS classes only.

## When used in a “controlled content” case

In many situations, developers want to have control on which styles users can apply to content, based on CSS designed by graphic designers. This is the best case for the use of the Styles feature, ofc. So not much to add here.

## When used in a “non-controlled content” case

In document editing applications, similar to Google Docs, developers have no reason to limit users to a list of styles. Users should have the possibility of controlling how their documents look like with more freedom.

I want to still propose the Style feature for this case, pushing the application developers to be more creative and to create UI/UX solutions that will be more efficient for the end user. In fact, we ourselves could propose a solution specific to document editing.

One of the ideas is that the application gives to the user the possibility of configuring and defining styles. Here is a mockup of an example of how this could be handled:

![image](https://user-images.githubusercontent.com/630060/32378805-fb0e956a-c0ab-11e7-9860-1402cddcb4db.png)

The idea is that specific plugins could be created to allow users to customize existing styles or even to add new ones. This could give enough freedom on the customization of the document styles and create specific custom styles, with the additional benefit of making them easy to reuse in the same editing session and in the future.

This is targetting document editor solutions, so the application should be able to store the user customizations, which could be outputted by the editor as JSON or whatever proper format.

I strongly believe that this would cover the great majority of use cases for these formatting features, in a more elegant way and with better results for the end user.

---

If you'd like this feature implemented, react with :+1: to this post.",fredck,[],"[{'body': 'As much as I understand the idea, I have the feeling that it is too many clicks to get to the point. 1st click in a drop-down, then click ""add new style"", then choose what I wanted to change and then accept it. It is 4 clicks, instead of 2 (i.e. click the color dropdown and choose a color).\r\n\r\nAlso, I think that ""Customize text style"" should include bold and italic too. And maybe text input for a label (name).\r\n\r\nMy second question would be how to differentiate between inline styles and box styles (for example some fancy styling for particular keywords vs alert boxes). Would it be two dropdowns or one mixed? Would it be possible to add box styles too?\r\n\r\nI have mixed feelings. I wholeheartedly agree that users want to reuse given style and I also agree that having some set styles to reuse will limit mistakes (""which yellow did I just use?""). I also can\'t really think of an easier execution of this feature if we want to give the possibility to add styles during content editing.', 'author': 'scofalik'}, {'body': '> As much as I understand the idea, I have the feeling that it is too many clicks to get to the point. 1st click in a drop-down, then click ""add new style"", then choose what I wanted to change and then accept it. It is 4 clicks, instead of 2 (i.e. click the color dropdown and choose a color).\r\n\r\nI\'m not totally happy about that as well. It\'s the ""something for something"" approach... more pain at first to benefit from it later.\r\n\r\nMaybe we can come with other ideas. For example, showing the formatting features straight inside the select box, instead of the ""Add style"" option. If you name the style, you ""save"" it. Otherwise, it is applied to the text immediately.\r\n\r\nIn other words, brainstorming is needed here.\r\n\r\n> Also, I think that ""Customize text style"" should include bold and italic too. And maybe text input for a label (name).\r\n\r\nYes, I didn\'t want to make things more complicated in the mockup, but in fact, we can have anything that CSS can give us.\r\n\r\n> My second question would be how to differentiate between inline styles and box styles (for example some fancy styling for particular keywords vs alert boxes). Would it be two dropdowns or one mixed? Would it be possible to add box styles too?\r\n\r\nWe\'ll see.... probably all in one, but it\'s not important to define right now.', 'author': 'fredck'}, {'body': 'Talking with @wwalc, he proposed something like the ""Copy Format"" feature for the purpose of adding a custom style to the list. This would require to still have the Font Face, Font Size and Color features on the toolbar, while avoiding them was exactly one of my goals with this feature, but it is a possible way for it as well.', 'author': 'fredck'}, {'body': 'I was thinking about this too but ultimately decided that this might not be the best idea. But maybe it is?', 'author': 'scofalik'}, {'body': '> I would like to propose the Styles feature as a replacement for the “Font Face”, ""Font Size”, “Color” and any other inline styling features that target formatting only.\r\n\r\nBefore I get into details: should the development of markers etc. be stopped because of that? \r\n\r\n> That’s why I propose the introduction of the “Styles” feature, very similar to what we have in CKEditor 4 but limited to CSS classes only.\r\n\r\nBecause if it\'s limited to CSS classes only, it\'s not an actual replacement of ""inline styling features that target formatting only"". I\'m a little bit confused here. ', 'author': 'oleq'}, {'body': '> Before I get into details: should the development of markers etc. be stopped because of that?\r\n\r\nNo. This issue doesn\'t have any priority defined.\r\n\r\n> Because if it\'s limited to CSS classes only, it\'s not an actual replacement of ""inline styling features that target formatting only"". I\'m a little bit confused here.\r\n\r\nI meant to say that this features should be a solution to replace ""unwanted"" formatting only features. It is not limited to that, ofc, as the whole power of CSS can be used when defining styles.', 'author': 'fredck'}, {'body': '""Dropdown in dropdown"" is not the best idea for the user (but like you said is something for something). Anyway, it\'s worth to take the risk and in the future, the ""Customized text style"" can be very intuitive for everyone. \r\n\r\nI really like this possibility of storing custom styles in JSON (for example I\'m working with CK5 on my blog and I need to copy styles to another website). ', 'author': 'dkonopka'}, {'body': ""As much as I like this idea, I also agree that people will not get it. People are able to define styles in MS Word for more than 10 years and they are still not familiar with the concept. Even editing huge documents where it would save them hours of work.\r\n\r\nThe concept of styles, even if is very nice, useful, and correct, for us, developers, is just too complex for people who don't think in an abstract way. Styles are an abstraction and, even if we find them natural, you need to have abstract thinking to get why they are useful."", 'author': 'pjasiun'}, {'body': ""While I agree that styles are the way to go for technical users, I believe that non-technical users would have a hard time with the added layer of abstraction. As such, I share @pjasiun's concerns. "", 'author': 'davidpolberger'}, {'body': 'I thought about the style feature when replying in #8117. I thought that perhaps the style feature could have two modes – semantical (class-based) and visual. In the latter form, perhaps it could work very closely to how it\'s happening in Word – where a ""Heading 1"" style is actually a combination of many non-semantical features (font color, font size, font family, alignment, margins, etc.)', 'author': 'Reinmar'}, {'body': ""> The concept of styles, even if is very nice, useful, and correct, for us, developers, is just too complex for people who don't think in an abstract way. Styles are an abstraction and, even if we find them natural, you need to have abstract thinking to get why they are useful.\r\n\r\nYes, it is kinda abstract for users, but from my perspective, the styles-select worked very well for our customers in the past. We've simply removed the font-size, color, etc. inline-style nightmare things, so the user is forced to use the selects. Sure, this is our specific use case in Drupal, there cases where this is not enough, but we don't talk about replacing the inline-style settings for color, font-family, ... ? So this shouldn't be a problem.\r\n\r\nThe disgusting thing with the styles-select is, that classes aren't combinable, so if you need something like .large-text combined with .primary-color you need to define an extra entry .large-text.primary-color. If you have multiple sizes and multiple colors, this will end up in a very, very large, confusing list. But indeed, this is a complicated task to solve, at least if some kind of 'rules' needed to check if .class-x is allows to be combined with .class-y. \r\n\r\nBut maybe this could be solved by just using separated selects for font-family, font-size and font-color (+ something like the styles-select for predefined styles, for something like pill-/tag style AND maybe the user defined styles, who are just built from these three options, so it is still class based and only predefine some combinations).\r\n\r\nOne last word to the user defined custom styles: If I understand the wireframes right, the user would be able to define a new style by set font-size, -color and -family for a new style, what is stored in JSON and the Editor will serve CSS styles for this? Especially for the font-size, keep in mind, that the user may need to define different font-sizes for different device sizes => Media Queries. So.. another point why the predefined classes-only-apporach is probably the better way. As i wrote above, maybe the user should just be able to combine existing classes (font-size, -family & color).\r\n\r\nFurthermore, it's probably worth to have a look at the Wordpress Gutenberg editor. I really like the way they solved the color and font-size settings. Modules/Themes are able to override the list of available colors and everything is a class, never an inline-style. The users got a preview of the styles in the settings sidebar.. if we had something like this in the CKE dropdowns.. this would be sooo nice:\r\n\r\n![gutenberg_headings_options_panel](https://user-images.githubusercontent.com/4060313/132211557-dfd148ed-4ddd-4b58-8ac5-91ca3be55c9a.png)\r\n"", 'author': 'thomasfrobieter'}]","['status:discussion', 'type:feature', 'support:2']",OPEN,648,[],"Style feature I would like to propose the **Styles** feature as a replacement for the “Font Face”, ""Font Size”, “Color” and any other inline styling features that target formatting only.

The reason for that is not a rage to “ban formatting features”. It is a matter of UX and to give a tool that better satisfied the user intention. If I’m not wrong, ofc.

I believe that users are not really intended to use such formatting features just for fun. Like making every part of a document with different font size. If they use the font size, they do this on purpose, for a specific scope, and they much probably reuse that same size in other places for that same scope.

Some use cases that came to my mind:

*   Change font face of **all titles** to a font that I like more.
*   Change the font face of **the whole content** to a font that I like more.
*   Change the size of the text in a paragraph to a smaller/bigger size because they have a specific secondary purpose in my document. Reuse the size in other places.
*   Change the color with the same intention as the above point. Reuse that color in other places
*   Change the style of the whole paragraph so it displays as an alert, information, tip, etc.

In other words, the user is either controlling the styles of the document and elements in it, or using a set of block/inline styles for a specific purpose. They don’t need the whole range of styles, just the ones that they like. Actually, having so many options makes it easy to make mistakes, like using different font sizes in different places, just because one doesn’t remember precisely which size was used before, etc.

That’s why I propose the introduction of the “Styles” feature, very similar to what we have in CKEditor 4 but limited to CSS classes only.

## When used in a “controlled content” case

In many situations, developers want to have control on which styles users can apply to content, based on CSS designed by graphic designers. This is the best case for the use of the Styles feature, ofc. So not much to add here.

## When used in a “non-controlled content” case

In document editing applications, similar to Google Docs, developers have no reason to limit users to a list of styles. Users should have the possibility of controlling how their documents look like with more freedom.

I want to still propose the Style feature for this case, pushing the application developers to be more creative and to create UI/UX solutions that will be more efficient for the end user. In fact, we ourselves could propose a solution specific to document editing.

One of the ideas is that the application gives to the user the possibility of configuring and defining styles. Here is a mockup of an example of how this could be handled:

![image](https://user-images.githubusercontent.com/630060/32378805-fb0e956a-c0ab-11e7-9860-1402cddcb4db.png)

The idea is that specific plugins could be created to allow users to customize existing styles or even to add new ones. This could give enough freedom on the customization of the document styles and create specific custom styles, with the additional benefit of making them easy to reuse in the same editing session and in the future.

This is targetting document editor solutions, so the application should be able to store the user customizations, which could be outputted by the editor as JSON or whatever proper format.

I strongly believe that this would cover the great majority of use cases for these formatting features, in a more elegant way and with better results for the end user.

---

If you'd like this feature implemented, react with :+1: to this post.",5,7
ckeditor,ckeditor5,Feature Request: Cycle Through List Styles on Click,"Rather than supporting ""ordered list"" and ""ordered list"" alone, the styles of those elements should be supported. Particularity for ordered lists the browser default might be numbers but the user may want roman numerals or an alphabetical order. This isn't something a designer should impose on the user (aka all OL's will be Roman).

To facilitate this without a drop down and because there are a small number of options the user could cycle through these styles on click of the icon with ""none"" either being the last or first on the cycle, currently the only option is ""do you want an un/ordered list or not?"".

https://www.w3schools.com/cssref/pr_list-style-type.asp
https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol

User expectation on ordered lists is different from ours as developers, sometimes a user may expect that if a list is not ordered that when they click the ordered list icon it will auto-magically reorder. There is also in HTML the missing semantic of order direction (asc/desc) this can be inferred with a class or data attribute.

**Start Attribute**
There is the ""start"" attribute to consider ... as a user I may not want my list to start at ""1"" there's a bias in code for all lists to start at 1 but what if I want to split my list and have a paragraph of text between step 6 and 7? I can't my second list would start at 1. This isn't good.

**Reverse the Order**
https://www.w3schools.com/tags/att_ol_reversed.asp",duracell80,[],"[{'body': '> This isn\'t something a designer should impose on the user (aka all OL\'s will be Roman).\r\n\r\nI disagree. When it\'s the content what matters, the styling plays a secondary role. And list style is about content styles. It may be imposed by the designer and it may differ e.g. depending on a target medium (print, website, newsletter, etc.).\r\n\r\nOf course, there are also valid scenarios (e.g. a ""document editor"") where such feature is required in the editor. Therefore, while not obligatory,  we know that this feature would be welcomed by many developers.\r\n\r\nThanks for the ideas how it could be implemented. Perhaps not all ideas make sense for a rich-text editor like CKEditor 5 because we\'re not building next MS Word, but we\'ll see.\r\n\r\n---\r\n\r\n> There is the ""start"" attribute to consider ... as a user I may not want my list to start at ""1""\r\n\r\nYup, +1. Would be good to handle this one day.\r\n\r\n> Reverse the Order\r\n\r\nAnd this too.\r\n\r\n---\r\n\r\nYou reported a single ticket with 3 different features mentioned in it. I\'ll close this one and report these things separately. **EDIT:** Or maybe a single ticket but more general.', 'author': 'Reinmar'}, {'body': 'I reported:\r\n\r\n* https://github.com/ckeditor/ckeditor5/issues/1031\r\n* https://github.com/ckeditor/ckeditor5/issues/1032', 'author': 'Reinmar'}]",['resolution:duplicate'],CLOSED,1028,[],"Feature Request: Cycle Through List Styles on Click Rather than supporting ""ordered list"" and ""ordered list"" alone, the styles of those elements should be supported. Particularity for ordered lists the browser default might be numbers but the user may want roman numerals or an alphabetical order. This isn't something a designer should impose on the user (aka all OL's will be Roman).

To facilitate this without a drop down and because there are a small number of options the user could cycle through these styles on click of the icon with ""none"" either being the last or first on the cycle, currently the only option is ""do you want an un/ordered list or not?"".

https://www.w3schools.com/cssref/pr_list-style-type.asp
https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol

User expectation on ordered lists is different from ours as developers, sometimes a user may expect that if a list is not ordered that when they click the ordered list icon it will auto-magically reorder. There is also in HTML the missing semantic of order direction (asc/desc) this can be inferred with a class or data attribute.

**Start Attribute**
There is the ""start"" attribute to consider ... as a user I may not want my list to start at ""1"" there's a bias in code for all lists to start at 1 but what if I want to split my list and have a paragraph of text between step 6 and 7? I can't my second list would start at 1. This isn't good.

**Reverse the Order**
https://www.w3schools.com/tags/att_ol_reversed.asp",5,1
ckeditor,ckeditor5,Implement list styles,"The user should be able to choose the style of a list.

E.g. a bulleted list may use circles, squares, dots, etc. as its bullets. A numbered list can use roman, lower-roman, decimal, etc.

Also, there's a [`list-style-position`](https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-position) and custom numbering using CSS counters.

## Markup

This feature is about styles, but we cannot tell what styles precisely (as I mentioned above it can be the list style type, but also more styling can be used). Therefore, it seems to be a good idea if this feature will use classes (on `<ol/ul>` elements) because it gives the most flexibility.

## Styling nested lists

Document editors like GDocs allow styling more than one list at a time:

![image](https://user-images.githubusercontent.com/156149/40367036-c3acf66e-5dd8-11e8-941e-de368187567f.png)

This ensures better consistency between documents and, in general, may bring a better UX to the user. We could consider how this can be implemented by us (if we'll use classes then it should be pretty straightforward).

## UI

To be discussed.

Related: https://github.com/ckeditor/ckeditor5/issues/1028#issue-325032492



",Reinmar,['pomek'],"[{'body': '@Reinmar \r\n\r\nWe also in an eed of providing such roman numbers and lower alpha lists in CKEditor5. Is it being developed and available to use now? ', 'author': 'SKGGitHub'}, {'body': ""This is the only reason I don't use CKEditor in my projects"", 'author': 'ymsstudios'}, {'body': 'Ping - please ', 'author': 'skerbis'}, {'body': 'That is a important feature like dl dd dt text lists.', 'author': 'joachimdoerr'}, {'body': 'My team needs this too 👍 ', 'author': 'tbredin'}, {'body': 'This is a very important feature - indents have FULL outline#ing path - because we often in chats amongst colleagues say things like - ""see 1.2.2.3 - we need to change the color...."".\r\n\r\nWith multipage documents, it really impossible to know the full #ing.  \r\n\r\nALSO - and I don\'t know this would be a new issue/thread or relate here, but it would be EXTREMELY HELPFUL to be able to ""collapse"" an indent.  Is that currently possible at all?  Is this an issue that has been raised before?\r\n\r\nThanks!', 'author': 'dick-airlink'}, {'body': 'From our point of view it is the only missing feature to call CKE5 a professional editor.  ', 'author': 'skerbis'}, {'body': ""@joachimdoerr In reply to https://github.com/ckeditor/ckeditor5/issues/5653#issuecomment-549047594: list styles is indeed a nice feature that we'd really like to have in v5. However, as a team, we don't have unlimited time so the features we can ship each release are unfortunately limited. For instance, this release we're preparing much anticipated code blocks feature, alongside with table styling which is critical foundation for our further table improvements.\r\n\r\nIn case this feature is critical for your business you can also [contact us](https://ckeditor.com/contact/) to check if there is any way to speed up the development of the feature you or your customer needs.\r\n\r\nThat being said, list styles feature is on our radar for some time, and we definitely want to have it implemented soon. But we don't have any precise ETA now."", 'author': 'mlewand'}, {'body': ""@mlewand thanks for your answer. I work only in open source context with your product because in the professional usage it is not usable without that list styling option. It is really unfortunate that your focus isn't exactly on the important basic functions. With all basics your product will be get the first place on the list of rich text editors."", 'author': 'joachimdoerr'}, {'body': ""@joachimdoerr happy to hear that you do open source too. In this case there's also a straight way to speed things up: we're open for pull requests, so feel free to contribute to the feature of your choice."", 'author': 'mlewand'}, {'body': '> It is really unfortunate that your focus isn\'t exactly on the important basic functions.\r\n\r\nWe follow the feedback that we get from the community and our business partners. For us, ""important"" means things that most people/companies request. This specific feature is high on this list but there were ones which are higher and we focus on those at the moment. As soon as we\'ll resolve those blockers, we will be able to focus on list styles. \r\n\r\n> With all basics your product will be get the first place on the list of rich text editors.\r\n\r\nThat\'s our goal but it does not happen overnight ;) There are as many use cases as there are projects out there so we have to gather feedback, listen to it but still make decisions that will best work in a long term\r\n\r\n> so feel free to contribute to the feature of your choice.\r\n\r\nI\'d add that to increase the likelihood of such a contribution landing in the official code base, it helps if it\'s designed and implemented in sync with the core team. If you\'d be considering investing your time in it, please ping us so we can share some thoughts. But it\'s, of course, completely fine if it just stays a 3rd party addition (and it\'s easier this way).', 'author': 'Reinmar'}, {'body': 'I wonder if this thread also covers a similar issue with lists (mostly numbered lists) - atm there is no way to change numbering color/font-style/font-weight etc. So when the user changes styles of text within list item (like color), the color of the numbers does not change(and there is no other way to change it). \r\n\r\nThis problem has been very frustrating for our users and I would like to know if it is on the roadmap and part of this issue.\r\n\r\nI was going to implement some plugin to fix this based on Font and/or List plugins, but it seems like a pretty challenging task to do. I would appreciate some advice and directions on how this can be implemented and if it is possible at all at the current state of the ckeditor5.\r\n', 'author': 'pshurygin'}, {'body': ""That's a separate issue. It's how browsers render list bullets/numbers. None of the HTML-based editors I know handle this as it's pretty ugly. But with CKEditor 5's engine features we could actually solve this. Please report a separate ticket for this so we can discuss it there."", 'author': 'Reinmar'}, {'body': '@Reinmar created a new ticket here: https://github.com/ckeditor/ckeditor5/issues/5752', 'author': 'pshurygin'}, {'body': ""Hi, can we know about the timeline for this feature development? I along with my team even had a meeting with your team about some features and Ckeditor5 is going to be our editor prime time even for professional usage. Please give us a timeline of this feature, it's long overdue. Thank you. "", 'author': 'mikr13'}, {'body': '@MiKr13 please contact the CKSource team using the means that you used previously (most likely, through the contact form or support@cksource.com). This will allow the team to respond with necessary details.', 'author': 'Reinmar'}, {'body': '@Reinmar what is the status of this feature?', 'author': 'joachimdoerr'}, {'body': 'Any advance here???', 'author': 'rootlinux2'}, {'body': 'I like CKE5 but because of the missing ""standard"" formatting features, I can use it not the way I and our editors would like. \r\nBecause of the missing list features our editors can not use it for complex documents. \r\n', 'author': 'skerbis'}, {'body': 'Because I have requested this feature numerous times for several years, I would guess this will never happen.A real pity. I\'m assuming that it is perhaps either impossible to do or that just too few of us really need it and/or have voiced our support of it.I\'m 67, so I must pass the torch to a younger generation of seekers. Hopefully I will be able to peer in from the great beyond from time to time to see if they have arrived into the promised land.Godspeed to you all.On Jul 8, 2020 2:08 AM, Thomas Skerbis <notifications@github.com> wrote:\nI like CKE5 but because of the missing ""standard"" formatting features, I can use it not the way I and our editors would like.\nBecause of the missing list features our editors can not use it for complex documents.\n\n—You are receiving this because you are subscribed to this thread.Reply to this email directly, view it on GitHub, or unsubscribe.', 'author': 'dick-airlink'}, {'body': ""I switched to TinyMCE because of this. I have given Ckeditor5 as other option in my app, whichever client wants to use. It's great that data is compatible between these two completely. "", 'author': 'mikr13'}, {'body': 'Hi all! I know it\'s disappointing if a single feature missing in the product makes that product unusable in your case. I also understand how bizarre it may seem that CKE5 still does not implement this feature.\r\n\r\nYet, here we are, still planning it, among many other things.\r\n\r\nBut to move things forward, I\'d like to ask you for feedback on what do you actually expect from ""List styles"". It\'s a wide topic and for sure we won\'t be able to tackle it all at once. I\'d like to ensure that we get the most in the shortest time.\r\n\r\nI can see the following sub-features:\r\n\r\n*   **(A)** ability to change the type of bullet (dot, circle, square, etc.) or number (decimal, roman, whatever) of a single list item or all selected items,\r\n*   **(B)** ability to change the start number of a numbered list (option **B2**: the ""reverse"" option),\r\n*   **(C)** ability to have lists automatically numbered like this `1.`, `1.1.`, `1.2.`, `1.2.1.`, ...,\r\n*   **(D)** ability to chose one of predefined setups of entire list with nested lists (like what you have in e.g. Google Docs, when you can at once define that the first level will use dots, the second level will use circles, etc.),\r\n*   anything else?\r\n\r\n**Please write** which of these (A, B, B2, C, D) are must-have, nice-to-have or I-dont-care to you.\r\n\r\n**Also,** I\'d be interested whether you\'d like this feature to use classes or inline styles.\r\n\r\nYour feedback will help us properly prioritise these sub-features. Thank you in advance!', 'author': 'Reinmar'}, {'body': '(A) is the biggest feature missing. Change form 1. 2. to a) b) oder I II IV ..  inside the list level\r\nI think (B), (C) and (D) will be very difficult to implement in html context. But, it would be very very cool 😃\r\n\r\n> Also, I\'d be interested whether you\'d like this feature to use classes or inline styles.\r\n\r\nClasses would be nice and let us keep the markup ""cleaner""\r\n', 'author': 'skerbis'}, {'body': 'From my opinion (A) and (C) get the most benefit for users.', 'author': 'joachimdoerr'}, {'body': ""I'd like to add that we receive quite a lot of requests where list styles are mentioned in the context of Paste from Word support. It looks like it is expected that CKEditor supports not only editing list styles in CKEditor itself, but that CKEditor has also a decent support for pasting content from MS Word that contains styled lists in MS Word.\r\n\r\nWhen adding a reply please confirm if a very good support for pasting lists from MS Word is also important for you."", 'author': 'wwalc'}, {'body': 'In my case (A, B, C)\r\n![image](https://user-images.githubusercontent.com/24574267/86941828-6669c000-c112-11ea-8f9e-41113a51dab2.png)\r\n\r\n', 'author': 'rootlinux2'}, {'body': '* [x] Research: https://github.com/ckeditor/ckeditor5/issues/7736 \r\n* [x] Feature editing part: https://github.com/ckeditor/ckeditor5/issues/7801\r\n* [x] Feature UI part: https://github.com/ckeditor/ckeditor5/issues/7803\r\n* [x] Docs: https://github.com/ckeditor/ckeditor5/issues/7804', 'author': 'pomek'}, {'body': 'dfdfffff****\r\ndgdf\r\n\r\n- gfgfdg\r\n\r\n- gfgfgfg\r\n\r\n- gfgf\r\n\r\nfgfgfgfg\r\ndgfd\r\n\r\n1. dgdfg\r\n2. fgfhf\r\n3. [https://youtu.be/aMoBxEUmcjA](url)', 'author': 'CZKishan'}]","['type:feature', 'package:list', 'support:2', 'Epic', 'squad:core']",CLOSED,1031,['1028'],"Implement list styles The user should be able to choose the style of a list.

E.g. a bulleted list may use circles, squares, dots, etc. as its bullets. A numbered list can use roman, lower-roman, decimal, etc.

Also, there's a [`list-style-position`](https://developer.mozilla.org/en-US/docs/Web/CSS/list-style-position) and custom numbering using CSS counters.

## Markup

This feature is about styles, but we cannot tell what styles precisely (as I mentioned above it can be the list style type, but also more styling can be used). Therefore, it seems to be a good idea if this feature will use classes (on `<ol/ul>` elements) because it gives the most flexibility.

## Styling nested lists

Document editors like GDocs allow styling more than one list at a time:

![image](https://user-images.githubusercontent.com/156149/40367036-c3acf66e-5dd8-11e8-941e-de368187567f.png)

This ensures better consistency between documents and, in general, may bring a better UX to the user. We could consider how this can be implemented by us (if we'll use classes then it should be pretty straightforward).

## UI

To be discussed.

Related: https://github.com/ckeditor/ckeditor5/issues/1028#issue-325032492



",14,2
ckeditor,ckeditor5,[Proposal] Provide TS type checking based on JSDoc annotations,"About half a year ago TS started parsing JSDoc comments inside JS, so the JS code can be statically type checked during the development without the need to write in TS. During the last hackathon, I've created a sample based on our codebase showing what can be achieved by introducing such a tool.

Here are some screenshots with examples of what the _typed JS_ is capable of:

* Deep hints with proper docs:
<img width=""817"" alt=""screenshot 2018-12-17 at 12 29 54"" src=""https://user-images.githubusercontent.com/2768047/50085083-4fded980-01f9-11e9-9852-3373f34ce56c.png"">

* Advanced type checking:
<img width=""892"" alt=""screenshot 2018-12-17 at 12 30 31"" src=""https://user-images.githubusercontent.com/2768047/50085089-540af700-01f9-11e9-913a-6884afdd331d.png"">

* Support for generic types:
<img width=""693"" alt=""screenshot 2018-12-17 at 12 33 32"" src=""https://user-images.githubusercontent.com/2768047/50085092-566d5100-01f9-11e9-9f50-7a39acf27a98.png"">

* Support for iterators:
<img width=""349"" alt=""screenshot 2018-12-17 at 12 47 05"" src=""https://user-images.githubusercontent.com/2768047/50085318-fa56fc80-01f9-11e9-9910-aae3c39a8d41.png"">

A full list of all supported JSDoc tags so far is available [here](https://github.com/Microsoft/TypeScript/wiki/JSDoc-support-in-JavaScript) and the list is still growing. For now, the valuable missing ones for us are `@property` and `@method` - https://github.com/Microsoft/TypeScript/issues/28730, `@impements` (there's a workaround), `@public`, `@protected` and `@private`.

But there's not going to be all roses. TS doesn't directly support mixins. It supports only inheritance with one base class. This could be somehow workaround, but it would need to be thought through.

```ts
/**
 * @extends B
 * @extends C
 */
class A extends combineMixins( B, C ) {}
```

How to test it?
1. Add `tsconfig.json` file in the main repository

```json
{
	""compilerOptions"": {
		""allowJs"": true,
		""checkJs"": true,
		""resolveJsonModule"": true,
		""lib"": [
			""es2015"",
			""es2016"",
			""es2017"",
			""dom""
		],
		""target"": ""es6"",
		""moduleResolution"": ""node"",
		""noEmit"": true
	},
	""include"": [
		""packages/ckeditor5-utils/src/**/*.js""
	]
}
```

2. Install TS locally or globally (`npm install typescript`).
3. To have IDE support, make sure that the typescript plugin is installed in your IDE (VS Code has built-in support).

4. Try to find if there's a `enforce checkJs option` in your IDE
<img width=""378"" alt=""screenshot 2018-12-17 at 13 26 01"" src=""https://user-images.githubusercontent.com/2768047/50087366-1bbae700-0200-11e9-8c83-832b2c18ff65.png"">

If the above option isn't possible, try to add `// @ts-check` at the beginning of the file, check if that works for you.

5. Run `tsc` command.

I've created a branch for testing that has ~30 errors - https://github.com/ckeditor/ckeditor5-utils/tree/typechecking (mixins on this branch are temporarily removed)

Pros:
* The codebase is typed and most typos or issues like incorrect interface implementations can be found during the development.
* There's a strong connection between docs and code, a bi-directional check.
* Support for all advanced TS types, generic, mapped types, conditional types, strong JS code [type inference](https://www.typescriptlang.org/docs/handbook/type-inference.html), type casting.
* Type checking can be part of a CI with the `tsc` command.
* There're typings for packages that we use already - e.g. `lodash`, `mocha`.
* There's an option to add support for TS checking incrementally, there are `// @ts-check`, `//@ts-nocheck` and `// @ts-ignore` flags
* There's (an open ticket about generation Typescript Declaration files (`.d.ts`))[https://github.com/Microsoft/TypeScript/issues/7546] - it will solve the https://github.com/ckeditor/ckeditor5/issues/504 out of the box.

Cons:
* All `module:...` references becomes invalid (so the codebase would need a massive `search&replace` refactoring).
* The tool for docs' generation needs some changes and refactoring - it would need to support relative references, `import()` references and relative references that comes from imports to name few.
* No support for `@implements` for classes (there's a workaround), `@method` and `@property` in classes doesn't work (methods an properties work out of the box if they are provided, so this issue touches only not defined ones).
* Mixins are a big unknown, it needs an investigation on how we could solve that issue.
* New tool that needs support.
* Not everyone is familiar with how the TS works (Although the deep knowledge isn't needed to start).
* Additional dependencies and config files.

Unknown:
* IDE support - this works in the VSCode, not sure how it works in others.


I'm interested in hearing your opinions.",ma2ciek,[],"[{'body': ""I would love to see this working with CKE5 code. For me I see problems with:\r\n\r\n> All module:... references becomes invalid \r\n\r\nwhich implies this (AFAICS):\r\n\r\n> The tool for docs' generation needs some changes and refactoring - it would need to support relative references, import() references and relative references that comes from imports to name few.\r\n\r\nSo it means that instead of: `import Plugin from '@ckeditor/ckeditor5-core/src/plugin';`\r\nwe need to write `import Plugin from '../../ckeditor5-core/src/plugin';` ?\r\n\r\n> No support for @implements, @method and @property in classes.\r\n\r\nAlso is sad :("", 'author': 'jodator'}, {'body': ""> So it means that instead of: import Plugin from '@ckeditor/ckeditor5-core/src/plugin';\r\nwe need to write import Plugin from '../../ckeditor5-core/src/plugin'; ?\r\n\r\nNo, it means that instead of `@type {module:core/plugin~Plugin}` you need to import it and write `{@type Plugin}` or write `@type {import('@ckeditor/ckeditor5-core/src/plugin')}`. The `module:...` is a custom absolute path so that' why TS and our IDEs don't understand them.\r\n\r\n> No support for `@implements`, `@method` and `@property` in classes.\r\n\r\nFor the usage of `@implements` for classes there's a workaround as I told earlier.\r\n\r\nFor methods and properties, all work for defined ones, but it's harder to use them with not defined.\r\n\r\nE.g. in this scenario there's no need for anything extra:\r\n\r\n```js\r\nclass A {\r\n  constructor() {\r\n     this.b = new B();\r\n  }\r\n\r\n  someMethod() {\r\n  }\r\n}\r\n```\r\n\r\nBut the following won't work.\r\n\r\n```js\r\nclass A {\r\n  constructor() {\r\n     /**\r\n      * @member {String} prop\r\n      */\r\n      this.set( 'prop', 0 );\r\n  }\r\n}\r\n```\r\n\r\nIt'd need to be changed to at least something like this:\r\n\r\n```js\r\nclass A {\r\n  constructor() {\r\n     /**\r\n      * @type {String}\r\n      */\r\n      this.prop;\r\n\r\n      this.set( 'prop', 0 );\r\n  }\r\n}\r\n```"", 'author': 'ma2ciek'}, {'body': '* `@implements` support: https://github.com/Microsoft/TypeScript/issues/17498\r\n* `@property` and `@method` support: https://github.com/Microsoft/TypeScript/issues/28730', 'author': 'ma2ciek'}, {'body': ""I didn't make it clear, but the TS team still works actively on the support for JSDoc: https://github.com/Microsoft/TypeScript/issues?q=is%3Aopen+is%3Aissue+label%3A%22Domain%3A+JSDoc%22"", 'author': 'ma2ciek'}, {'body': 'I think that since our code is already statically typed and considering the number of effort we put to describe all parameters in docs the most complicated part of the work is already done. Not using TypeScript at this point would we a huge waste of the potencial. The only question is when we will have time to work on it.', 'author': 'pjasiun'}, {'body': 'We recently found a bug which would be noticed automatically by TS: https://github.com/ckeditor/ckeditor5-engine/pull/1613/files/6c630fd38a634cd46c9433a896606cb814f719b0#r242981678', 'author': 'pjasiun'}, {'body': ""I've been asked about my thoughts so...\r\n\r\nIt looks extremely promising. Migrating our source code to TS doesn't seem to be a good option (see this thread – https://twitter.com/reinmarpl/status/1082199078463782912), but a lighter integration with TS makes much more sense. We'll be type safe, future safe and inclusive."", 'author': 'Reinmar'}, {'body': '> but a lighter integration with TS makes much more sense\r\n\r\nProbably the most sane thing to do now :) Looking forward to it.', 'author': 'jodator'}, {'body': ""I've started to work on some solution to the mixins problem but I've hit that issue - https://github.com/Microsoft/TypeScript/issues/18732\r\n\r\nThe idea of mixins was pretty promising though as mixins could be a part of the inheritance system which TS can understand - http://justinfagnani.com/2015/12/21/real-mixins-with-javascript-classes/.\r\n\r\nThe corresponding TS code would look like this:\r\n\r\n```ts\r\ntype Constructor<T> = new (...args: any[]) => T;\r\n\r\nfunction Mixin1<T extends Constructor<{}>>(SuperClass: T = class {}) {\r\n  return class extends SuperClass {\r\n    foo() {}\r\n  };\r\n}\r\n\r\nfunction Mixin2<T extends Constructor<{}>>(SuperClass: T = class {}) {\r\n  return class extends SuperClass {\r\n    bar() {}\r\n  };\r\n}\r\n\r\nclass C extends Mixin1(Mixin2()) {\r\n  baz() {\r\n    this.foo();\r\n\tthis.bar();\r\n  }\r\n}\r\n```\r\n\r\nIn short, the problem in the JS + JSDoc code is that JSDoc template types can't be narrowed, while TS requires to know here that a type is a constructor type. "", 'author': 'ma2ciek'}, {'body': 'The question is how often we do have 2 mixins for a single class. All I can find is `DomEmitterMixin` + `ObservableMixin` in some UI components (`FocusTracker` and `View`) and `DataApiMixin` + `ElementApiMixin` for editors. This is something we could solve if it would be the only blocker. However, there might be more combinations like `extends` + `mixin`. Or we might have other TypeScript blockers, not related to mixins.', 'author': 'pjasiun'}, {'body': ""> This is something we could solve if it would be the only blocker. However, there might be more combinations like `extends` + `mixin`\r\n\r\n~I think that this is main reason that causes problem. But I'm not sure if we couldn't live with interafaces instead of mixins (in the docs)?~ oh.. https://github.com/Microsoft/TypeScript/issues/17498 So they don't support `@implements` annotation :/\r\n"", 'author': 'jodator'}, {'body': ""The number of such problems isn't big, but that number can grow at any time.\r\n\r\nThis is a list of files that use mixins and inheritance or many mixins at the same time\r\n\r\nObservable plugins:\r\n* `packages/ckeditor5-autosave/src/autosave.js`\r\n* `packages/ckeditor5-upload/src/filerepository.js`\r\n\r\nEmittable classes that inherit over basic classes:\r\n* `packages/ckeditor5-engine/src/model/liverange.js`\r\n* `packages/ckeditor5-engine/src/model/liveposition.js`\r\n* `packages/ckeditor5-ui/src/viewcollection.js`\r\n* `packages/ckeditor5-engine/src/view/editableelement.js`\r\n\r\nEditors that mix DataApiMixin, ElementApiMixin? and inherit over the base Editor class:\r\n* `packages/ckeditor5-editor-balloon/src/ballooneditor.js`\r\n* `packages/ckeditor5-editor-inline/src/inlineeditor.js`\r\n* `packages/ckeditor5-editor-classic/src/classiceditor.js`\r\n* `packages/ckeditor5-editor-decoupled/src/decouplededitor.js`\r\n\r\nOthers:\r\n* `packages/ckeditor5-ui/src/view.js`: Mixes `DomEmitterMixin` and `ObservableMixin`\r\n* `packages/ckeditor5-utils/src/focustracker.js`: Mixes `DomEmitterMixin` and `ObservableMixin`.\r\n\r\n> I think that this is main reason that causes problem. But I'm not sure if we couldn't live with interfaces instead of mixins (in the docs)? oh.. Microsoft/TypeScript#17498 So they don't support @implements annotation :/\r\n\r\nYep, for now, the only way to check that a class `implements` an interface is to check whether the instance of that class in the constructor is applicable to the given type (interface)."", 'author': 'ma2ciek'}, {'body': 'To sum up the needed work to migrate the code and fix some problems, I\'m creating a list of tasks needed to align our codebase and tools for this change:\r\n\r\n* Mixins need to be changed to other forms (although the corresponding `@mixes` tags should be preserved to keep our JSDoc plugin working - It touches source and tests of all 6 mixins and their usage in the code.\r\n\t- [ ] estimate the effort in man-days\r\n\t- [ ] check whether new mixins won\'t create some problems (they will work internally differently as they will use the prototype inheritance instead of copying)\r\n* All code references (`module:...`) in all places need to be changed\r\n\t- [ ] test if ESLint won\'t complain about references used only inside JSDoc comments, maybe there\'s a plugin for that\r\n\t- [ ] test if JSDoc can work with `import()` syntax and relative imports with a custom plugin\r\n\t- [ ] estimate the effort in man-days\r\n* [x] Test whether JSDoc is the optimal documentation parser  Maybe it\'d be worth to leave the buggy JSDoc3 and try something else (~like https://github.com/TypeStrong/typedoc with a spec defined here: https://github.com/Microsoft/tsdoc~, unfortunately, the output differs much from the JSDoc\'s output) as there\'s a chance that advanced type system and the above imports would work out of the box.\r\n* Fix potential errors that come from typos / invalid interfaces or interface implementations\r\n* [ ] Check whether our different semantic for the `@protected` tag is not a problem\r\n* Create a migration guide containing some advanced usage examples and some tips\r\n* [x] Check how the TS configuration should look like (and where it should be stored - in the main repository or in the sub-repositories)\r\n* [ ] Check how typings for our codebase should be released and where they should be stored (NPM package or DefinitelyTyped)\r\n* Add type-checking script on the CI (10min-30min for all repositories)\r\n* [ ] Check whether type-checking our tests is worth to do now.\r\n* [ ] Check how to store typedefs and interface definitions (`.md` files / `.js` files or maybe `.d.ts` files) and how much work is needed\r\n* [ ] Check other potential blockers\r\n\r\n## Notes:\r\n\r\n### JSDoc\r\nJSDoc could be a big problem here. I\'ve been trying to add some hooks so the parser, so the special type references (like `@type {import()}` can be normalized to the JSDoc-friendly way but I\'ve failed. We\'re also kinda stopped here because the newest JSDoc is rewritten on top of the Babylon parser and we can\'t use it breaks our existing plugins. So the only way to use the JSDoc would be to fork the parser but it\'s not a long-term solution.\r\n\r\n#### The potential solutions:\r\n * find a better documentation parser []\r\n * create a new generation parser that we\'d need to maintain on top of the [Babel parser / TS parser (especially that sounds like a quick win: [Using-the-Compiler-API](https://github.com/Microsoft/TypeScript/wiki/Using-the-Compiler-API#using-the-type-checker)) / Acorn]. If we\'d want to go with interfaces written in `.d.ts` then TS parser should be a good solution. Otherwise, 🤷\u200d♂️ This task shouldn\'t be as big as I thought. I did a simple PoC using the Acorn and I could quickly achieve very simple doclets from tokenizer. But IMO Acorn isn\'t as future-proof as other 2 mentioned parsers.\r\n\r\n### TS configuration\r\n\r\nThe configuration could be stored in each package, so it will be easy to test it on CI. This will also improve the experience for anyone using TS supporting IDE)  The `include` can be extended to `src` and `tests` directories if we\'d like to type check our tests too.  \r\n\r\n```json\r\n{\r\n\t""compilerOptions"": {\r\n\t\t""allowJs"": true,\r\n\t\t""noEmit"": true,\r\n\t\t""checkJs"": true,\r\n\t\t""target"": ""es6""\r\n\t},\r\n\t""include"": [\r\n\t\t""src/**/*.js""\r\n\t]\r\n}\r\n```\r\n\r\n### Potential blockers:\r\n* https://github.com/Microsoft/TypeScript/issues/18732 (mixins)\r\n* https://github.com/Microsoft/TypeScript/issues/17498 (`@implements tag`)\r\n* https://github.com/Microsoft/TypeScript/issues/7546 (generating `.d.ts` files)\r\n\r\nI\'ll be updating the above list.', 'author': 'ma2ciek'}, {'body': ""## The summary - pros, cons, and blockers\r\n\r\n### Cons, blockers:\r\n- Our mixins should be changed as TS's type of classes can't be changed - it can create some problems (see https://github.com/ckeditor/ckeditor5/issues/1415#issuecomment-455109054). It's also currently blocked because of the Microsoft/TypeScript#18732.\r\n- A huge cost of migrating the whole codebase to TS (`module:` references, mixins, events)\r\n- Migrating links (although they could stay as they are, it's not a must)\r\n- Creating a doclet generator on top of the TS compiler.\r\n- Blockers:\r\n\t- [generating declaration files from JS code](https://github.com/Microsoft/TypeScript/issues/7546)\r\n\t- [`@implements` tag](https://github.com/Microsoft/TypeScript/issues/17498)\r\n\r\n### Pros:\r\n- TS community and people that use IDEs supporting TS would gain typings for our code. This would improve the DX much (code completion, type checking, docs) The community is quickly growing (https://github.com/ckeditor/ckeditor5/issues/504).\r\n- Tool for type checking our docs and code, so docs won't be isolated as they are now. Caught typos that we have now.\r\n- Code completion from IDEs - lower time cost for people jumping into the project or parts of the code that they don't know.\r\n- Easier refactoring as symbols are connected\r\n- Improvements in docs (e.g. for callbacks: `Function` -> `(param1: typeA) => typeB`)."", 'author': 'ma2ciek'}, {'body': 'Recently a guide for creating TS-correct JS code was published on https://www.typescriptlang.org/docs/handbook/type-checking-javascript-files.html', 'author': 'ma2ciek'}, {'body': 'looks like the only blocker left is https://github.com/Microsoft/TypeScript/issues/7546 ?but there is a pre-packed version for that https://github.com/microsoft/TypeScript/pull/32372#issuecomment-520628857', 'author': 'isubasti'}, {'body': ""Hi @isubasti, the real blocker is the huge amount of lines to rewrite (plus possible blockers that weren't caught yet) that requires dozens (or hundreds?) of man-days. The codebase constantly grows and this task gets bigger and more complicated with each passing day."", 'author': 'ma2ciek'}, {'body': ""> the problem in the JS + JSDoc code is that JSDoc template types can't be narrowed, while TS requires to know here that a type is a constructor type.\r\n\r\nThis works:\r\n\r\n```js\r\n/**\r\n * @template { new(...args) => {} } T\r\n * @param {T} Super\r\n */\r\nconst Mixin = Super => class extends Super {\r\n    mixinMethod() { }\r\n}\r\n```\r\n\r\n[Playground Link](https://www.typescriptlang.org/play/?useJavaScript=true#code/PQKhCgAIUgBAXApgWwA4BsCGTIG9IB2iA7gBQB0lmATgOYDOAlJALwB8eAvpNwCpQxYqGpmR5e3AMoBXVImoDg4AMYB7AvXiQAsgEsAHroKtIMudVYdlWevUiJ9SAgBM7Z+XiiRvyA0e2I8AAWqs6kzPic4FEqNnYACjSIBFq4Xt7C1MnwAcGh4Xg80eCxmLaQAMJBuujO9o7Jrjp+BKSJWSkR6ZDK1bW5IWERRTFqGlq9NXUshCSVfc4lk7XkmdkD+YwqC+S+hgQbQ9tT5MvOh+FAA)"", 'author': 'phaux'}, {'body': "">>  the problem in the JS + JSDoc code is that JSDoc template types can't be narrowed, while TS requires to know here that a type is a constructor type.\r\n\r\n> This works:\r\n\r\nYep, it works now thanks to the generic narrowing in the `@template` syntax that wasn't available in the past (https://github.com/microsoft/TypeScript/issues/18732). However, this creates a little bit different syntax like `applyMixin1(applyMixin2(class Foo{} ))` which AFAIK @Reinmar wasn't sure about."", 'author': 'ma2ciek'}, {'body': ""With the 3.8 release TS will understand `@private`, `@protected`, `@public` and `@readonly` modifiers. However, the TS's semantic is different than our in case of the `@readonly` and `@protected` (in case of `@readonly` the property can't be changed outside of the constructor, in case of `@protected` the property/method can't be changed/executed outside of the non-inheriting class).\r\n\r\nRef: https://devblogs.microsoft.com/typescript/announcing-typescript-3-8-beta/, the *JSDoc Property Modifiers* section."", 'author': 'ma2ciek'}, {'body': ""@ma2ciek I've just found [this](https://2ality.com/2020/06/computing-with-types.html#using-intersection-types-for-mixins) approach to mixin ([intersection type](https://www.typescriptlang.org/docs/handbook/advanced-types.html#intersection-types)). Would it solve some issues?\r\n\r\nWithout much digging into it it looks that intersection type follow what we do while using mixins - adding some methods/properties to type.\r\n\r\nThe `extends` path seems like opposite to what we do with mixins and it will probably never work."", 'author': 'jodator'}, {'body': ""This would work if we would export something like `mix( classA, mixinA, mixinB, ... )`. Currently we export a class so its type can't be enhanced by some mixins doing some stuff after the class declaration.\r\n\r\nI also guess that in our case it's not an intersection type, but the type can be somehow computed dynamically using some TS advanced types. The intersection type would work for plain object. In our case we need to mix a class with a class or an object that would ship missing methods."", 'author': 'ma2ciek'}, {'body': ""I'm closing this ticket in favor of #11704."", 'author': 'Reinmar'}]","['resolution:duplicate', 'type:feature', 'support:2', 'domain:dx']",CLOSED,1415,['504'],"[Proposal] Provide TS type checking based on JSDoc annotations About half a year ago TS started parsing JSDoc comments inside JS, so the JS code can be statically type checked during the development without the need to write in TS. During the last hackathon, I've created a sample based on our codebase showing what can be achieved by introducing such a tool.

Here are some screenshots with examples of what the _typed JS_ is capable of:

* Deep hints with proper docs:
<img width=""817"" alt=""screenshot 2018-12-17 at 12 29 54"" src=""https://user-images.githubusercontent.com/2768047/50085083-4fded980-01f9-11e9-9852-3373f34ce56c.png"">

* Advanced type checking:
<img width=""892"" alt=""screenshot 2018-12-17 at 12 30 31"" src=""https://user-images.githubusercontent.com/2768047/50085089-540af700-01f9-11e9-913a-6884afdd331d.png"">

* Support for generic types:
<img width=""693"" alt=""screenshot 2018-12-17 at 12 33 32"" src=""https://user-images.githubusercontent.com/2768047/50085092-566d5100-01f9-11e9-9f50-7a39acf27a98.png"">

* Support for iterators:
<img width=""349"" alt=""screenshot 2018-12-17 at 12 47 05"" src=""https://user-images.githubusercontent.com/2768047/50085318-fa56fc80-01f9-11e9-9910-aae3c39a8d41.png"">

A full list of all supported JSDoc tags so far is available [here](https://github.com/Microsoft/TypeScript/wiki/JSDoc-support-in-JavaScript) and the list is still growing. For now, the valuable missing ones for us are `@property` and `@method` - https://github.com/Microsoft/TypeScript/issues/28730, `@impements` (there's a workaround), `@public`, `@protected` and `@private`.

But there's not going to be all roses. TS doesn't directly support mixins. It supports only inheritance with one base class. This could be somehow workaround, but it would need to be thought through.

```ts
/**
 * @extends B
 * @extends C
 */
class A extends combineMixins( B, C ) {}
```

How to test it?
1. Add `tsconfig.json` file in the main repository

```json
{
	""compilerOptions"": {
		""allowJs"": true,
		""checkJs"": true,
		""resolveJsonModule"": true,
		""lib"": [
			""es2015"",
			""es2016"",
			""es2017"",
			""dom""
		],
		""target"": ""es6"",
		""moduleResolution"": ""node"",
		""noEmit"": true
	},
	""include"": [
		""packages/ckeditor5-utils/src/**/*.js""
	]
}
```

2. Install TS locally or globally (`npm install typescript`).
3. To have IDE support, make sure that the typescript plugin is installed in your IDE (VS Code has built-in support).

4. Try to find if there's a `enforce checkJs option` in your IDE
<img width=""378"" alt=""screenshot 2018-12-17 at 13 26 01"" src=""https://user-images.githubusercontent.com/2768047/50087366-1bbae700-0200-11e9-8c83-832b2c18ff65.png"">

If the above option isn't possible, try to add `// @ts-check` at the beginning of the file, check if that works for you.

5. Run `tsc` command.

I've created a branch for testing that has ~30 errors - https://github.com/ckeditor/ckeditor5-utils/tree/typechecking (mixins on this branch are temporarily removed)

Pros:
* The codebase is typed and most typos or issues like incorrect interface implementations can be found during the development.
* There's a strong connection between docs and code, a bi-directional check.
* Support for all advanced TS types, generic, mapped types, conditional types, strong JS code [type inference](https://www.typescriptlang.org/docs/handbook/type-inference.html), type casting.
* Type checking can be part of a CI with the `tsc` command.
* There're typings for packages that we use already - e.g. `lodash`, `mocha`.
* There's an option to add support for TS checking incrementally, there are `// @ts-check`, `//@ts-nocheck` and `// @ts-ignore` flags
* There's (an open ticket about generation Typescript Declaration files (`.d.ts`))[https://github.com/Microsoft/TypeScript/issues/7546] - it will solve the https://github.com/ckeditor/ckeditor5/issues/504 out of the box.

Cons:
* All `module:...` references becomes invalid (so the codebase would need a massive `search&replace` refactoring).
* The tool for docs' generation needs some changes and refactoring - it would need to support relative references, `import()` references and relative references that comes from imports to name few.
* No support for `@implements` for classes (there's a workaround), `@method` and `@property` in classes doesn't work (methods an properties work out of the box if they are provided, so this issue touches only not defined ones).
* Mixins are a big unknown, it needs an investigation on how we could solve that issue.
* New tool that needs support.
* Not everyone is familiar with how the TS works (Although the deep knowledge isn't needed to start).
* Additional dependencies and config files.

Unknown:
* IDE support - this works in the VSCode, not sure how it works in others.


I'm interested in hearing your opinions.",0,21
ckeditor,ckeditor5,Conversion from simple model to complex view (slot conversion),"Some nested widgets might have a structure that does not map 1:1 all elements inside.

```
(View)                                 (Model)
div.widget                           -> widget
    div.wrapper
        div.inner-wrapper
            div.widget-title
                div.sub-editable     ->    widgetTitle
            div.widget-body
                div.sub-editable     ->    widgetBody
```

Similar case is with current widgets that maps `<figure>` from the view to `<image>` or `<table>` element in the model. So the mapping is not element to element but rather view widget wrapper to model element.

This complicates stuff as to override some parts of such widget conversion requires deeper understanding of the feature. For image it is hard IMO but for tables might be hard as hell for outsiders.

The second part is to showcase how to map view element editable to element in the model so the selection and automatic conversion of children will work out-of-the-box. In such example one would rather convert `div.widget-title` but map the `div.sub-editable` to `widgetTitle` in the model.",jodator,[],"[{'body': 'I\'ve made a PoC of what I call a ""slot conversion"", when we can control where children of a specific model element are being inserted in the view: https://github.com/ckeditor/ckeditor5-core/tree/poc-slot-conversion (updated version in monorepo: https://github.com/ckeditor/ckeditor5/tree/poc/slot-conversion)\r\n\r\n```\r\n(View)                                   (Model)\r\ndiv.container                        <-> container\r\n    div.slot\r\n        foo                          <->     foo\r\n        bar                          <->     bar\r\n```\r\n\r\nThis is a bit different scenario than what you described, because in what you showed @jodator `widgetTitle` gets converted to a specific place and so does `widgetBody`. However, I\'d try to think how to generalise both approaches and document both. I\'ve been often asked about both of them and perhaps they share more common aspects than it initially seems.', 'author': 'Reinmar'}, {'body': ""BTW, this is labeled with `type:docs`, but I think we could also propose an API for that. That'd be much better."", 'author': 'Reinmar'}, {'body': ""Interestingly, the slot conversion that I made a PoC of in https://github.com/ckeditor/ckeditor5/issues/1589#issuecomment-470024072 break widget type around feature. Since the model element is mapped to the slot, the WTA feature does not recognise the widget element as [here](https://github.com/ckeditor/ckeditor5/blob/842c053/packages/ckeditor5-widget/src/widgettypearound/widgettypearound.js#L173-L174) it gets the slot element instead.\r\n\r\nThat could probably be fixed in WTA itself because I don't know why it gets the view element from the model element and not the other way around, but in general, playing with mappings may lead to such issues.\r\n\r\nAfter implementing a couple such widgets I see two things that we should make easier:\r\n\r\n*   Defining a converter that inserts all children of the element being converted into a given container element of the created view structure.\r\n    *   Example: You need two nested containers, one within the other to represent a single model element. And children of that model element should be converted into the nested container.\r\n*   Defining a converter that inserts the view element into a different than default location in the already existing view.\r\n    *   Example: block widget like https://ckeditor.com/docs/ckeditor5/latest/framework/guides/tutorials/implementing-a-block-widget.html but which title and content editable elements should be wrapped with some more markup (that'd normally be generated by the container's converter)."", 'author': 'Reinmar'}, {'body': ""As for a freshman, without any knowledge of CKE5 converters, the problem looks like Shadow DOM content distribution.\r\n\r\nThere was even a proposal from Google for an imperative distribution API:\r\n - https://github.com/w3c/webcomponents/blob/gh-pages/proposals/Imperative-Shadow-DOM-Distribution-API.md\r\n - https://groups.google.com/a/chromium.org/g/blink-dev/c/TNYIAu5E_M4/m/1i7LME9WCwAJ?pli=1\r\n\r\nMaybe we can get some inspiration and naming the native world, to make CKE-specific things easier to understand.\r\n\r\nBTW, why don't we use the actual shadow DOM?"", 'author': 'tomalec'}, {'body': 'Cross-linking table case: https://github.com/ckeditor/ckeditor5/issues/8138#issuecomment-700702745.', 'author': 'jodator'}, {'body': 'Outdated DUP #10294', 'author': 'niegowski'}]","['resolution:duplicate', 'status:discussion', 'type:feature', 'type:docs', 'package:engine', 'domain:dx', 'type:refactor', 'squad:core']",CLOSED,1589,[],"Conversion from simple model to complex view (slot conversion) Some nested widgets might have a structure that does not map 1:1 all elements inside.

```
(View)                                 (Model)
div.widget                           -> widget
    div.wrapper
        div.inner-wrapper
            div.widget-title
                div.sub-editable     ->    widgetTitle
            div.widget-body
                div.sub-editable     ->    widgetBody
```

Similar case is with current widgets that maps `<figure>` from the view to `<image>` or `<table>` element in the model. So the mapping is not element to element but rather view widget wrapper to model element.

This complicates stuff as to override some parts of such widget conversion requires deeper understanding of the feature. For image it is hard IMO but for tables might be hard as hell for outsiders.

The second part is to showcase how to map view element editable to element in the model so the selection and automatic conversion of children will work out-of-the-box. In such example one would rather convert `div.widget-title` but map the `div.sub-editable` to `widgetTitle` in the model.",23,11
ckeditor,ckeditor5,Add support for content drag&drop,"Currently, we support:

* copy&paste of HTML and plain text (within the editor and from/to outside),
* and dropping/pasting files.

If you'd try to select and drag&drop a content into the editor (either from the editor or from outside) you will experience a lot of strange issues or the editor will blow up.

The reason why it works just a ""bit"" is that we don't support it at all and it's the typing feature intercepting some fragments of dropped content thinking it's typed. It's all by coincidence and boils down to writing a support for drag&drop from scratch.

I'll be closing many tickets which were already reported as a DUP of this one, so let's make sure to check those TC once we'll come up with d&d implementation.

---

## Scope

There are 3 functionalities to cover:

* Dropping HTML/plain-text content from outside of the editor (other pages, the page in which the editor is embedded, external apps which provide HTML content in the clipboard) into the editor.
* Drag and drop of textual content within the editor.
* Drag and drop of block objects like images and tables within the editor.

    This part is most complex because block objects are, in CKEditor 4 at least, handled completely by the editor. We use the magicline's engine to display possible locations where e.g. an image can be moved:

   ![Aug-26-2019 12-50-51](https://user-images.githubusercontent.com/156149/63685665-408c4300-c800-11e9-8a96-2b1007449238.gif)

* Drag and drop of any block content (e.g. paragraphs, list items, etc.) within the editor.

    This is a cool addition on top of d&d of objects like images. Why not making all blocks draggable? 

See [my comment](https://github.com/ckeditor/ckeditor5/issues/2664#issuecomment-635793428) for more detailed description of these items.

---

## When?

If you'd like to see d&d support in CKEditor 5, please add 👍 to this comment.

Also: You can [help us priorities the sub-features of drag&drop support](https://github.com/ckeditor/ckeditor5/issues/2664#issuecomment-635793428).

**UPDATE (1.03.2021)**: We're working on scenarios A+B and part of C. See https://github.com/ckeditor/ckeditor5/issues/9128 for updates.

**UPDATE (Q3 2023)**: We are working on the block D&D: https://github.com/ckeditor/ckeditor5/issues/13933
",Reinmar,[],"[{'body': '@Reinmar i asked this in one of the DUP issues, but wasn\'t sure if i should ask in here instead...\r\n\r\ngiven that the current behaviour is so buggy (i\'m having real bad issues with serialised machine data being injected into the editor) - what is the best way to disable it completely until official support is further along?\r\n\r\nexample of what is getting injected:\r\n\r\n<img width=""727"" alt=""screen shot 2018-01-11 at 8 20 54 pm"" src=""https://user-images.githubusercontent.com/629710/34817791-0e262cb6-f70d-11e7-9eef-d093ce1d2998.png"">\r\n', 'author': 'thedavidmeister'}, {'body': ""This will be enough to block any drop:\r\n\r\n```js\r\n\t\teditor.editing.view.on( 'drop', ( evt, data ) => {\r\n\t\t\tevt.stop();\r\n\t\t\tdata.preventDefault();\r\n\t\t} );\r\n```\r\n\r\nBut it also prevents image upload. You'd need to improve the listener to check whether there's something interesting there in the `data` and let image upload handle those drop operations (by not stopping this event)."", 'author': 'Reinmar'}, {'body': ""yes i should be able to detect my data very easily!\r\n\r\ni'll try this out :)"", 'author': 'thedavidmeister'}, {'body': '@Reinmar this totally works - not 100% sure if the `preventDefault()` is necessary, but `evt.stop()` did what i needed', 'author': 'thedavidmeister'}, {'body': ""It's better to leave this `preventDefault()`. What it does is that it block the native drop's effect which is the browser inserting the content into your editor. Such a random change to the editor's DOM needs to be applied to the model and normally it wouldn't because no one would handle it. But sometimes the typing feature may catch it and handle it. The typing feature works based on mutations and if some mutations meet certain characteristic they are picked up by typing's heuristics and transformed into model's operations (and, hence, preserved). If not, the model's re-rendered and native changes are reverted.\r\n\r\nI described this mechanism here: https://github.com/ckeditor/ckeditor5/issues/748#issuecomment-356893226.\r\n\r\nSo, if you'll omit `preventDefault()` plain-text-like mutations might be handled by the typing feature."", 'author': 'Reinmar'}, {'body': 'this has come back in the latest beta for ckeditor... i assume maybe the events changed?', 'author': 'thedavidmeister'}, {'body': '`editing.view.document`  seems to help', 'author': 'thedavidmeister'}, {'body': 'I got two more requests about this on other channels recently. So 👍 👍 ', 'author': 'Reinmar'}, {'body': '@Reinmar : \r\nAlthough my team has integrated CKeditor into our platform.\r\nOur operations team still needs to rely on Google Docs to Easily Rearrange Images.\r\nThis is one important feature that is still not letting us get rid of Google docs and it leads to duplicated effort.\r\nReally looking forward to this feature. I hope it can be prioritized.', 'author': 'mechanicals'}, {'body': ""Thanks for feedback, @mechanicals. \r\n\r\nThe use cases for drag&drop are well known to us. But for now, no one reacted with 👍 to this ticket. If you'd like to help us prioritizing tickets, please react to the original post, as mentioned in it. Thanks to that we can sort tickets by the number of reactions."", 'author': 'Reinmar'}, {'body': 'I have tried to implement this in my angular project ( i am using multiple editors in a single page ) which i achieved via below code. Don\'t know if its the right way.\r\n\r\n          CKEDITOR.inline(\'editor1\', {\r\n          extraPlugins: \'hcard,sourcedialog,justify\'\r\n          });\r\n          CKEDITOR.inline(\'editor2\', {\r\n            extraPlugins: \'hcard,sourcedialog,justify\'\r\n            });\r\nWhat my problem is i tried use content from the my DB exact same text with html tags like in your drag and drop example as\r\n---ts file----\r\n`emailTemp =""<span class=""h-card"" class=""cke_widget_wrapper cke_widget_inline cke_widget_hcard cke_widget_wrapper_h-card cke_widget_selected""  contenteditable=""false""><span> rob maths </span></span>"";`\r\n---html File---\r\n```\r\n<div class=""editor"" style=""width: 25%;float: left;"">\r\n\t\t<div id=""editor2"" name=""editor2"" cols=""10""  rows=""10""  data-sample-short contenteditable=""true"" [innerHTML]=""emailTemp"">\r\n\t\t</div>\r\n\t</div>\r\n\r\n```\r\n\r\nBut i am not getting the expected style for the hcard..\r\nplease have a look at the attachment\r\n\r\n![ck](https://user-images.githubusercontent.com/56154675/66537660-e4c31280-eb3e-11e9-889d-a02b3ab994f3.jpg)\r\n', 'author': 'hemand-mapview'}, {'body': ""I'm building a commercial CMS, and not being able to rearrange blocks with drag-and-drop is currently the only thing that makes me worried about choosing CKEditor 5.\r\n\r\nI thumb-upped the original post. Thanks for considering the feature!"", 'author': 'neongreen'}, {'body': '@Reinmar Is it possible to implement this feature as plugin using current plugin API?', 'author': 'avele'}, {'body': 'Any listenner about ""drag start""? or ""on drag""?', 'author': 'vinicius1209'}, {'body': ""I'm waiting for this feature to come out."", 'author': 'sai-velamuri'}, {'body': 'Will it be made any time soon?', 'author': 'memocampos'}, {'body': 'It will be awesome this feature come true.', 'author': 'jemorape'}, {'body': 'This feature is really important!. could this feature be ready soon???', 'author': 'TheoGaxiola'}, {'body': ""Guys, can you check out the froala editor [Their website itself is a demo, How cool is that?](https://froala.com/wysiwyg-editor/inline/) It is super cool, very easy to make plugins, no need to go through a ton of framework documentation, almost all the features are ready to use. More over, you can paste html and it will be converted by the editor and vice-versa(you can view the source code and edit it like you want. It's ease of use is the main strength of the editor). Just my two cents after going through a painful week. "", 'author': 'sai-velamuri'}, {'body': 'Hi!, this is an essential feature for a project that I´ve been working on, so do you think we could have this feature soon?', 'author': 'omaryahir'}, {'body': 'hi @Reinmar: which iteration will this be part of as now seems a lot of people are blocked on this solution?', 'author': 'mechanicals'}, {'body': 'Hello @Mgsy, any update on this ?\r\nCan we use https://github.com/ckeditor/ckeditor5/blob/e73554a8f95fa38e453a9cd2401ccb0e3d1d557c/packages/ckeditor5-widget/src/utils.js#L256 for the text insertion \r\n\r\nAnd for the drag n drop maybe we can also use this by deleting drag content at original position and add it a final position ?\r\n\r\nWhat do you think?\r\n\r\nMaybe we can add it together ? or make it an open project ?', 'author': 'castroCrea'}, {'body': '@Mgsy @Reinmar hello, any answer on my previous message?\nThanks you ', 'author': 'castroCrea'}, {'body': 'Hi @castroCrea! Hi all!\r\n\r\nAs for the general status: this is one of the most upvoted tickets. Normally, we add one or two such tickets to an iteration, so the math says that there should be a progress here within 2-3 months. But I don\'t want to promise anything, to be safe ;)\r\n\r\nAs for the drag&drop feature itself – I\'m trying to understand how should we prioritise the following parts:\r\n\r\n*   (A) Dropping HTML/plain-text content from outside of the editor (other pages, the page in which the editor is embedded, external apps which provide HTML content in the clipboard) into the editor.\r\n    *   From what I can see, Chrome doesn\'t allow you to drag a textual content. It creates a new selection every time I try to do that. Firefox, OTOH, allows dragging a selected content.\r\n    *   When I test dropping such a content to the editor in Firefox it works but there are two bugs:\r\n        *   The content is dropped to the previous selection position while it should take the range from the drop event. I remember it was a nightmare to get right in CKE4 but perhaps the browsers that we support in CKE5 got it right and we can rely on the drop range. That would have to be checked.\r\n        *   There\'s no focus in the editor after drop. I\'d expect myself that the editor is focused so I can e.g. see where the selection ended up (cause that shows me where the content was dropped, otherwise it may be hard to understand that).\r\n    *   One more note: If we fix the above two issues, it will be possible to reliably drop non-textual content (e.g. links or things that were specifically made draggable by the app) to the editor, assuming that there\'s HTML representing that content in the data transfer. So, fixing these issues will have a wider effect than just on FF where textual content can be dragged.\r\n    *   However, my guess would be that this is not a huge priority for you, but it\'s a requirement for the (B) option.\r\n*   (B) Drag and drop of textual content within the editor.\r\n    *   This is similar to (A) but we have to do one more thing – delete the content that\'s been dragged once the user drops it somewhere else.\r\n    *   So, to make it clear – it\'d be best if content dragged within the editor used the native data transfer (where it should be passed via HTML, just like when copying it). That ensures one more thing – that the content dragged from the editor can be dropped outside the editor – this can be either another CKEditor instance or any other editor. Potentially even a native app.\r\n    *   Also, to make it clear – we\'d be targeting the behavior when the content is treated like by copy-paste. I can see that @castroCrea you went in a block-based direction (see #7324). IMO, that\'s a bit different story and I added (D) for that.\r\n*   (C) Drag and drop of block objects like images and tables within the editor.\r\n    *   This is a completely separate story – making it easy to rearrange images or tables within the editor. The solution has to be completely custom, just like in CKEditor 4 (see the original post for screencast).\r\n    *   It\'s a pretty big topic, potentially ~2 months for a starter.\r\n*   (D) Drag and drop of any block(s) in the editor.\r\n    *   This is something new that I didn\'t cover earlier in this post. We can see apps that allow rearranging e.g. items of a todo lists. Notion, that I really like myself, allows rearranging any block content. Also, it\'s possible there to select two+ blocks and move that.\r\n    *   Since we\'re talking about making widgets (images, blocks) draggable, I would find it a natural followup to make all types of blocks draggable. Taken (C) is implemented, adding (D) should not be that complex.\r\n\r\nSo, what are the priorities of (A+B), (C) and (D) to you? Could you write which are ""must haves"", ""nice to haves"" or ""don\'t care"" to you?\r\n\r\n**EDIT: A+B** and **part of C** is currently in progress in [#9128](https://github.com/ckeditor/ckeditor5/issues/9128).', 'author': 'Reinmar'}, {'body': ""Thank for the response @Reinmar \r\nI think that :\r\n * **C is the must have** (because is a really natural behavior)\r\n * **A is a nice to have** (because a H case, _it actually already work to drag content from chrome to ckeditor5_)\r\n * B and D on my sens are different story but kind of the same, it will be great to have already one of it. But for me **D** will propulse ckeditor5 to the next level (a Notion like editor), witch start to be the norme. Don't you think ? **So _for me_ D is a must have**\r\n\r\nIf I can help ?! "", 'author': 'castroCrea'}, {'body': ""*   **C is the must have** (people often don't know how to reposition the image/table without drag & drop)\r\n*   A + B are nice to have\r\n*   D is **awesome** to have"", 'author': 'zadam'}, {'body': '- A = Nice to have \r\n- B = Nice to have \r\n- C = Must have! \r\n- D = 😍', 'author': 'demtzu'}, {'body': ""C: must have\r\nABD: don't care"", 'author': 'neongreen'}, {'body': 'C: definitely must have', 'author': 'mechanicals'}, {'body': 'C: must have\r\nD: super cool!\r\nBeing able to move widgets solves a lot of problems I think.', 'author': 'NathanDonovan'}, {'body': ""Thank you, all :)!\r\n\r\nI think it's perfectly clear now that C should be the first step."", 'author': 'Reinmar'}, {'body': 'A = Nice to have\r\nB = Nice to have\r\nC = Must have!\r\nD = 😍', 'author': 'lkjx19812006'}, {'body': ""For our application, rearranging text blocks is key, so we're primarily looking for:\r\nB or D \r\n"", 'author': 'davebillmaier'}, {'body': ""**C and D** for me too.\r\n\r\nMy current app design is a separate CKE component for each list item with an external drag handle, but would be nice if this was built right in. I'd love to hear what the current timeline looks like for this. \r\n"", 'author': 'adamerose'}, {'body': 'There\'s been an old proposal for d&d of widgets (""C"") in #1023. IDK, though, if we can go with something like that if we\'d also work on ""D"".', 'author': 'Reinmar'}, {'body': ""We're using CK Editor 4 at RocketLawyer.com to drag and drop sign blocks. If we upgrade to CK Editor 5 will we still be able to do this?"", 'author': 'ryanmmale'}, {'body': '**Not able to update from CK Editor 4 to 5**\r\n\r\nPlease implement Drag and Drop support in CK Editor 5, due to this reason we are not able to use Comments, Real-time collaboration and other nice features introduced in CK5.', 'author': 'logeshpaul'}, {'body': 'Agree with @logeshpaul pretty cool features split between CK Editor 4 & 5. Please bring drag and drop features in 5 as well.', 'author': 'suhasg'}, {'body': '> From what I can see, Chrome doesn\'t allow you to drag a textual content. It creates a new selection every time I try to do that.\r\n\r\nIt looks like that\'s no longer the case in Chrome (applies both to dragging text in the editor and from outside). Long left-click is needed to start dragging.\r\n\r\n<img width=""1020"" alt=""Screen Shot 2021-01-08 at 6 05 09 PM"" src=""https://user-images.githubusercontent.com/545175/104043420-16aca400-51dc-11eb-850b-9294a5ffc901.png"">\r\n', 'author': 'wwalc'}, {'body': '> * (D) Drag and drop of any block(s) in the editor.\r\n\r\n> So, what are the priorities of (A+B), (C) and (D) to you? Could you write which are ""must haves"", ""nice to haves"" or ""don\'t care"" to you?\r\n\r\nD would be the most useful for us! @Reinmar are there any updates on the likelihood of this being implemented? At the moment we\'re weighing up this vs another option that is less functional but can add custom blocks and re-arrange out of the box.', 'author': 'timdatavizioner'}, {'body': 'Hi, any estimated date for this future?', 'author': 'fsolarv22'}, {'body': ""Why would you ever push out a new product that removes an essential and existing feature?  Being able to drag text like a real word editor was the #1 draw to CKEditor.  Guess I'm downgrading to 4..."", 'author': 'seancowan-dev'}, {'body': 'FYI we are working on A, B and C scenarios (with the assumption that dropping is allowed only in text positions or on the widgets) here: #9128', 'author': 'niegowski'}, {'body': 'FYI: #9128 has been merged and will be included in the upcoming release (end of March) :tada:\r\n\r\n![](https://user-images.githubusercontent.com/1232187/109486255-ea4a3100-7a82-11eb-8202-f070b82acf40.gif)', 'author': 'Reinmar'}, {'body': ""Thank you for looking into this, this is greatly appreciated !\r\nI'm really eager to test this !"", 'author': 'MrMitch'}, {'body': 'We are excited to announce that we have released an experimental feature of blocks drag and drop in CKEditor 5. Please note that this feature is not yet fully developed or tested, and it may not be ready for production use.\r\n\r\nLive demos are available in our docs:\r\nhttps://ckeditor.com/docs/ckeditor5/latest/features/pasting/drag-drop.html#drag-and-drop-of-content-blocks\r\n\r\n### What works\r\n\r\n\r\nhttps://github.com/ckeditor/ckeditor5/assets/9881379/081f6ebb-d467-4d21-9d26-bc0141c70256\r\n\r\n\r\n- Selection of the whole text block and moving it inline **and** between blocks.\r\n- Placement of blocks inside other blocks: tables, blockquote, etc.\r\n- The pilcrow icon in the Ballon block editor behaves as a drag handle.\r\n\r\n### What needs improvement\r\n\r\n- Scroll the content while dragging.\r\n- Drag and drop inside the lists.\r\n- The drag handle is only available for the Ballon block editor.\r\n- The drag handle is only visible on select, and not on hover.\r\n\r\n### Setup\r\n\r\n⚠️  This is an **experimental feature,** it is available for users, developers, and enthusiasts, who want to test out new functionality and provide feedback to the product team.  ⚠️\r\n\r\n1. Update the editor’s packages or build to the `38.0.1+` version.\r\n2. Add the `DragDropExperimental` plugin from the clipboard package (available for all builds).\r\n3. If you use the Ballon block editor, add the `DragDropBlockToolbar` to drag and drop with the icon.\r\n4. Rebuild the editor if needed and reload the page.\r\n\r\n### Feedback\r\n\r\nLet us know in comments, and in the reactions to this comment, what you think, and what enhancements would you like us to include in the stable release.\r\n\r\n👍\xa0- This looks great, keep it going!\r\n\r\n👎\xa0- I don’t like it, do something else.\r\n\r\n🎉\xa0- I want a drag handle for every editor type, e.g. classic, inline, [etc.](https://ckeditor.com/docs/ckeditor5/latest/examples/index.html) (something like: ⠿)\r\n\r\n❤️\xa0- The drag handle should be visible on hovering over blocks, next to them (let us know in comments how would you render that in your editor setups, what editor types you use, etc.?)\r\n\r\n🚀\xa0- Make it lists aware (placing inside lists, sublists creation).', 'author': 'Witoso'}, {'body': 'this is awesome, becoming the perfect UX for modern note-taking apps!', 'author': 'ctwhome'}, {'body': 'What a quick deliver!! ', 'author': 'TheoGaxiola'}, {'body': ""Exciting update! 🎉 We've improved drag-and-drop of blocks in [v40.0.0](https://github.com/ckeditor/ckeditor5/releases/tag/v40.0.0), which has just been released. Now you can place blocks between other blocks more intuitively. For those using an editor with a balloon block toolbar, you can even initiate a drag from there. [Play with it out in our docs](https://ckeditor.com/docs/ckeditor5/latest/examples/builds-custom/full-featured-editor.html)!\r\n\r\nGot more thoughts or feedback? There are still improvements we would like to make, follow and 👍 the #15110, if you're interested."", 'author': 'Witoso'}]","['type:feature', 'package:clipboard', 'support:2', 'squad:core']",CLOSED,2664,"['13933', '9128', '2664']","Add support for content drag&drop Currently, we support:

* copy&paste of HTML and plain text (within the editor and from/to outside),
* and dropping/pasting files.

If you'd try to select and drag&drop a content into the editor (either from the editor or from outside) you will experience a lot of strange issues or the editor will blow up.

The reason why it works just a ""bit"" is that we don't support it at all and it's the typing feature intercepting some fragments of dropped content thinking it's typed. It's all by coincidence and boils down to writing a support for drag&drop from scratch.

I'll be closing many tickets which were already reported as a DUP of this one, so let's make sure to check those TC once we'll come up with d&d implementation.

---

## Scope

There are 3 functionalities to cover:

* Dropping HTML/plain-text content from outside of the editor (other pages, the page in which the editor is embedded, external apps which provide HTML content in the clipboard) into the editor.
* Drag and drop of textual content within the editor.
* Drag and drop of block objects like images and tables within the editor.

    This part is most complex because block objects are, in CKEditor 4 at least, handled completely by the editor. We use the magicline's engine to display possible locations where e.g. an image can be moved:

   ![Aug-26-2019 12-50-51](https://user-images.githubusercontent.com/156149/63685665-408c4300-c800-11e9-8a96-2b1007449238.gif)

* Drag and drop of any block content (e.g. paragraphs, list items, etc.) within the editor.

    This is a cool addition on top of d&d of objects like images. Why not making all blocks draggable? 

See [my comment](https://github.com/ckeditor/ckeditor5/issues/2664#issuecomment-635793428) for more detailed description of these items.

---

## When?

If you'd like to see d&d support in CKEditor 5, please add 👍 to this comment.

Also: You can [help us priorities the sub-features of drag&drop support](https://github.com/ckeditor/ckeditor5/issues/2664#issuecomment-635793428).

**UPDATE (1.03.2021)**: We're working on scenarios A+B and part of C. See https://github.com/ckeditor/ckeditor5/issues/9128 for updates.

**UPDATE (Q3 2023)**: We are working on the block D&D: https://github.com/ckeditor/ckeditor5/issues/13933
",5,25
ckeditor,ckeditor5,Implement a custom navigation through tables,"Currently, we allow the browser to do its thing. Some support <kbd>Tab</kbd>, most support arrow keys, but all that is inconsistent and buggy. We should design and implement our own solution.",Reinmar,['niegowski'],"[{'body': 'In fact, this is a special case of https://github.com/ckeditor/ckeditor5-widget/issues/84.\r\n\r\nI think that the widget feature should introduce a base way to navigate to nested editables and then the table feature should override that in a way which will make sense for tables.', 'author': 'Reinmar'}, {'body': ""Two stages:\r\n\r\n*   Handling selection at the cell boundary. When the selection is at the start and you press up, then you go to the end of the cell above the current cell. When you press left, you go to the end of the cell on the left. Symmetrical for the end of cell positions. Note: an empty table creates an interesting case and should be handled correctly.\r\n*   Handling selections not at the cell boundary by comparing rects.\r\n\r\nIn both cases, let's try to mimic Google Docs behavior as closely as possible, with the exception that when you move to the adjacent cell, move to the end/start of it."", 'author': 'Reinmar'}, {'body': 'Some tickets to review/close along with this one:\r\n* https://github.com/ckeditor/ckeditor5/issues/3286\r\n* https://github.com/ckeditor/ckeditor5/issues/3177\r\n* https://github.com/ckeditor/ckeditor5/issues/1709', 'author': 'oleq'}]","['type:improvement', 'type:feature', 'package:table']",CLOSED,3267,[],"Implement a custom navigation through tables Currently, we allow the browser to do its thing. Some support <kbd>Tab</kbd>, most support arrow keys, but all that is inconsistent and buggy. We should design and implement our own solution.",21,8
ckeditor,ckeditor5,The alignment dropdown has unnecessary scrollbars,"A regression after https://github.com/ckeditor/ckeditor5-theme-lark/pull/186.

Go to http://localhost:8125/ckeditor5-alignment/tests/manual/alignment.html to reproduce.

![image](https://user-images.githubusercontent.com/1099479/42506591-a2406f3e-8442-11e8-8980-aa91d164412c.png)
",oleq,['dkonopka'],"[{'body': ""It's caused by tooltips. We may need to revert the patch.\r\n\r\n![image](https://user-images.githubusercontent.com/1099479/42506760-14951ac6-8443-11e8-94c4-df69f1eb0c4e.png)\r\n\r\nYet another reason to use `BalloonPanelView` to render them. "", 'author': 'oleq'}, {'body': 'Related to https://github.com/ckeditor/ckeditor5-ui/issues/429.', 'author': 'dkonopka'}, {'body': 'The fire put out in https://github.com/ckeditor/ckeditor5-theme-lark/pull/192.', 'author': 'oleq'}]",[],CLOSED,3416,[],"The alignment dropdown has unnecessary scrollbars A regression after https://github.com/ckeditor/ckeditor5-theme-lark/pull/186.

Go to http://localhost:8125/ckeditor5-alignment/tests/manual/alignment.html to reproduce.

![image](https://user-images.githubusercontent.com/1099479/42506591-a2406f3e-8442-11e8-8980-aa91d164412c.png)
",31,7
ckeditor,ckeditor5,Setting image height and width,"## Is this a bug report or feature request? (choose one)

🆕 Feature request

## 📃 Other details that might be useful

Hi ! Thanks for the very well designed ckeditor 5 and its image plugin. I have two / three questions that can be interpreted as feature requests.

Many front end, including mine, actually uses images parameters sizes to build progressive loading, placeholders, etc... We love our non-jumping image process, and for that it is critical that height and width are hardcoded in the img tag (indeed, only to compute an aspect ratio). From what I can understand in the image plugin code only url and alt and styles are setable on the image bloc object. Would it be possible to consider adding those parameters, or is it something i should extend myself (I am not talking PR but adding a plugin on top of this one) ? 

Finally, something that don't really belong here, but i cannot find any equivalent plugin to manage embed (like a youtube video) in the editor.
Is there work allready in this direction or is it uncharted territory ?

Cheers.",olup,[],"[{'body': '> From what I can understand in the image plugin code only url and alt and styles are setable on the image bloc object. \r\n\r\nIt also can also set the `width`, `sizes` and `srcset`. E.g. if I drop an image on https://ckeditor5.github.io that\'s the resulting data:\r\n\r\n```html\r\n<figure class=""image"">\r\n    <img src=""https://33333.cdn.cke-cs.com/rc1DFuFpHqcR3Mah6y0e/images/fc0afb2a3bcfcd2b82139fdbc72eb063f4a8cc8d632a833a_sample.jpg"" srcset=""https://33333.cdn.cke-cs.com/rc1DFuFpHqcR3Mah6y0e/images/fc0afb2a3bcfcd2b82139fdbc72eb063f4a8cc8d632a833a_sample.jpg/w_80 80w, https://33333.cdn.cke-cs.com/rc1DFuFpHqcR3Mah6y0e/images/fc0afb2a3bcfcd2b82139fdbc72eb063f4a8cc8d632a833a_sample.jpg/w_160 160w, https://33333.cdn.cke-cs.com/rc1DFuFpHqcR3Mah6y0e/images/fc0afb2a3bcfcd2b82139fdbc72eb063f4a8cc8d632a833a_sample.jpg/w_240 240w, https://33333.cdn.cke-cs.com/rc1DFuFpHqcR3Mah6y0e/images/fc0afb2a3bcfcd2b82139fdbc72eb063f4a8cc8d632a833a_sample.jpg/w_320 320w, https://33333.cdn.cke-cs.com/rc1DFuFpHqcR3Mah6y0e/images/fc0afb2a3bcfcd2b82139fdbc72eb063f4a8cc8d632a833a_sample.jpg/w_400 400w, https://33333.cdn.cke-cs.com/rc1DFuFpHqcR3Mah6y0e/images/fc0afb2a3bcfcd2b82139fdbc72eb063f4a8cc8d632a833a_sample.jpg/w_480 480w, https://33333.cdn.cke-cs.com/rc1DFuFpHqcR3Mah6y0e/images/fc0afb2a3bcfcd2b82139fdbc72eb063f4a8cc8d632a833a_sample.jpg/w_560 560w, https://33333.cdn.cke-cs.com/rc1DFuFpHqcR3Mah6y0e/images/fc0afb2a3bcfcd2b82139fdbc72eb063f4a8cc8d632a833a_sample.jpg/w_640 640w, https://33333.cdn.cke-cs.com/rc1DFuFpHqcR3Mah6y0e/images/fc0afb2a3bcfcd2b82139fdbc72eb063f4a8cc8d632a833a_sample.jpg/w_720 720w, https://33333.cdn.cke-cs.com/rc1DFuFpHqcR3Mah6y0e/images/fc0afb2a3bcfcd2b82139fdbc72eb063f4a8cc8d632a833a_sample.jpg/w_800 800w"" sizes=""100vw"" width=""800"">\r\n</figure>\r\n```\r\n\r\nHowever, I don\'t understand why we don\'t set the `height` too... I think that we needed `width` so it works well with `sizes` and `srcset`. But, for some reason, we omit `height`. \r\n\r\n@pjasiun @oleq, do you remember any reasons for not setting the `height`?\r\n\r\n> Finally, something that don\'t really belong here, but i cannot find any equivalent plugin to manage embed (like a youtube video) in the editor.\r\n> Is there work allready in this direction or is it uncharted territory ?\r\n\r\nPlease report it in a separate ticket.  Video embedding (from YT, Vimeo, etc) is high on our priority list, but it wasn\'t reported yet.', 'author': 'Reinmar'}, {'body': '> @pjasiun @oleq, do you remember any reasons for not setting the height?\r\n\r\nI believe we wanted to set as few attributes as possible, and we did not see any reason to set height. However, your argument, @olup, is very good and I agree that we should set it.', 'author': 'pjasiun'}, {'body': 'Is there a way to parse existing `width` attributes from HTML when using `editor.setData`?\r\nI tried to extend image support (perhaps not quite correct):\r\n```\r\neditor.model.schema.extend(\'image\', {\r\n  allowAttributes: \'imageWidth\'\r\n});\r\n\r\neditor.conversion.for(\'downcast\').add(downcastAttributeToAttribute({\r\n  model: \'imageWidth\',\r\n  view: \'width\'\r\n}));\r\n\r\neditor.conversion.for(\'upcast\').add(upcastAttributeToAttribute({\r\n  model: \'imageWidth\',\r\n  view: \'width\'\r\n}));\r\n```\r\n\r\nBut achieved only this after `editor.getData()`:\r\n```\r\n<figure class=""image"" width=""100""><img src=""...""></figure>\r\n```\r\n\r\nWe need to set `width` on images because we use CKEditor for creating emails, and we can\'t use stylesheets to apply styling to content.', 'author': 'the-owl'}, {'body': 'Related: https://github.com/ckeditor/ckeditor5-table/issues/122#issuecomment-424333590. Probably the same will happen with other widgets and/or elements that are not mapped 1:1.', 'author': 'jodator'}, {'body': ""@the-owl : please take a look at a similar solution for tables:  https://github.com/ckeditor/ckeditor5-table/issues/122#issuecomment-426982275\r\n\r\nI've re-phrased the downcast writer to match your code - but I didn't test it ;)\r\n\r\n```js\r\neditor.conversion.for( 'downcast' ).add( dispatcher => {\r\n\tdispatcher.on( 'attribute:imageWidth:image', ( evt, data, conversionApi ) => {\r\n\t\tconst image = data.item;\r\n\r\n\t\t// The table from the model is mapped to the widget element: <figure>.\r\n\t\tconst viewFigure = conversionApi.mapper.toViewElement( image );\r\n\r\n\t\t// A <image> is direct child of a <figure> but there might be other view\r\n\t\t// (including UI) elments inside <figure>.\r\n\t\tconst viewImage = [ ...viewFigure.getChildren() ]\r\n\t\t\t.find( element => element.name === 'img' );\r\n\r\n\t\t// User view writer to change style of a view table.\r\n\t\tif ( data.attributeNewValue ) {\r\n\t\t\tconversionApi.writer.setStyle( 'width', data.attributeNewValue, viewImage );\r\n\t\t} else {\r\n\t\t\tconversionApi.writer.removeStyle( 'width', viewImage );\r\n\t\t}\r\n\t} );\r\n} );\r\n```"", 'author': 'jodator'}, {'body': 'Hi, Should I Need to write plugin for this by myself and build the ckeditor ? ', 'author': '100cm'}, {'body': 'Will the solution implemented as part of this also include resizing media embeds? Should I open a separate issue in https://github.com/ckeditor/ckeditor5-media-embed ?', 'author': 'mkopinsky'}, {'body': 'My team needs this also 👍 ', 'author': 'tbredin'}, {'body': ""We've just released image resizing. You can see it live in nightly docs https://ckeditor5.github.io/docs/nightly/ckeditor5/latest/features/image.html#resizing-images. Official docs will be updated later on today."", 'author': 'Reinmar'}, {'body': ""I also need this feature.\r\n\r\nWas it implemented? Some of the comments above are talking about image resizing etc. but I don't think that was what the OP was asking about.\r\n\r\nHappy to write my own plugin... but it'd be amazing if someone has already done this ;)!?\r\n\r\n-- EDIT\r\n\r\nI thought I'd go ahead and do this, however I'm slightly confused as the `viewToDom` function won't return me a DOM node for the image. Since they stored in a WeakMap theres no way for me to iterate and get the correct image.\r\n\r\nIf I try and create a new image here, that'll obviously happen async and `writer` seems to fail after. \r\n\r\nIs this the correct approach or is there a better way?\r\n\r\n```javascript\r\nthis.editor.conversion.for( 'downcast' ).add( dispatcher => {\r\n  dispatcher.on( 'insert:image', ( evt, data, conversionApi ) => {\r\n    const modelElement = data.item;\r\n    const writer = conversionApi.writer;\r\n    const viewFigure = conversionApi.mapper.toViewElement( modelElement );\r\n    if ( !viewFigure || !writer ) {\r\n      return;\r\n    }\r\n    const viewElement = findViewChild( viewFigure, 'img', conversionApi )\r\n    const height = modelElement.getAttribute( 'height' ) || 0;\r\n   if ( height > 0 ) {\r\n      writer.setAttribute( 'height', height, viewElement );\r\n      return;\r\n    }\r\n    const img = this.editor.editing.view.domConverter.viewToDom( viewElement );\r\n     // img is undefined\r\n  } );\r\n}, { priority: 'low' } );\r\n```"", 'author': 'rhysstubbs'}, {'body': '> We love our non-jumping image process, and for that it is critical that height and width are hardcoded in the img tag\r\n\r\nAgreed. Otherwise we see jumps like this, which are very jarring if the image loads slowly:\r\n\r\n<img src=""https://user-images.githubusercontent.com/1523306/100135557-7bad7400-2e92-11eb-977c-3827ca29c751.gif"" width=50%>', 'author': 'neongreen'}, {'body': 'Related issue: #8663.', 'author': 'Reinmar'}, {'body': 'I do not understand how this is related to #8663. Could you elaborate? 😊 🙏 ', 'author': 'wimleers'}, {'body': ""Currently, CKE5 does support `width` but AFAICS only if it's paired with `sizes` or something similar. E.g. the `width` attribute will be output when an image was pasted into the editor (from file). Additionally, with `ImageResize` present, the `width` inline style present on `figure` is also handled.\r\n\r\n#8663 is about backward compat with CKE4 and we'll need to work in it on different notations of similar things. So if CKE4 could've output something, it will need to be handled in CKE5 as well."", 'author': 'Reinmar'}, {'body': 'Hello, will the height setting be possible since that functionality has been implemented? This is important for SVG source of images. Currently, when you insert image and set SVG as its source, the height is capped at 150px, beyond which it is not possible to resize the image, making the scalability an issue. I spent already a week on this but cannot find a way out beyond manually setting the height and width of the image.', 'author': 'tomitrescak'}, {'body': 'This feature is needed by many people, especially for creating emails. Outlook and Windows 10 Mail rendering engine doesn’t understand the `style` attribute on `<img>` elements. So we need to define a `width` attribute for correct displaying. And it would be nice if ImageResize plugin allowed us to set image sizes using this attributes.', 'author': 'SazanYa'}, {'body': '![pexels-cottonbro-4761788](https://user-images.githubusercontent.com/100569625/178407363-36e41971-ece2-47ae-b110-68ae6045bae3.jpg)\r\n', 'author': 'suracekumar632'}, {'body': 'Bump on this, `img` tags are getting `width` and `height` stripped from the rendered `img` tag. Any update on this?', 'author': 'jc-harbour'}, {'body': 'This has been reported as a bug against Drupal too now: https://www.drupal.org/project/drupal/issues/3336446#comment-14888366.\r\n\r\nThis bug has been known for a while now — is it really so complicated to fix? 😅', 'author': 'wimleers'}, {'body': 'It would be really nice to have this fixed, agree. We and our users love CKE5 on our websites, but the CLS score has been hit quite severely on some of our pages due to the arguments missing.', 'author': 'KlemenDEV'}, {'body': 'I\'m working on an image-dimensions plugin. Just have to hook up the observable properties. \r\n\r\n<img width=""908"" alt=""image"" src=""https://user-images.githubusercontent.com/25124/218305867-172cdfd6-1c49-421e-92f6-28e5bac24311.png"">\r\n\r\nbut this would 100% be better as a first party plugin.\r\n', 'author': 'leevigraham'}, {'body': '@leevigraham Could you share the code? 😊 🙏 ', 'author': 'wimleers'}, {'body': ""@wimleers I didn't get much further than the screenshot above."", 'author': 'leevigraham'}, {'body': 'We are taking a look at this, if anyone wants to check the status, observe the https://github.com/ckeditor/ckeditor5/issues/14146 and its subtasks.', 'author': 'Witoso'}, {'body': 'The implementation is close to completion, but we would love to hear some feedback. [The details are gathered in the comment.](https://github.com/ckeditor/ckeditor5/issues/14146#issuecomment-1632607316)', 'author': 'Witoso'}, {'body': ':tada: This feature was merged to the `master` and is available on the [nightly releases](https://github.com/ckeditor/ckeditor5/issues/14724) and [nightly docs](https://ckeditor5.github.io/docs/nightly/ckeditor5/latest/examples/builds-custom/full-featured-editor.html) to test.\r\n\r\n[In a comment in another issue](https://github.com/ckeditor/ckeditor5/issues/14146#issuecomment-1632607316), you can find more details about the changes.\r\n\r\nGathering interest in the UI setup for those attributes in: [#15044](https://github.com/ckeditor/ckeditor5/issues/15044)', 'author': 'Witoso'}]","['type:feature', 'package:image', 'support:2', 'squad:core', 'resolution:resolved']",CLOSED,5154,[],"Setting image height and width ## Is this a bug report or feature request? (choose one)

🆕 Feature request

## 📃 Other details that might be useful

Hi ! Thanks for the very well designed ckeditor 5 and its image plugin. I have two / three questions that can be interpreted as feature requests.

Many front end, including mine, actually uses images parameters sizes to build progressive loading, placeholders, etc... We love our non-jumping image process, and for that it is critical that height and width are hardcoded in the img tag (indeed, only to compute an aspect ratio). From what I can understand in the image plugin code only url and alt and styles are setable on the image bloc object. Would it be possible to consider adding those parameters, or is it something i should extend myself (I am not talking PR but adding a plugin on top of this one) ? 

Finally, something that don't really belong here, but i cannot find any equivalent plugin to manage embed (like a youtube video) in the editor.
Is there work allready in this direction or is it uncharted territory ?

Cheers.",5,27
ckeditor,ckeditor5,Enable copy & paste in restricted editing mode,"## 📝 Provide a description of the new feature

Pasting is disabled in restricted editing mode MVP. To further enhance this feature we should allow pasting inside non-restricted areas.

The minimal setup would be to strip block content from pasted data but probably we should also think about filtering out content that is not allowed in the restricted areas.

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.
",jodator,['jodator'],"[{'body': 'We should have an additional configuration for the text attributes inside clipboard holder in the restricted editing mode. Depending on how we\'re gonna solve this I can see that we could ditch command toggling for some features (ie. ""bold"" feature commands might depend on schema)\r\n\r\nUser would define which attributes are allowed (config: `restrictedEditing.allowedAttributes`) and the RE feature would add a dynamic schema check and enable some attributes for given nodes.\r\n\r\nWe have to leave commands enabling since some commands might be enabled in restricted editing mode.', 'author': 'jodator'}]","['type:feature', 'package:restricted-editing']",CLOSED,5802,[],"Enable copy & paste in restricted editing mode ## 📝 Provide a description of the new feature

Pasting is disabled in restricted editing mode MVP. To further enhance this feature we should allow pasting inside non-restricted areas.

The minimal setup would be to strip block content from pasted data but probably we should also think about filtering out content that is not allowed in the restricted areas.

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.
",5,6
ckeditor,ckeditor5,Placeholders for non-restricted areas in restricted editing mode,"## 📝 Provide a description of the new feature

The empty non-restricted area is displayed as empty box:
![Selection_067](https://user-images.githubusercontent.com/247363/69611859-f7ca6d00-102e-11ea-8089-2701115bd168.png)

But maybe we could add a placeholder for this editable field? The straightforwad idea is to use original text (when the content is loaded) to create a placeholder:
![Selection_068](https://user-images.githubusercontent.com/247363/69612068-509a0580-102f-11ea-874a-8a811964227c.png)


---

If you'd like to see this feature implemented, add a 👍 reaction to this post.
",jodator,[],"[{'body': ""There has been no activity on this issue for the past year. We've marked it as stale and will close it in 30 days. We understand it may be relevant, so if you're interested in the solution, leave a comment or reaction under this issue."", 'author': 'CKEditorBot'}, {'body': ""We've closed your issue due to inactivity over the last year. We understand that the issue may still be relevant. If so, feel free to open a new one (and link this issue to it)."", 'author': 'CKEditorBot'}]","['type:feature', 'resolution:expired', 'package:restricted-editing', 'status:stale']",CLOSED,5804,[],"Placeholders for non-restricted areas in restricted editing mode ## 📝 Provide a description of the new feature

The empty non-restricted area is displayed as empty box:
![Selection_067](https://user-images.githubusercontent.com/247363/69611859-f7ca6d00-102e-11ea-8089-2701115bd168.png)

But maybe we could add a placeholder for this editable field? The straightforwad idea is to use original text (when the content is loaded) to create a placeholder:
![Selection_068](https://user-images.githubusercontent.com/247363/69612068-509a0580-102f-11ea-874a-8a811964227c.png)


---

If you'd like to see this feature implemented, add a 👍 reaction to this post.
",0,6
ckeditor,ckeditor5,Validate table selection POC approach.,"## Provide a description of the task

This task considers finishing the basic table selection concept and plugin. As the plugin itself can be unusable at this stage the feature will have its own integration branch (although switch `master` to master is desirable).

However the engine part of this PR might be integrated to `master` if changes do not break anything.
",jodator,['jodator'],"[{'body': ""The table selection POC has two PRs:\r\n\r\n1. The `engine` part PR: https://github.com/ckeditor/ckeditor5-engine/pull/1817\r\n\r\n    It introduces:\r\n\r\n    - selection post-fixer changes (to allow multi-range selection)\r\n    - `MouseObserver` has added another event types: `'mousemove', 'mouseup', 'mouseleave'` alongside `'mousedown'`. Could be moved to another type of observer (dunno the name as possible DnD would use such events also).\r\n    - ~a `SelectionRendererObserver` that stops selection rendering during selection drag~ changed to fake selection\r\n    - ~view `Renderer` changes - stop rendering selection~ changed to fake selection\r\n    - minor set of tests (some are failing).\r\n\r\n    ~The solution needs to be triaged to ensure I didn't forget about anything as pausing the selection rendering subject comes and goes (AFAIR last time it was mentioned together with IME changes).~ After using fake selection mechanism the selection rendering is not needed. It turned out that I was using it wrongly before. The key is to use **'low'** priority when setting the fake selection to prevent other selection change listeners from mangling with the selection.\r\n\r\n    Next steps:\r\n\r\n    - Create `MouseObserver` PR to the engine (can be merged to master any time)\r\n    - Create selection post fixer changes PR that enables multi-range selection (it may be postponed)\r\n\r\n\r\n2. The `table` part PR: https://github.com/ckeditor/ckeditor5-table/pull/228:\r\n\r\n    It introduces:\r\n\r\n    - `TableSelection` plugin - manages selection handling for mouse over a table - needs tests\r\n    - `MergeCells` command - base implementation - might be extracted to own PR/branch and work to be finished later on\r\n    - changes to some commands (failing tests after changes in multi-range selection) - might need fix together with `TableSelection` PR\r\n    - `TableEditing` changes tableCell to `isObject` instaed of `isLimit` in the schema.\r\n    - `TableUI` uses `MergeCells` command instead of current 4\r\n    - manual test for table selection\r\n\r\n    Next steps:\r\n\r\n    - create minimal tables PR (without UI or commands). Done here: https://github.com/ckeditor/ckeditor5-table/pull/230.\r\n    - move `MergeCells` command to own branch, describe work needed to finish the task: done here: https://github.com/ckeditor/ckeditor5/issues/6123#issuecomment-579721245.\r\n\r\n3. Related issues\r\n    - https://github.com/ckeditor/ckeditor5-inspector/issues/68"", 'author': 'jodator'}]","['type:task', 'package:engine', 'package:table']",CLOSED,6113,[],"Validate table selection POC approach. ## Provide a description of the task

This task considers finishing the basic table selection concept and plugin. As the plugin itself can be unusable at this stage the feature will have its own integration branch (although switch `master` to master is desirable).

However the engine part of this PR might be integrated to `master` if changes do not break anything.
",21,4
ckeditor,ckeditor5,Table mouse selection UI/UX,"## 📝 Provide a description of the new feature

Requires #6113.

Validate mouse selection indication UI/UIX. The solution used in #6113 is at the POC stage and a nice styling must be used for mouse selection.

This should address:

* Nice looking (and well blending) styles for selected table cells.
* Resolving the issue mentioned below by me.

## Progress log

### https://github.com/ckeditor/ckeditor5-table/pull/257 

The PR brings: 
* new selection styles,
* improved selection handling in Chrome (selection no longer starts in the fake sel container)
* [a minor fix for `MouseSelectionHandler` internals](https://github.com/ckeditor/ckeditor5/issues/6353)

### Remaining issues

* [ ] The selection is broken in Safari. In theory, this can be improved by a `selectionstart` listener kicking in at some specific moments (tried it, it works OK), but this is more a hack than the actual solution. It seems that the selection goes crazy in Safari once the mouse crosses the boundary of the table cell and resets to the beginning of editable.

   What we need instead is a solid research.
![image](https://user-images.githubusercontent.com/1099479/75558243-d1f3a080-5a41-11ea-9a8d-ecc055c7becc.png)
* [ ] [`MouseSelectionHandler#_handleMouseMove()` calls `TableSelection#stopSelection()` after the mouse has been released. Each such call runs `model.change()` which is very wrong](https://github.com/ckeditor/ckeditor5-table/blob/i/6114/src/tableselection/mouseselectionhandler.js#L99) and a potential source of issues.
  * IMO [this initial condition](https://github.com/ckeditor/ckeditor5-table/blob/fe2b7a0b04cafc4a6201ee4954c404ca8f862b58/src/tableselection/mouseselectionhandler.js#L98-L102) should be simply replaced by the `if ( !this._isSelecting ) { return; }` (what's the point of the `mousemove` handling if not selecting any more?)
   * When I changed the condition [this test failed](https://github.com/ckeditor/ckeditor5-table/blob/fe2b7a0b04cafc4a6201ee4954c404ca8f862b58/tests/tableselection/mouseselectionhandler.js#L269) and I cannot understand what scenario it tests from the test description and structure.


---

If you'd like to see this feature implemented, add a 👍 reaction to this post.
",jodator,['Reinmar'],"[{'body': 'Moved from PR: https://github.com/ckeditor/ckeditor5-table/pull/230#issuecomment-586333576:\r\n\r\n> Leaving the table with the mouse makes the selection non-fake so you suddenly see text selection. The selection stops working in this case too.\r\n\r\nI found out that it is a Chrome issue IMO:\r\n\r\nChrome | Firefox\r\n--- | ---\r\n![Peek 2020-02-18 12-49](https://user-images.githubusercontent.com/247363/74733779-57f73680-524d-11ea-82d9-86d185285810.gif) | ![Peek 2020-02-18 12-50](https://user-images.githubusercontent.com/247363/74733783-59286380-524d-11ea-92ee-db4252496901.gif)\r\n\r\n', 'author': 'jodator'}, {'body': ""Also from a PR: please create proper entries in theme lark (if we'll work on master by then).https://github.com/ckeditor/ckeditor5-table/pull/230#discussion_r381977375"", 'author': 'jodator'}, {'body': ""> I found out that it is a Chrome issue IMO:\n\nThat's an issue with us moving the real selection to the fake sel container and not blocking mousemoves later on which makes the browser render the selection starting from the fake sel container and ending at your cursor position."", 'author': 'Reinmar'}, {'body': 'DUP with some additional info: https://github.com/ckeditor/ckeditor5/issues/6302.', 'author': 'Reinmar'}, {'body': 'DUP in https://github.com/ckeditor/ckeditor5/issues/6300.', 'author': 'Reinmar'}, {'body': 'May fix #6299.', 'author': 'Reinmar'}, {'body': ""Let's not forget this case ([more details](https://github.com/ckeditor/ckeditor5/issues/6340)):\r\n\r\n![bug_cke5](https://user-images.githubusercontent.com/20988892/75426977-f407f880-5945-11ea-8834-ec7c208e04c9.gif)"", 'author': 'Reinmar'}, {'body': '### Safari\r\n\r\n## 📝 Provide detailed reproduction steps (if any)\r\n\r\n1. Try to select multiple cells in Safari.\r\n\r\n### ✔️ Expected result\r\n\r\nCells are selected.\r\n\r\n### ❌ Actual result\r\n\r\nDisco 💃 \r\n\r\n![bug_cke5](https://user-images.githubusercontent.com/20988892/75428963-4e568880-5949-11ea-9757-f22732afe3f4.gif)\r\n', 'author': 'Mgsy'}, {'body': ""Let's keep it open for Safari."", 'author': 'oleq'}]","['type:feature', 'package:table']",CLOSED,6114,['6353'],"Table mouse selection UI/UX ## 📝 Provide a description of the new feature

Requires #6113.

Validate mouse selection indication UI/UIX. The solution used in #6113 is at the POC stage and a nice styling must be used for mouse selection.

This should address:

* Nice looking (and well blending) styles for selected table cells.
* Resolving the issue mentioned below by me.

## Progress log

### https://github.com/ckeditor/ckeditor5-table/pull/257 

The PR brings: 
* new selection styles,
* improved selection handling in Chrome (selection no longer starts in the fake sel container)
* [a minor fix for `MouseSelectionHandler` internals](https://github.com/ckeditor/ckeditor5/issues/6353)

### Remaining issues

* [ ] The selection is broken in Safari. In theory, this can be improved by a `selectionstart` listener kicking in at some specific moments (tried it, it works OK), but this is more a hack than the actual solution. It seems that the selection goes crazy in Safari once the mouse crosses the boundary of the table cell and resets to the beginning of editable.

   What we need instead is a solid research.
![image](https://user-images.githubusercontent.com/1099479/75558243-d1f3a080-5a41-11ea-9a8d-ecc055c7becc.png)
* [ ] [`MouseSelectionHandler#_handleMouseMove()` calls `TableSelection#stopSelection()` after the mouse has been released. Each such call runs `model.change()` which is very wrong](https://github.com/ckeditor/ckeditor5-table/blob/i/6114/src/tableselection/mouseselectionhandler.js#L99) and a potential source of issues.
  * IMO [this initial condition](https://github.com/ckeditor/ckeditor5-table/blob/fe2b7a0b04cafc4a6201ee4954c404ca8f862b58/src/tableselection/mouseselectionhandler.js#L98-L102) should be simply replaced by the `if ( !this._isSelecting ) { return; }` (what's the point of the `mousemove` handling if not selecting any more?)
   * When I changed the condition [this test failed](https://github.com/ckeditor/ckeditor5-table/blob/fe2b7a0b04cafc4a6201ee4954c404ca8f862b58/tests/tableselection/mouseselectionhandler.js#L269) and I cannot understand what scenario it tests from the test description and structure.


---

If you'd like to see this feature implemented, add a 👍 reaction to this post.
",8,4
ckeditor,ckeditor5,Table selection with keyboard,"## 📝 Provide a description of the new feature

It depends on custom navigation in tables: #3267 and #6113.

Adding keyboard navigation would enable us to use <kbd>shift</kbd> with arrows to extend selection over multiple cells.

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.
",jodator,['niegowski'],"[{'body': 'This will probably fix #3203 too.', 'author': 'Reinmar'}]","['type:feature', 'package:table', 'domain:accessibility']",CLOSED,6115,[],"Table selection with keyboard ## 📝 Provide a description of the new feature

It depends on custom navigation in tables: #3267 and #6113.

Adding keyboard navigation would enable us to use <kbd>shift</kbd> with arrows to extend selection over multiple cells.

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.
",18,9
ckeditor,ckeditor5,Review behavior of existing features on multi-range selections in tables,"## 📝 Provide a description of the improvement

Most of the CKEditor 5 features are already implemented with multi-range selection in mind or they operate on multiple nodes by default. However, as we introduce a multi-range selection as a supported solution in the model, we must check how features integrate with such a selection.

Add integration tests for the existing features that will validate that existing CKEditor 5 features works with a selected table fragment (multi-range selection).

Requires #6113.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",jodator,[],"[{'body': 'May be blocked by https://github.com/ckeditor/ckeditor5/issues/6328.', 'author': 'Reinmar'}, {'body': 'Features broken so far when executed on a multi-cell selection (they **crash**):\n* horizontal line\n* page break\n* special characters,\n* pasting\n\nI checked some of them and it mostly comes down to the `InputCommand` [working on the first range only](https://github.com/ckeditor/ckeditor5-typing/blob/7de78ad6be0d5f818b84b7a41875464969664bbb/src/inputcommand.js#L86) and passing a selection based on that range to `Model#deleteContent` which does not allow the [`TableSelection` hook](https://github.com/ckeditor/ckeditor5/issues/6356) to kick in.\n\nIf we fixed that, then the `Model#insertContent` would also probably fail, but this is [another issue](https://github.com/ckeditor/ckeditor5/issues/6328).', 'author': 'oleq'}]","['type:improvement', 'package:table']",CLOSED,6116,[],"Review behavior of existing features on multi-range selections in tables ## 📝 Provide a description of the improvement

Most of the CKEditor 5 features are already implemented with multi-range selection in mind or they operate on multiple nodes by default. However, as we introduce a multi-range selection as a supported solution in the model, we must check how features integrate with such a selection.

Add integration tests for the existing features that will validate that existing CKEditor 5 features works with a selected table fragment (multi-range selection).

Requires #6113.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",21,4
ckeditor,ckeditor5,Copy selected table fragment (base),"## 📝 Provide a description of the new feature

After reviewing #6113 (table selection approach) the next step is to copy a fragment of a table.

A selected part of a table must be copied to the system clipboard as a stand-alone table. It should be allowed to copy a table to an external editor that is capable of handling valid HTML markup.

Existing table editing features might need to be adjusted to be aware of copying partial tables.

Note: depending on #6119 status the cut shortcut might need to be handled as well.

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.
",jodator,['jodator'],[],"['type:feature', 'package:table']",CLOSED,6118,[],"Copy selected table fragment (base) ## 📝 Provide a description of the new feature

After reviewing #6113 (table selection approach) the next step is to copy a fragment of a table.

A selected part of a table must be copied to the system clipboard as a stand-alone table. It should be allowed to copy a table to an external editor that is capable of handling valid HTML markup.

Existing table editing features might need to be adjusted to be aware of copying partial tables.

Note: depending on #6119 status the cut shortcut might need to be handled as well.

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.
",2,4
ckeditor,ckeditor5,Cut / delete on selected table fragment,"## 📝 Provide a description of the new feature

Similarly to #6118, table selection should handle:

- the cut shortcut (<kbd>CTRL</kbd>+<kbd>X</kbd>)
- <kbd>Delete</kbd> or <kbd>Backspace</kbd>

as clearing the content of selected table cells.

Additionally, the cut shortcut should copy the contents to the clipboard. Requires only #6113 as either task (this or #6118) can handle this part (this requirement might be moved to a follow-up issue if #6118 is still open).

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.
",jodator,['jodator'],"[{'body': 'Currrent behviour:\r\n\r\n\r\n![2020-02-20 17 09 07](https://user-images.githubusercontent.com/1099479/74954685-c8e04f00-5403-11ea-8008-56bd13534cfd.gif)\r\n', 'author': 'Reinmar'}]","['type:feature', 'package:table']",CLOSED,6119,[],"Cut / delete on selected table fragment ## 📝 Provide a description of the new feature

Similarly to #6118, table selection should handle:

- the cut shortcut (<kbd>CTRL</kbd>+<kbd>X</kbd>)
- <kbd>Delete</kbd> or <kbd>Backspace</kbd>

as clearing the content of selected table cells.

Additionally, the cut shortcut should copy the contents to the clipboard. Requires only #6113 as either task (this or #6118) can handle this part (this requirement might be moved to a follow-up issue if #6118 is still open).

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.
",18,4
ckeditor,ckeditor5,Pasting table into a selected table fragment (bigger then one cell),"## 📝 Provide a description of the new feature

Requires only #6113 to be finished beforehand.

When pasting a table into a selected table fragment three scenarios might occur:

1. Selected table content area matches pasted table
2. Selected table content is smaller than the pasted table
3. Selected table content is bigger than the pasted table cell

Scenario 1: Current table content is cleared (potentially linked to #6119) and replaced by the content of a pasted table.
Scenario 2: Only the part of the pasted table that matches the selection will be pasted into the editor.
Scenario 3: Pasted table data will be replicated in the column by column, then row by row fashion.

Scenario 1 should be addressed first. Scenario 2 & 3 might be moved to a follow-up. Scenario 2 & 3 should be then blocked.

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.
",jodator,['jodator'],"[{'body': '### Should we alter `model.insertContent()` behavior when pasting or introduce an event to prevent default Clipboard\'s behavior?\r\n\r\n#### Background\r\n\r\nIn this task we need to override default clipboard handling if:\r\n\r\n*   (A) there\'s a selection over one or many table cells or inside a table cell\r\n*   (B) there\'s a table pasted\r\n\r\nThis can be done on multiple levels:\r\n\r\n1.  listening to `view.document` events - `paste`\r\n2.  listening to `Clipboard` plugin event `inputTransformation`\r\n3.  listening to `model` decorated method event `insertContent`\r\n\r\nI think that a best scenario would be to operate on model only here to check the selection (A) and checking what is going to be inserted from a model\'s POV (B) after the conversion.\r\n\r\nIn the above scenarios 1 & 2 are happening before conversion - so we operate on a view structure. I don\'t think this is good way to convert the same content multiple times as `Clipboard` will already convert the inserted content.\r\n\r\nThe scenario 3 is IMO a bit too late and too broad (we would override this behavior for every case - not only a paste but all other `model.insertContent` in above cases. Which might actually by OK.\r\n\r\n#### Proposals\r\n\r\n1.  The `model.insertConent()` is OK as it will handle ""all"" cases.\r\n2.  We should introduce new event for `Clipboard` plugin that would allow to override model manipulation.', 'author': 'jodator'}, {'body': 'Fun fact – insertContent() is observable and works on that level of abstraction exactly because of tables :D I had exactly tables in mind when forcing exposing this util 4 years ago.\r\n\r\nI now keep my fingers crossed for it to work in this case 🤣', 'author': 'Reinmar'}, {'body': '> I now keep my fingers crossed for it to work in this case rofl\r\n\r\nIt does work in a simplest scenario so far\xa0:crossed\\_fingers:\xa0\r\n\r\n![](https://user-images.githubusercontent.com/247363/81177693-5f55f280-8fa7-11ea-9dea-87a67b329bd2.gif)', 'author': 'jodator'}, {'body': ""Edge cases (possible follow ups):\r\n\r\n1.  Selected table fragment is not rectangular (ie you could not merge it using `MergeCellsCommand`)\r\n2.  Selected table fragment is rectangular but last row is rowspanned by previous (able to merge using `MergeCellsCommand` but current utils doesn't allow that.\r\n3.  Similar case as 2. but with columns / colspans.\r\n\r\nCases 2 & 3 looks like easy to handle as only different check is required.\r\n\r\nCase 1 requries cropping selection from table - might be harder."", 'author': 'jodator'}, {'body': 'Document MINOR BREAKING CHANGE: removed `cropTable()` function.', 'author': 'jodator'}, {'body': '> Scenario 3: Pasted table data will be replicated in the column by column, then row by row fashion.\r\n\r\nMoved to a follow-up: #6769.', 'author': 'jodator'}]","['type:feature', 'package:table', 'bc:minor']",CLOSED,6120,[],"Pasting table into a selected table fragment (bigger then one cell) ## 📝 Provide a description of the new feature

Requires only #6113 to be finished beforehand.

When pasting a table into a selected table fragment three scenarios might occur:

1. Selected table content area matches pasted table
2. Selected table content is smaller than the pasted table
3. Selected table content is bigger than the pasted table cell

Scenario 1: Current table content is cleared (potentially linked to #6119) and replaced by the content of a pasted table.
Scenario 2: Only the part of the pasted table that matches the selection will be pasted into the editor.
Scenario 3: Pasted table data will be replicated in the column by column, then row by row fashion.

Scenario 1 should be addressed first. Scenario 2 & 3 might be moved to a follow-up. Scenario 2 & 3 should be then blocked.

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.
",2,9
ckeditor,ckeditor5,Pasting table when only one table cell is selected,"## 📝 Provide a description of the new feature

This case requires a base pasting mechanism to work (#6120) but only in Scenario 1.

This case covers both:
- single table cell selected
- a collapsed (or non-collapsed) selection is placed inside a table cell

When only one table cell is selected the expected behavior is to insert a table cell in the same fashion as the selection would extend and match the selection dimension to the pasted table.

The table feature will replace the matched region in the target table with the content of the pasted one. If there is no space for the pasted table data, the target table will be expanded with empty columns and/or rows.

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.
",jodator,['niegowski'],[],"['type:feature', 'package:table']",CLOSED,6121,[],"Pasting table when only one table cell is selected ## 📝 Provide a description of the new feature

This case requires a base pasting mechanism to work (#6120) but only in Scenario 1.

This case covers both:
- single table cell selected
- a collapsed (or non-collapsed) selection is placed inside a table cell

When only one table cell is selected the expected behavior is to insert a table cell in the same fashion as the selection would extend and match the selection dimension to the pasted table.

The table feature will replace the matched region in the target table with the content of the pasted one. If there is no space for the pasted table data, the target table will be expanded with empty columns and/or rows.

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.
",2,9
ckeditor,ckeditor5,Handling spanned cell in pasting scenarios,"## 📝 Provide a description of the new feature

This case requires #6120 & #6121 to proceed. Add tests and fix potential issues of pasting tables with spanned cells.

A table feature already provides a table layout post-fixer that handles edge cases in which such a broken layout could be created in the editor (most often during collaboration). However, the paste must be aware of such a condition and minimize the effect of a potentially broken layout by trimming the cells that extend over the rectangle selection.

### Cases to handle

*   [ ] selection has spans at the edges (might not work well or is blocked)
*   [ ] non-rectangular selection (might be tricky) - require to split table cell similarly when changing headings algorithm
*   [ ] non-rectangular pasted table

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.",jodator,['jodator'],"[{'body': 'Also handle this case: https://github.com/ckeditor/ckeditor5/pull/6786#issuecomment-627214164.', 'author': 'jodator'}]","['type:feature', 'package:table']",CLOSED,6122,[],"Handling spanned cell in pasting scenarios ## 📝 Provide a description of the new feature

This case requires #6120 & #6121 to proceed. Add tests and fix potential issues of pasting tables with spanned cells.

A table feature already provides a table layout post-fixer that handles edge cases in which such a broken layout could be created in the editor (most often during collaboration). However, the paste must be aware of such a condition and minimize the effect of a potentially broken layout by trimming the cells that extend over the rectangle selection.

### Cases to handle

*   [ ] selection has spans at the edges (might not work well or is blocked)
*   [ ] non-rectangular selection (might be tricky) - require to split table cell similarly when changing headings algorithm
*   [ ] non-rectangular pasted table

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.",2,9
ckeditor,ckeditor5,Table selection handling: Merge cell split command,"## 📝 Provide a description of the improvement

The #6113 consists of a POC of this command. Hence we need to:

- cover it with tests
- revive previous `MergeCellCommand` as those might still be present
- the merge cells command will be disabled if the selection covers cells from the body and heading section.
- If a table cell in the selection is spanned but extends over the selection rectangle, the command will be disabled to prevent broken table layout.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",jodator,['jodator'],"[{'body': '**Note**: The current POC command state is backed up on [`i/6123` branch](https://github.com/ckeditor/ckeditor5-table/tree/i/6123).', 'author': 'jodator'}, {'body': ""TODO:\n\n* excavate the code that we wrote a long time (`i/6123`),\n* make sure that it's not possible to merge cells from the header part and the body part of a table,\n* add a split button"", 'author': 'Reinmar'}, {'body': 'This can be done in stage II because the marge up/down/left/right are sufficient for now.', 'author': 'Reinmar'}]","['type:improvement', 'package:table']",CLOSED,6123,[],"Table selection handling: Merge cell split command ## 📝 Provide a description of the improvement

The #6113 consists of a POC of this command. Hence we need to:

- cover it with tests
- revive previous `MergeCellCommand` as those might still be present
- the merge cells command will be disabled if the selection covers cells from the body and heading section.
- If a table cell in the selection is spanned but extends over the selection rectangle, the command will be disabled to prevent broken table layout.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",2,8
ckeditor,ckeditor5,"Table selection handling: Insert column, row commands","## 📝 Provide a description of the improvement

Current table modification commands are not aware of the table selection and operate on a single table cell from a selection. A user can insert a column on the right/left or a row above/below the current table cell. Those commands should insert ""after"" last selected or ""before"" first selected table cell so the insertion happens outside the selected block.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",jodator,['mlewand'],[],"['type:improvement', 'package:table']",CLOSED,6125,[],"Table selection handling: Insert column, row commands ## 📝 Provide a description of the improvement

Current table modification commands are not aware of the table selection and operate on a single table cell from a selection. A user can insert a column on the right/left or a row above/below the current table cell. Those commands should insert ""after"" last selected or ""before"" first selected table cell so the insertion happens outside the selected block.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",2,4
ckeditor,ckeditor5,"Table selection handling: Remove row, column commands","## 📝 Provide a description of the improvement

The commands should remove all selected rows (columns) when invoked.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",jodator,['mlewand'],[],"['type:improvement', 'package:table']",CLOSED,6126,[],"Table selection handling: Remove row, column commands ## 📝 Provide a description of the improvement

The commands should remove all selected rows (columns) when invoked.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",18,4
ckeditor,ckeditor5,"Table selection handling: Set heading rows, column commands","## 📝 Provide a description of the improvement

The command should toggle all rows from a selection in the following manner:

- If the last row (column) from the selected ones is not a header, then extend the heading section to it.
- If all columns in the selection are heading, remove them from the heading section.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",jodator,['mlewand'],[],"['type:improvement', 'package:table']",CLOSED,6127,[],"Table selection handling: Set heading rows, column commands ## 📝 Provide a description of the improvement

The command should toggle all rows from a selection in the following manner:

- If the last row (column) from the selected ones is not a header, then extend the heading section to it.
- If all columns in the selection are heading, remove them from the heading section.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",2,4
ckeditor,ckeditor5,Table selection handling: Split cell,"## 📝 Provide a description of the improvement

The split cell command should be disabled on multi-range selection. Command will be enabled only when selection is collapsed or a single table cell is selected.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",jodator,['mlewand'],[],"['type:improvement', 'package:table']",CLOSED,6128,[],"Table selection handling: Split cell ## 📝 Provide a description of the improvement

The split cell command should be disabled on multi-range selection. Command will be enabled only when selection is collapsed or a single table cell is selected.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",2,4
ckeditor,ckeditor5,Align table properties UI to multi-range selection,"Cases to cover:

- apply styles to all selected table cells
- display value from range of cells in the UI (if different values in the selected cells, let's display... as undefined – this is – no value set; we can improve this later on)

Decide:

- how to pass value to UI (multiple cells selected)",jodator,['jodator'],"[{'body': '> Decide:\r\n> \r\n> * how to pass value to UI (multiple cells selected)\r\n\r\nI would propose below:\r\n\r\n1. `Command#value` - behaves like a ""single"" value command - it is set to some value if **all** selected table cells have the same value (isn\'t coherent with other commands that would return value from first selected block)\r\n\r\n2. `Command#values` (or other name) is an array of values for all selected table cells.\r\n\r\n---\r\n\r\nSide note: Similar API _could_ be introduced in other commands but I don\'t see a common API for this (ie `Bold` command `#values` would be ambiguous.', 'author': 'jodator'}]","['type:improvement', 'package:table', 'domain:ui/ux']",CLOSED,6150,[],"Align table properties UI to multi-range selection Cases to cover:

- apply styles to all selected table cells
- display value from range of cells in the UI (if different values in the selected cells, let's display... as undefined – this is – no value set; we can improve this later on)

Decide:

- how to pass value to UI (multiple cells selected)",21,4
ckeditor,ckeditor5,Test whether all table features are still functional if the table selection does not work,"On some environments multi-cell table selection will not work initially but still all features should be functional (like - it should be possible to merge cells up/down, insert rows, etc).",jodator,[],"[{'body': ""We've tested it and everything looks good 👍 "", 'author': 'Mgsy'}]",['package:table'],CLOSED,6151,[],"Test whether all table features are still functional if the table selection does not work On some environments multi-cell table selection will not work initially but still all features should be functional (like - it should be possible to merge cells up/down, insert rows, etc).",21,4
ckeditor,ckeditor5,Allow selection to be set on object elements,"## 📝 Provide a description of the improvement

Right now, the selection post-fixer does not allow setting a selection inside limit elements. However, some deeply nested structure (tables) will require that a selection can be set inside the `limit` element on the `object` element. Such selection should not be fixed.

## 📃 Other details

This enables the #3202 in a way that post-fixer will not try to fix selection ranges that are set on object elements.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",jodator,['jodator'],[],"['type:improvement', 'package:engine']",CLOSED,6154,[],"Allow selection to be set on object elements ## 📝 Provide a description of the improvement

Right now, the selection post-fixer does not allow setting a selection inside limit elements. However, some deeply nested structure (tables) will require that a selection can be set inside the `limit` element on the `object` element. Such selection should not be fixed.

## 📃 Other details

This enables the #3202 in a way that post-fixer will not try to fix selection ranges that are set on object elements.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",21,4
ckeditor,ckeditor5,Table selection does not cooporate with typing,"## 📝 Provide detailed reproduction steps (if any)

1. Make mouse selection in table for 2+ table cells
2. Type something


### ✔️ Expected result

You should be able to type in last table cell.

### ❌ Actual result

Something breaks

## 📃 Other details

I've tried to fix this issue with 

```js
this.listenTo( viewDocument, 'keydown', () => {
	if ( !this.hasMultiCellSelection ) {
		return;
	}

	editor.model.change( writer => {
		const end = this._endElement;
		this.clearSelection();
		writer.setSelection( end.getChild( 0 ), 0 );
	} );
}, { priority: 'highest' } );
```

In the `TableSelection` class and it works well but it needs some behavior polishing. For isntance arrows do not work as expected (you end up in different cell then `end` one.


---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",jodator,[],"[{'body': ""This should be handled in the ckeditor5-typing package. There's a listener for keydown which should make sure that the selection is collapsed. Let's move the selection to the first cell. We don't even need to select its content."", 'author': 'Reinmar'}, {'body': 'May be blocked by https://github.com/ckeditor/ckeditor5/issues/6328.', 'author': 'Reinmar'}]","['type:bug', 'package:table']",CLOSED,6284,[],"Table selection does not cooporate with typing ## 📝 Provide detailed reproduction steps (if any)

1. Make mouse selection in table for 2+ table cells
2. Type something


### ✔️ Expected result

You should be able to type in last table cell.

### ❌ Actual result

Something breaks

## 📃 Other details

I've tried to fix this issue with 

```js
this.listenTo( viewDocument, 'keydown', () => {
	if ( !this.hasMultiCellSelection ) {
		return;
	}

	editor.model.change( writer => {
		const end = this._endElement;
		this.clearSelection();
		writer.setSelection( end.getChild( 0 ), 0 );
	} );
}, { priority: 'highest' } );
```

In the `TableSelection` class and it works well but it needs some behavior polishing. For isntance arrows do not work as expected (you end up in different cell then `end` one.


---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",29,4
ckeditor,ckeditor5,Table cell/row/column selection – stage II,"This is a followup for the table selection MVP ticket (#3202).

In this iteration following improvements will be implemented:

*   [Improved keyboard handling (up and down arrows, tab handling)](https://github.com/ckeditor/ckeditor5/issues/3267)
*   [Introduced select entire row and select entire column features](https://github.com/ckeditor/ckeditor5/issues/6500)
*   [Improved merge and split command handling](https://github.com/ckeditor/ckeditor5/issues/6123)
*   [Improved removing rows/columng from tables with colspan/rowspan multi-cell selections](https://github.com/ckeditor/ckeditor5/issues/6406)
*   [Table properties balloon should be positioned in relation to the selection rather than the entire table](https://github.com/ckeditor/ckeditor5/issues/6357)
*   [Fixed a case where it was possible to merge regular cell with a header cell](https://github.com/ckeditor/ckeditor5/issues/6521)
*   [Fixed a crash when undoing row insertion with cell properties applied](https://github.com/ckeditor/ckeditor5/issues/6382)
*   [Fixed a crash when removing a row after horizontal split](https://github.com/ckeditor/ckeditor5/issues/6401)",jodator,[],"[{'body': 'Hi, is the cell/row/column selection working in collaboration ?\r\nI thought it was planned on this stage.', 'author': 'QuentinLeGoff'}, {'body': 'No, not yet. Still in the pipeline for Q2.', 'author': 'Reinmar'}]","['package:table', 'Epic']",CLOSED,6285,"['6123', '6382', '3267', '6357', '6521', '6500', '6401', '6406']","Table cell/row/column selection – stage II This is a followup for the table selection MVP ticket (#3202).

In this iteration following improvements will be implemented:

*   [Improved keyboard handling (up and down arrows, tab handling)](https://github.com/ckeditor/ckeditor5/issues/3267)
*   [Introduced select entire row and select entire column features](https://github.com/ckeditor/ckeditor5/issues/6500)
*   [Improved merge and split command handling](https://github.com/ckeditor/ckeditor5/issues/6123)
*   [Improved removing rows/columng from tables with colspan/rowspan multi-cell selections](https://github.com/ckeditor/ckeditor5/issues/6406)
*   [Table properties balloon should be positioned in relation to the selection rather than the entire table](https://github.com/ckeditor/ckeditor5/issues/6357)
*   [Fixed a case where it was possible to merge regular cell with a header cell](https://github.com/ckeditor/ckeditor5/issues/6521)
*   [Fixed a crash when undoing row insertion with cell properties applied](https://github.com/ckeditor/ckeditor5/issues/6382)
*   [Fixed a crash when removing a row after horizontal split](https://github.com/ckeditor/ckeditor5/issues/6401)",14,4
ckeditor,ckeditor5,Table cell/row/column selection – stage III (optional features),"This is a followup for the table selection optional features (after stage II: #6285).

- [x] #6120: Pasting table into a selected table fragment (bigger than one cell)
    - [x] #6769: Handle case of a smaller table pasted into bigger selection
- [x] #6121: Pasting table when only one table cell is selected
- [x] #6122: Handling spanned cell in pasting scenarios
- [x] #6115: Table selection with keyboard
- [x] #6453: Multiselection breaks in tables while holding Shift key
- [x] #6446: The live preview of the table cell background should work with multiple-cell selection
- [x] #6631: The arrow next to the ""merge cells"" button seems to be disabled
",jodator,[],[],"['type:feature', 'package:table', 'Epic']",CLOSED,6297,"['6446', '6115', '6453', '6769', '6120', '6122', '6631', '6121']","Table cell/row/column selection – stage III (optional features) This is a followup for the table selection optional features (after stage II: #6285).

- [x] #6120: Pasting table into a selected table fragment (bigger than one cell)
    - [x] #6769: Handle case of a smaller table pasted into bigger selection
- [x] #6121: Pasting table when only one table cell is selected
- [x] #6122: Handling spanned cell in pasting scenarios
- [x] #6115: Table selection with keyboard
- [x] #6453: Multiselection breaks in tables while holding Shift key
- [x] #6446: The live preview of the table cell background should work with multiple-cell selection
- [x] #6631: The arrow next to the ""merge cells"" button seems to be disabled
",8,4
ckeditor,ckeditor5,Multiple cell selection does not get along with enter,"## 📝 Provide detailed reproduction steps (if any)

![2020-02-20 17 07 06](https://user-images.githubusercontent.com/1099479/74954526-89b1fe00-5403-11ea-8483-fe79508464d1.gif)


### ✔️ Expected result

To be researched (e.g. in popular desktop editors).

### ❌ Actual result

The result is unpredictable.

## 📃 Other details

A follow-up of https://github.com/ckeditor/ckeditor5/issues/6113.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.

",oleq,[],"[{'body': ""Solution: select the last cell's content and let the current enter algorithm work."", 'author': 'Reinmar'}, {'body': 'May be blocked by https://github.com/ckeditor/ckeditor5/issues/6328.', 'author': 'Reinmar'}]","['type:bug', 'package:table']",CLOSED,6301,['6113'],"Multiple cell selection does not get along with enter ## 📝 Provide detailed reproduction steps (if any)

![2020-02-20 17 07 06](https://user-images.githubusercontent.com/1099479/74954526-89b1fe00-5403-11ea-8483-fe79508464d1.gif)


### ✔️ Expected result

To be researched (e.g. in popular desktop editors).

### ❌ Actual result

The result is unpredictable.

## 📃 Other details

A follow-up of https://github.com/ckeditor/ckeditor5/issues/6113.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.

",12,4
ckeditor,ckeditor5,"Ensure that multi-range selections are handled in deleteContent(), insertContent() and modifySelection()","## 📝 Provide a description of the improvement

**EDIT:** Read @Reinmar's comment and following discussion first.

The scope of this ticket was narrowed to handling multi-range selections in the base methods in the engine.

---

ATM the `model.deleteContent()` (EDIT: and the two other methods as well) is not aware of multi-range selection. For this I had to manually handle clearing the table cell contents for the clipboard ""cut"" (ref PR: ckeditor/ckeditor5-table#254).

This could be handled by the `model.deleteContent()` so it would iterate over each range from the selection. Handled by the `Clipboard` plugin here: https://github.com/ckeditor/ckeditor5-clipboard/blob/b1b956716e81f45ce34bcfae1bb13f3348078c21/src/clipboard.js#L130-L132 and by the `TableClipboard` plugin here: https://github.com/ckeditor/ckeditor5-table/blob/8e0a92215e4368ec6e7b2ec5fb857bea53a74975/src/tableclipboard.js#L102-L105.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",jodator,[],"[{'body': ""Note: Standard implementation of those 3 methods may not be completely optimal for table cases. Those implementations should be rudimental and simple.\r\n\r\nThen, we can extend the behaviour of those methods (they are firing events) from the table selection plugins. \r\n\r\nFor instance, this should probably be the default behaviour:\r\n\r\n* deleteContent:\r\n   1. run the current behaviour of this function but for each range separately,\r\n   1. place the selection (collapsed) in place of the first/last range (depending on whether this was forward or backward deletion).\r\n* insertContent:\r\n   1. deleteContent() to create a collapsed selection (with a single range)\r\n   2. run the standard logic\r\n* modifySelection (may work this way already):\r\n   1. ignore all ranges but first\r\n   1. do the standard thing\r\n\r\nNow, those implementations will not satisfy table scenarios. There, we need better handling:\r\n\r\n* deleteContent\r\n  1. clear content of each selected cell\r\n  2. place the collapsed selection in first/last of them\r\n* insertContent\r\n   1. run deleteContent to make the selection collapsed\r\n   1. do the standard thing\r\n\r\nIt may happen that it's possible for now to work only on the second half of this problem, skipping the default implementations. If that's possible, we should do exactly that and avoid touching the engine at all now."", 'author': 'Reinmar'}, {'body': ""@Reinmar you're right. The delete content decoration fixed the typing and delete bugs. While I'm working on it the other thing occurred. To have a nice UX I think that we also need to decorate `delete` command (to place the collapsed selection in first/last of cells).\r\n\r\nAnyway, both fixes are short so they should be available soon."", 'author': 'jodator'}, {'body': 'Linked issue: https://github.com/ckeditor/ckeditor5/issues/3115.', 'author': 'jodator'}, {'body': 'I extracted the part about making ckeditor5-table work with methods, not commands to #6356[.](https://github.com/ckeditor/ckeditor5/issues/6356)\r\n\r\nThe remaining thing here will be to ensure that the base methods in ckeditor5-engine do support multi-range selections in a non-crashy way.', 'author': 'Reinmar'}, {'body': ""There has been no activity on this issue for the past year. We've marked it as stale and will close it in 30 days. We understand it may still be relevant, so if you're interested in the solution, leave a comment or reaction under this issue."", 'author': 'CKEditorBot'}, {'body': ""We've closed your issue due to inactivity over the last year. We understand that the issue may still be relevant. If so, feel free to open a new one (and link this issue to it)."", 'author': 'CKEditorBot'}]","['type:improvement', 'package:engine', 'resolution:expired', 'status:stale']",CLOSED,6328,[],"Ensure that multi-range selections are handled in deleteContent(), insertContent() and modifySelection() ## 📝 Provide a description of the improvement

**EDIT:** Read @Reinmar's comment and following discussion first.

The scope of this ticket was narrowed to handling multi-range selections in the base methods in the engine.

---

ATM the `model.deleteContent()` (EDIT: and the two other methods as well) is not aware of multi-range selection. For this I had to manually handle clearing the table cell contents for the clipboard ""cut"" (ref PR: ckeditor/ckeditor5-table#254).

This could be handled by the `model.deleteContent()` so it would iterate over each range from the selection. Handled by the `Clipboard` plugin here: https://github.com/ckeditor/ckeditor5-clipboard/blob/b1b956716e81f45ce34bcfae1bb13f3348078c21/src/clipboard.js#L130-L132 and by the `TableClipboard` plugin here: https://github.com/ckeditor/ckeditor5-table/blob/8e0a92215e4368ec6e7b2ec5fb857bea53a74975/src/tableclipboard.js#L102-L105.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",0,4
ckeditor,ckeditor5,Table Shift+Click selection UX,"## 📝 Provide a description of the improvement

It should be possible to create a selection with pressed <kbd>Shift</kbd> and a click, for instance (GDocs):

![2020-02-25 16 51 38](https://user-images.githubusercontent.com/1099479/75264174-513d6600-57ef-11ea-9d85-e6e8b92c9eba.gif)


Strongly related to https://github.com/ckeditor/ckeditor5/issues/6114.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",oleq,['Reinmar'],[],"['type:improvement', 'package:table', 'domain:ui/ux']",CLOSED,6330,['6114'],"Table Shift+Click selection UX ## 📝 Provide a description of the improvement

It should be possible to create a selection with pressed <kbd>Shift</kbd> and a click, for instance (GDocs):

![2020-02-25 16 51 38](https://user-images.githubusercontent.com/1099479/75264174-513d6600-57ef-11ea-9d85-e6e8b92c9eba.gif)


Strongly related to https://github.com/ckeditor/ckeditor5/issues/6114.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",31,4
ckeditor,ckeditor5,Enable table selection as core table feature,"## Provide a description of the task

Make `Table` feature require `TableSelection` and `TableClipboard` to test it with all features on master now.

If we see that the `TableSelection` / `TableClipboard` do not work reliably we can disable them before release.
",jodator,"['jodator', 'oleq']",[],"['type:task', 'package:table']",CLOSED,6343,[],"Enable table selection as core table feature ## Provide a description of the task

Make `Table` feature require `TableSelection` and `TableClipboard` to test it with all features on master now.

If we see that the `TableSelection` / `TableClipboard` do not work reliably we can disable them before release.
",7,4
ckeditor,ckeditor5,Selecting a table cell (or cells) through a model does not render a nice table selection,"## 📝 Provide a description of the improvement

So. we not only have to handle selection done by the mouse, but also programmatically through the model. This will e.g. fix the undo which is not able to select cells right now.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",Reinmar,['jodator'],"[{'body': 'One thing is this check: https://github.com/ckeditor/ckeditor5-table/blob/3a2e025b7d3132a603d3bd5d814f76f8a5e1bf54/src/tableselection/converters.js#L24 and the `TableSelection.hasMultipleCellSelection` is used in various places.\r\n\r\nThe `TableSelection` does not restore or handle selection set elsewhere (ie by the model modification elsewhere).\r\n\r\nThis might require:\r\n1. change for this check\r\n2. how the `TableSelection` returns `getSelectedTableCells`', 'author': 'jodator'}, {'body': 'It may be worth resolving https://github.com/ckeditor/ckeditor5/issues/6347 when working on this issue.', 'author': 'Reinmar'}, {'body': 'Check also: https://github.com/ckeditor/ckeditor5/issues/6353.', 'author': 'jodator'}]",['type:improvement'],CLOSED,6346,[],"Selecting a table cell (or cells) through a model does not render a nice table selection ## 📝 Provide a description of the improvement

So. we not only have to handle selection done by the mouse, but also programmatically through the model. This will e.g. fix the undo which is not able to select cells right now.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",2,4
ckeditor,ckeditor5,It should be possible to make selection of a single cell.,"## 📝 Provide detailed reproduction steps (if any)

1. Start selection in cell A
2. Drag to the left (to select e.g. 3 cells)
3. Drag back to the right to move the selection back to cell A.

### ✔️ Expected result

It should select that single cell A.

### ❌ Actual result

It keeps selection of a minimum of two cells.

## 📃 Other details

We need to fix the logic there. Right now we care fore ""multi-range cell selections"" but single-cell selections are fine too. 

May be related #6346.",Reinmar,[],"[{'body': 'BONUS: Copy that selection of 2 cells and you get an error. Will automatically start working when we switch the logic to handle single-cell selections.', 'author': 'Reinmar'}]","['type:bug', 'package:table']",CLOSED,6347,[],"It should be possible to make selection of a single cell. ## 📝 Provide detailed reproduction steps (if any)

1. Start selection in cell A
2. Drag to the left (to select e.g. 3 cells)
3. Drag back to the right to move the selection back to cell A.

### ✔️ Expected result

It should select that single cell A.

### ❌ Actual result

It keeps selection of a minimum of two cells.

## 📃 Other details

We need to fix the logic there. Right now we care fore ""multi-range cell selections"" but single-cell selections are fine too. 

May be related #6346.",15,4
ckeditor,ckeditor5,Multiple cell selection should not fail when mouse is over a widget,"## 📝 Provide detailed reproduction steps (if any)

![2020-02-27 14 57 15](https://user-images.githubusercontent.com/1099479/75451919-a30df980-5971-11ea-8a27-5fcef37cbb7a.gif)

When the mouse hovers over the image widget, the entire table gets selected.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",oleq,[],"[{'body': 'Fixed in https://github.com/ckeditor/ckeditor5-table/pull/257.', 'author': 'oleq'}]","['type:bug', 'package:table']",CLOSED,6348,[],"Multiple cell selection should not fail when mouse is over a widget ## 📝 Provide detailed reproduction steps (if any)

![2020-02-27 14 57 15](https://user-images.githubusercontent.com/1099479/75451919-a30df980-5971-11ea-8a27-5fcef37cbb7a.gif)

When the mouse hovers over the image widget, the entire table gets selected.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",31,4
ckeditor,ckeditor5,Table MouseSelectionHandler should reset its #isSelecting flag on mouseup,"## 📝 Provide detailed reproduction steps (if any)

It [sets the flag `true`](https://github.com/ckeditor/ckeditor5-table/blob/d498df44a424147a04147bc08ff8503baa421b60/src/tableselection/mouseselectionhandler.js#L85) but never `false` during its lifecycle.

This could potentially affect the selection logic.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",oleq,['oleq'],"[{'body': 'Closed with ckeditor/ckeditor5-table@516ba8c.', 'author': 'Reinmar'}]","['type:bug', 'package:table']",CLOSED,6353,[],"Table MouseSelectionHandler should reset its #isSelecting flag on mouseup ## 📝 Provide detailed reproduction steps (if any)

It [sets the flag `true`](https://github.com/ckeditor/ckeditor5-table/blob/d498df44a424147a04147bc08ff8503baa421b60/src/tableselection/mouseselectionhandler.js#L85) but never `false` during its lifecycle.

This could potentially affect the selection logic.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",12,4
ckeditor,ckeditor5,Position table cell properties balloon in relation to multiple-cell,"## 📝 Provide a description of the improvement

Right now we position the balloon relatively to the first selected cell (`getTableCellAtPosition()` in `ui/utils.js`). `Position` utils accept rects, DOM elements or DOM ranges. We can easily create a DOM range which starts before the first selected cell and ends after the last selected cell.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",Reinmar,['niegowski'],"[{'body': 'A welcome improvement.\r\n\r\nCould this ""Table properties"" balloon be improved ? Right now, when clicked at the top of table it will be displayed on top, and in case, when table is first thing inside page it will overflow.\r\n\r\n\r\n![table_properties_overflow2](https://user-images.githubusercontent.com/5758421/75678877-41160280-5c97-11ea-8f01-7fa5548b2b3b.png)\r\n\r\nAlso, in large tables ( when table top/bottom is not visible ) it is not possible to change cell properties without scrolling ( it is also not clear from user perspective, how to, as controls are not visible )\r\n', 'author': 'remigasas'}, {'body': 'Cake recipe\n\n```js\nexport function getBalloonCellPositionData( editor ) {\n\tconst modelRanges = [ ...editor.model.document.selection.getRanges() ];\n\n\t// Multi-cell selection.\n\tif ( modelRanges.length > 1 ) {\n\t\t// A range enclosing all cells.\n\t\tconst scopeRange = editor.model.createRange( modelRanges[ 0 ].start, modelRanges[ modelRanges.length - 1 ].end );\n\t\tconst viewRange = editor.editing.mapper.toViewRange( scopeRange );\n\t\tconst domRange = editor.editing.view.domConverter.viewRangeToDom( viewRange );\n\n\t\treturn {\n\t\t\ttarget: () => {\n\t\t\t\tconst domRangeRect = domRange.getBoundingClientRect();\n\t\t\t\tconst rect = new Rect( domRangeRect );\n\n\t\t\t\treturn rect;\n\t\t\t},\n\t\t\tpositions: BALLOON_POSITIONS\n\t\t};\n\t}\n\n\t// Selection in a table cell.\n\telse {\n\t\tconst modelTableCell = getTableCellAtPosition( editor.model.document.selection.getFirstPosition() );\n\t\tconst viewTableCell = editor.editing.mapper.toViewElement( modelTableCell );\n\n\t\treturn {\n\t\t\ttarget: editor.editing.view.domConverter.viewToDom( viewTableCell ),\n\t\t\tpositions: BALLOON_POSITIONS\n\t\t};\n\t}\n}\n```', 'author': 'oleq'}, {'body': ""The recipe works but it's not elegant. The thing is that instead of\r\n\r\n```js\r\nconst domRange = editor.editing.view.domConverter.viewRangeToDom( viewRange );\r\n\r\nreturn {\r\n\ttarget: () => {\r\n\t\tconst domRangeRect = domRange.getBoundingClientRect();\r\n\t\tconst rect = new Rect( domRangeRect );\r\n\r\n\t\treturn rect;\r\n\t},\r\n\tpositions: BALLOON_POSITIONS\r\n};\r\n```\r\n\r\nit should be\r\n\r\n```js\r\nconst domRange = editor.editing.view.domConverter.viewRangeToDom( viewRange );\r\n\r\nreturn {\r\n\ttarget: domRange,\r\n\tpositions: BALLOON_POSITIONS\r\n};\r\n```\r\n\r\nbut ATM the `Rect` class that would normally accept the DOMRange [does it in a wrong way](https://github.com/ckeditor/ckeditor5-utils/blob/8846e660d5e7e9c766d84c1e181456d1f308d00b/src/dom/rect.js#L81), which results in a Rect of (most likely) the first cell only (because there are multiple DOMRects in `domRect.getClientRects()`). \r\n\r\nIt's been year since I wrote this `Rect.getDomRangeRects( source )[ 0 ]` in `Rect#constrcutor()` and something tells me that it had something to do with Safari which didn't support `DOMRange#getBoundingClientRect()` back then (or was it Edge?). Anyway, maybe it's time we finally figured it out in this issue because to me `copyRectProperties( this, source.getBoundingClientRect() );` sounds like a natural choice."", 'author': 'oleq'}]","['type:improvement', 'intro', 'package:table', 'domain:ui/ux']",CLOSED,6357,[],"Position table cell properties balloon in relation to multiple-cell ## 📝 Provide a description of the improvement

Right now we position the balloon relatively to the first selected cell (`getTableCellAtPosition()` in `ui/utils.js`). `Position` utils accept rects, DOM elements or DOM ranges. We can easily create a DOM range which starts before the first selected cell and ends after the last selected cell.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",21,8
ckeditor,ckeditor5,[Table] Crash when undoing row insertion and adding cell properties,"## 📝 Provide detailed reproduction steps (if any)

1. Go to `tableselection` test and add a table
2. Select single cell or multiple cells
3. Add row above or below
4. Select the whole new row
5. Open cell properties and add background color
6. Without changing the selection, `undo` two times

### ✔️ Expected result

Undoing works just fine

### ❌ Actual result

Editor crashes:
![table_undo2](https://user-images.githubusercontent.com/34380544/75984684-25a33580-5eeb-11ea-978a-c99b04747e98.gif)


#### NOTE: it is even easier to reproduce it on branch `i/6114b` - you can do it with or without changing the selection in step 6

### Errors:
```js
Uncaught CKEditorError: model-selection-range-intersects: Trying to add a range that intersects with another range in the selection. Read more: https://ckeditor.com/docs/ckeditor5/latest/framework/guides/support/error-codes.html#error-model-selection-range-intersects
 {""addedRange"":{""start"":{""root"":""main"",""path"":[1,1,0],""stickiness"":""toNext""},""end"":{""root"":""main"",""path"":[1,1,1],""stickiness"":""toPrevious""}},""intersectingRange"":{""start"":{""root"":""main"",""path"":[1,1,0],""stickiness"":""toNext""},""end"":{""root"":""main"",""path"":[1,1,1],""stickiness"":""toPrevious""}}}
    at LiveSelection._checkRange (http://localhost:8125/ckeditor5-table/tests/manual/tableselection.js:64846:11)
    at LiveSelection._prepareRange (http://localhost:8125/ckeditor5-table/tests/manual/tableselection.js:51700:8)
    at LiveSelection._fixGraveyardSelection (http://localhost:8125/ckeditor5-table/tests/manual/tableselection.js:52022:26)
    at Model.LiveSelection.listenTo.priority (http://localhost:8125/ckeditor5-table/tests/manual/tableselection.js:51514:10)
    at Model.fire (http://localhost:8125/ckeditor5-table/tests/manual/tableselection.js:124433:30)
    at Model.<computed> [as applyOperation] (http://localhost:8125/ckeditor5-table/tests/manual/tableselection.js:126570:16)
    at UndoCommand._undo (http://localhost:8125/ckeditor5-table/tests/manual/tableselection.js:119730:11)
    at Object.callback (http://localhost:8125/ckeditor5-table/tests/manual/tableselection.js:120017:9)
    at Model._runPendingChanges (http://localhost:8125/ckeditor5-table/tests/manual/tableselection.js:54477:58)
    at Model.enqueueChange (http://localhost:8125/ckeditor5-table/tests/manual/tableselection.js:53903:10)
```

```js
Uncaught TypeError: Cannot read property 'getChildIndex' of null
    at TableUtils.getCellLocation (tableutils.js:59)
    at TableSelection.getSelectedTableCells (tableselection.js:214)
    at getSelectedTableCells.next (<anonymous>)
    at TableSelection._updateModelSelection (tableselection.js:265)
    at TableSelection.stopSelection (tableselection.js:180)
    at MouseSelectionHandler._handleMouseMove (mouseselectionhandler.js:99)
    at Document.<anonymous> (mouseselectionhandler.js:64)
    at Document.fire (emittermixin.js:209)
    at MouseEventsObserver.fire (domeventobserver.js:96)
    at MouseEventsObserver.onDomEvent (mouseeventsobserver.js:42)
```

## 📃 Other details

* Browser: any
* OS: any

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",FilipTokarski,['jodator'],"[{'body': ""Could you paste the stack trace? It's very helpful when looking for similar issues. Often, similar issues give the same error and we can easily find duplicates this way."", 'author': 'Reinmar'}, {'body': 'Wow sorry for that, I was sure I added the errors, must have missed something 🤦\u200d♂ Anyway, I updated the report.', 'author': 'FilipTokarski'}, {'body': ""There's a workaround in some remove col/row commands so they select the entire table before starting operating on cells. This works around the same issue – document selection is not able to properly manage its ranges when the document changes (cells are removed, ranges get insersected)."", 'author': 'Reinmar'}, {'body': 'May be resolved by #6501.', 'author': 'Reinmar'}]","['type:bug', 'package:engine', 'package:table']",CLOSED,6382,[],"[Table] Crash when undoing row insertion and adding cell properties ## 📝 Provide detailed reproduction steps (if any)

1. Go to `tableselection` test and add a table
2. Select single cell or multiple cells
3. Add row above or below
4. Select the whole new row
5. Open cell properties and add background color
6. Without changing the selection, `undo` two times

### ✔️ Expected result

Undoing works just fine

### ❌ Actual result

Editor crashes:
![table_undo2](https://user-images.githubusercontent.com/34380544/75984684-25a33580-5eeb-11ea-978a-c99b04747e98.gif)


#### NOTE: it is even easier to reproduce it on branch `i/6114b` - you can do it with or without changing the selection in step 6

### Errors:
```js
Uncaught CKEditorError: model-selection-range-intersects: Trying to add a range that intersects with another range in the selection. Read more: https://ckeditor.com/docs/ckeditor5/latest/framework/guides/support/error-codes.html#error-model-selection-range-intersects
 {""addedRange"":{""start"":{""root"":""main"",""path"":[1,1,0],""stickiness"":""toNext""},""end"":{""root"":""main"",""path"":[1,1,1],""stickiness"":""toPrevious""}},""intersectingRange"":{""start"":{""root"":""main"",""path"":[1,1,0],""stickiness"":""toNext""},""end"":{""root"":""main"",""path"":[1,1,1],""stickiness"":""toPrevious""}}}
    at LiveSelection._checkRange (http://localhost:8125/ckeditor5-table/tests/manual/tableselection.js:64846:11)
    at LiveSelection._prepareRange (http://localhost:8125/ckeditor5-table/tests/manual/tableselection.js:51700:8)
    at LiveSelection._fixGraveyardSelection (http://localhost:8125/ckeditor5-table/tests/manual/tableselection.js:52022:26)
    at Model.LiveSelection.listenTo.priority (http://localhost:8125/ckeditor5-table/tests/manual/tableselection.js:51514:10)
    at Model.fire (http://localhost:8125/ckeditor5-table/tests/manual/tableselection.js:124433:30)
    at Model.<computed> [as applyOperation] (http://localhost:8125/ckeditor5-table/tests/manual/tableselection.js:126570:16)
    at UndoCommand._undo (http://localhost:8125/ckeditor5-table/tests/manual/tableselection.js:119730:11)
    at Object.callback (http://localhost:8125/ckeditor5-table/tests/manual/tableselection.js:120017:9)
    at Model._runPendingChanges (http://localhost:8125/ckeditor5-table/tests/manual/tableselection.js:54477:58)
    at Model.enqueueChange (http://localhost:8125/ckeditor5-table/tests/manual/tableselection.js:53903:10)
```

```js
Uncaught TypeError: Cannot read property 'getChildIndex' of null
    at TableUtils.getCellLocation (tableutils.js:59)
    at TableSelection.getSelectedTableCells (tableselection.js:214)
    at getSelectedTableCells.next (<anonymous>)
    at TableSelection._updateModelSelection (tableselection.js:265)
    at TableSelection.stopSelection (tableselection.js:180)
    at MouseSelectionHandler._handleMouseMove (mouseselectionhandler.js:99)
    at Document.<anonymous> (mouseselectionhandler.js:64)
    at Document.fire (emittermixin.js:209)
    at MouseEventsObserver.fire (domeventobserver.js:96)
    at MouseEventsObserver.onDomEvent (mouseeventsobserver.js:42)
```

## 📃 Other details

* Browser: any
* OS: any

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",8,8
ckeditor,ckeditor5,[Table] Crash when removing row after horizontal split,"## 📝 Provide detailed reproduction steps (if any)

1. Open some test with table
2. Select some cell and split horizontally two times
3. Select the middle cell and click `delete row`

### ✔️ Expected result

Row gets deleted

### ❌ Actual result

Editor crashes:
![table_split1](https://user-images.githubusercontent.com/34380544/76303014-4ab7ef80-62c1-11ea-9c31-96ac84169534.gif)

```js
Uncaught TypeError: Cannot read property 'is' of undefined
    at Function._createAt (position.js:914)
    at Model.createPositionAt (model.js:606)
    at Writer.createPositionAt (writer.js:597)
    at Object.callback (removerowcommand.js:103)
    at Model._runPendingChanges (model.js:801)
    at Model.change (model.js:170)
    at RemoveRowCommand.execute (removerowcommand.js:61)
    at RemoveRowCommand.<anonymous> (observablemixin.js:255)
    at RemoveRowCommand.fire (emittermixin.js:209)
    at RemoveRowCommand.<computed> [as execute] (observablemixin.js:259)
```

## 📃 Other details

I cannot reproduce it on latest docs, as well as v16 & v15. After bisecting, it seems that this bug was introduced by this commit: https://github.com/ckeditor/ckeditor5-table/commit/281dba525da57d9d28529c1bf43ef997dd93681b

* Browser: any
* OS: any

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",FilipTokarski,[],"[{'body': ""@FilipTokarski Could you verify this? WFM here.\r\n\r\nI would like also to verify what I see on the GIF: I can see that all the cells are grey besides the middle one - how this happens? I've tested it by:\r\n\r\n1. insert 3x3 table\r\n2. select last table cell and set heading columns (all table cells are grey)\r\n3. split middle table cell\r\n4. split the same table cell again\r\n5. move the selection to the new middle cell (as in your GIF)\r\n6. invoke delete row\r\n\r\nIt works for me now."", 'author': 'jodator'}, {'body': ""The cells are grey because they have styling applied, they are not header rows/columns. Sorry for that, indeed it might have been misleading.\r\n  \r\nAnyway, I checked it once again and now it works for me too. I guess it has been fixed together with other changes in table, in latest release. I'm closing this."", 'author': 'FilipTokarski'}]","['type:bug', 'package:table', 'type:regression']",CLOSED,6401,[],"[Table] Crash when removing row after horizontal split ## 📝 Provide detailed reproduction steps (if any)

1. Open some test with table
2. Select some cell and split horizontally two times
3. Select the middle cell and click `delete row`

### ✔️ Expected result

Row gets deleted

### ❌ Actual result

Editor crashes:
![table_split1](https://user-images.githubusercontent.com/34380544/76303014-4ab7ef80-62c1-11ea-9c31-96ac84169534.gif)

```js
Uncaught TypeError: Cannot read property 'is' of undefined
    at Function._createAt (position.js:914)
    at Model.createPositionAt (model.js:606)
    at Writer.createPositionAt (writer.js:597)
    at Object.callback (removerowcommand.js:103)
    at Model._runPendingChanges (model.js:801)
    at Model.change (model.js:170)
    at RemoveRowCommand.execute (removerowcommand.js:61)
    at RemoveRowCommand.<anonymous> (observablemixin.js:255)
    at RemoveRowCommand.fire (emittermixin.js:209)
    at RemoveRowCommand.<computed> [as execute] (observablemixin.js:259)
```

## 📃 Other details

I cannot reproduce it on latest docs, as well as v16 & v15. After bisecting, it seems that this bug was introduced by this commit: https://github.com/ckeditor/ckeditor5-table/commit/281dba525da57d9d28529c1bf43ef997dd93681b

* Browser: any
* OS: any

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",8,8
ckeditor,ckeditor5,Removing complex colspan/rowspan multi-cell selections column/rows should be improved,"## 📝 Provide detailed reproduction steps (if any)

After ckeditor/ckeditor5-table#261 is merged, there are some edge cases not handled well. Example screencasts:

![](https://user-images.githubusercontent.com/5353898/76330700-769d9a00-62ee-11ea-86e8-9c08e80c8600.gif)

![](https://user-images.githubusercontent.com/5353898/76330709-7b624e00-62ee-11ea-9fa6-c5e62ac0469a.gif)

### ✔️ Expected result

The table structure should be better.

### ❌ Actual result

Weird artifact cells added to the right side of the table.

## 📃 Other details

*   Browser: Any
*   OS: Any
*   CKEditor version: latest `master`

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",mlewand,['jodator'],"[{'body': ""After checking this problem we've seen that a proper fix will require a lot of effort from us to get this right.\r\n\r\nBecause of that we'd like to understand whether it's an important issue for our users, before committing to it, so be sure to add :+1: reaction to the main post to show your support."", 'author': 'mlewand'}, {'body': 'Look at my comments here: https://github.com/ckeditor/ckeditor5/issues/6487.', 'author': 'jodator'}, {'body': ""> After checking this problem we've seen that a proper fix will require a lot of effort from us to get this right.\r\n\r\nNah, it was small oversight - the table map obtained from `TableWalker` must be recalculated on each row/column removal. Fix on the way."", 'author': 'jodator'}]","['type:bug', 'package:table', 'type:regression']",CLOSED,6406,[],"Removing complex colspan/rowspan multi-cell selections column/rows should be improved ## 📝 Provide detailed reproduction steps (if any)

After ckeditor/ckeditor5-table#261 is merged, there are some edge cases not handled well. Example screencasts:

![](https://user-images.githubusercontent.com/5353898/76330700-769d9a00-62ee-11ea-86e8-9c08e80c8600.gif)

![](https://user-images.githubusercontent.com/5353898/76330709-7b624e00-62ee-11ea-9fa6-c5e62ac0469a.gif)

### ✔️ Expected result

The table structure should be better.

### ❌ Actual result

Weird artifact cells added to the right side of the table.

## 📃 Other details

*   Browser: Any
*   OS: Any
*   CKEditor version: latest `master`

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",0,8
ckeditor,ckeditor5,The live preview of the table cell background should work with multiple-cell selection,"## 📝 Provide detailed reproduction steps (if any)

When the selection is in a cell, it works just fine. But when we display selected cell styles for multi-selection, they override the background.

This is almost impossible to fix unless we drop selected table cells' backgrounds completely in favor of borders.

![2020-03-16 13 34 41](https://user-images.githubusercontent.com/1099479/76759087-48570900-678b-11ea-951c-a6e67a73698f.gif)


## 📃 Other details

Somehow but not directly related https://github.com/ckeditor/ckeditor5/issues/6425.

cc @panr 

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",oleq,['panr'],"[{'body': 'Yeah, I know. Just wanted to issue it too 🙈 \r\n\r\n> This is almost impossible to fix\r\n\r\nNot really, when we move selection color to `:after` element then we can create a sami-transparent overlay over the cells. This may cause some other issues (related to `position: relative` on `td.ck-editor__editable_selected`), but... we can try it ;-)', 'author': 'panr'}, {'body': '@panr Could you make a quick POC?', 'author': 'Reinmar'}, {'body': 'I checked and\r\n\r\n```css\r\ntd.ck-editor__editable.ck-editor__nested-editable {\r\n    position: relative;\r\n}\r\n```\r\n\r\n```css\r\ntd.ck-editor__editable.ck-editor__nested-editable::after {\r\n    content: """";\r\n    background: red;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    pointer-events: none;\r\n    opacity: .2;\r\n}\r\n```\r\n\r\ngives promising results\r\n\r\n![image](https://user-images.githubusercontent.com/1099479/77433862-4242d700-6de0-11ea-9eb2-b41b0a920fed.png)\r\n', 'author': 'oleq'}, {'body': 'Related https://github.com/ckeditor/ckeditor5/issues/6425.', 'author': 'oleq'}, {'body': 'Having this fix https://github.com/ckeditor/ckeditor5-theme-lark/pull/282 I think we can also improve `:focus` state and deal with this https://github.com/ckeditor/ckeditor5/issues/6425, which I rethinked due to the some obstacles in styling multi selection to look more like a native solution. We can leave our blueish layer over the cells then. ', 'author': 'panr'}]","['type:bug', 'package:table', 'domain:ui/ux']",CLOSED,6446,['6425'],"The live preview of the table cell background should work with multiple-cell selection ## 📝 Provide detailed reproduction steps (if any)

When the selection is in a cell, it works just fine. But when we display selected cell styles for multi-selection, they override the background.

This is almost impossible to fix unless we drop selected table cells' backgrounds completely in favor of borders.

![2020-03-16 13 34 41](https://user-images.githubusercontent.com/1099479/76759087-48570900-678b-11ea-951c-a6e67a73698f.gif)


## 📃 Other details

Somehow but not directly related https://github.com/ckeditor/ckeditor5/issues/6425.

cc @panr 

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",31,9
ckeditor,ckeditor5,Multiselection breaks in tables while holding Shift key,"## 📝 Provide detailed reproduction steps (if any)

1. Select the cell somewhere in the middle of a table.
2. Holding `Shift` key, select another cell in the top-left corner of the table.
3. Still holding `Shift`, select another cell but this time in the top-right corner.
	- Chrome, Edge: 
           - Selection breaks :x:, but the right anchor cell is still selected ✅. When you click second time on the cell you wanted to select in the [3], selection re-appears ✅. 
          - But when you change direction to the bottom, then selection is still active ✅, but the anchor point is lost :x:…
	- Safari, Firefox: 
           - Selection breaks :x:, but this time we immediately loose anchor cell :x:. Newly selected cell becomes the anchor now :x:.

⚠️**In every screencast below I keep holding `Shift` key all the time.** 👇🏻

### ✔️ Expected result

Should be similar to the native apps (Pages) or even Google Docs:

**Pages**

![pages](https://user-images.githubusercontent.com/1303365/76839584-0afb8580-6836-11ea-897c-5ca1b222def1.gif)

**Google Docs**

![googledocs](https://user-images.githubusercontent.com/1303365/76839611-18b10b00-6836-11ea-9c8e-68be4bb2e120.gif)

### ❌ Actual result

**Chrome, Edge**

![multiselection](https://user-images.githubusercontent.com/1303365/76839681-3b432400-6836-11ea-81ab-9459ee73bc98.gif)

**Safari**

![safari](https://user-images.githubusercontent.com/1303365/76840014-d1774a00-6836-11ea-9952-2c0b808216ba.gif)

**Firefox**

![firefox](https://user-images.githubusercontent.com/1303365/76840064-ddfba280-6836-11ea-8e9d-5cab4166720e.gif)

## 📃 Other details

It seems that in Chrome and Edge it works slightly better than in the other browsers.

--
If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",panr,['niegowski'],[],"['type:bug', 'package:table', 'domain:ui/ux']",CLOSED,6453,[],"Multiselection breaks in tables while holding Shift key ## 📝 Provide detailed reproduction steps (if any)

1. Select the cell somewhere in the middle of a table.
2. Holding `Shift` key, select another cell in the top-left corner of the table.
3. Still holding `Shift`, select another cell but this time in the top-right corner.
	- Chrome, Edge: 
           - Selection breaks :x:, but the right anchor cell is still selected ✅. When you click second time on the cell you wanted to select in the [3], selection re-appears ✅. 
          - But when you change direction to the bottom, then selection is still active ✅, but the anchor point is lost :x:…
	- Safari, Firefox: 
           - Selection breaks :x:, but this time we immediately loose anchor cell :x:. Newly selected cell becomes the anchor now :x:.

⚠️**In every screencast below I keep holding `Shift` key all the time.** 👇🏻

### ✔️ Expected result

Should be similar to the native apps (Pages) or even Google Docs:

**Pages**

![pages](https://user-images.githubusercontent.com/1303365/76839584-0afb8580-6836-11ea-897c-5ca1b222def1.gif)

**Google Docs**

![googledocs](https://user-images.githubusercontent.com/1303365/76839611-18b10b00-6836-11ea-9c8e-68be4bb2e120.gif)

### ❌ Actual result

**Chrome, Edge**

![multiselection](https://user-images.githubusercontent.com/1303365/76839681-3b432400-6836-11ea-81ab-9459ee73bc98.gif)

**Safari**

![safari](https://user-images.githubusercontent.com/1303365/76840014-d1774a00-6836-11ea-9952-2c0b808216ba.gif)

**Firefox**

![firefox](https://user-images.githubusercontent.com/1303365/76840064-ddfba280-6836-11ea-8e9d-5cab4166720e.gif)

## 📃 Other details

It seems that in Chrome and Edge it works slightly better than in the other browsers.

--
If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",0,9
ckeditor,ckeditor5,Merge CKEditor 5 subrepositories to the main repository,"## Provide a description of the task

All the `ckeditor5-xyz` core repositories should be merged into the `ckeditor/ckeditor5` repository.

It would be great if we were able to somehow keep the history, so at least blame is useful - but that's not a must-have.

### Todos before the merge

*   [x] Ensure there are no severe performance drawbacks, when working with the repository.
*   [ ] Recreate the `monorepo` branch with the latest changes in all packages.
    *   [x] Prepare a reproducible script to create such `monorepo` branch.

## 📃 Other details

This is a subtask of #6466.",mlewand,['mlewand'],"[{'body': 'After merging packages to the main repository, we need to clean up `package.json` in each package. Move the `lint` task from each package to the main repository. Be sure that URLs are correct.', 'author': 'pomek'}, {'body': ""Added the [`monorepo-mock`](https://github.com/ckeditor/ckeditor5/tree/monorepo-mock) branch, that has the file layout that we should be looking for, we can use it for further testing.\r\n\r\nHowever it's just a mock, made by adding carelessly adding files from all our CKE5 subpackages."", 'author': 'mlewand'}, {'body': ""I have successfully integrated all our subpackages, while preserving `ckediotr/ckeditor5` hashes and porting packages commits into it.\r\n\r\n## `monorepo` branch creation\r\n\r\nThe execution of the script might be time-consuming, so be aware of that.\r\n\r\nIt is much easier to work on it by creating an empty repository.\r\n\r\nTo do that we'll reuse the [`mlewand/monorepo-tools#ckeditor5-migration`](https://github.com/mlewand/monorepo-tools/tree/ckeditor5-migration) script, a fork of `shopsys/monorepo-tools` (as it needs [few adjustments](https://github.com/mlewand/monorepo-tools/commit/ebc9e80d8e174c954eb6a3a1a953693e5d288dc6)).\r\n\r\n1.  Create `ckeditor5-migration` directory anywhere you'd like.\r\n\r\n\t```\r\n\tmkdir ckeditor5-migration && cd ckeditor5-migration && git init\r\n\t```\r\n\r\n1. Hook up the `ckeditor/ckeditor5` repository and merge its master branch\r\n\t```\r\n\tgit remote add main-repository https://github.com/ckeditor/ckeditor5.git\r\n\tgit fetch main-repository\r\n\tgit merge main-repository/master\r\n\tgit checkout -b monorepo\r\n\t```\r\n\r\n1. Set remotes for all the subpackages to be imported:\r\n\r\n\t```\r\n\tgit remote add package-ckeditor-cloud-services-core git@github.com:ckeditor/ckeditor-cloud-services-core.git\r\n\tgit remote add package-ckeditor5-adapter-ckfinder git@github.com:ckeditor/ckeditor5-adapter-ckfinder.git\r\n\tgit remote add package-ckeditor5-alignment git@github.com:ckeditor/ckeditor5-alignment.git\r\n\tgit remote add package-ckeditor5-autoformat git@github.com:ckeditor/ckeditor5-autoformat.git\r\n\tgit remote add package-ckeditor5-autosave git@github.com:ckeditor/ckeditor5-autosave.git\r\n\tgit remote add package-ckeditor5-basic-styles git@github.com:ckeditor/ckeditor5-basic-styles.git\r\n\tgit remote add package-ckeditor5-block-quote git@github.com:ckeditor/ckeditor5-block-quote.git\r\n\tgit remote add package-ckeditor5-build-balloon git@github.com:ckeditor/ckeditor5-build-balloon.git\r\n\tgit remote add package-ckeditor5-build-balloon-block git@github.com:ckeditor/ckeditor5-build-balloon-block.git\r\n\tgit remote add package-ckeditor5-build-classic git@github.com:ckeditor/ckeditor5-build-classic.git\r\n\tgit remote add package-ckeditor5-build-decoupled-document git@github.com:ckeditor/ckeditor5-build-decoupled-document.git\r\n\tgit remote add package-ckeditor5-build-inline git@github.com:ckeditor/ckeditor5-build-inline.git\r\n\tgit remote add package-ckeditor5-ckfinder git@github.com:ckeditor/ckeditor5-ckfinder.git\r\n\tgit remote add package-ckeditor5-clipboard git@github.com:ckeditor/ckeditor5-clipboard.git\r\n\tgit remote add package-ckeditor5-cloud-services git@github.com:ckeditor/ckeditor5-cloud-services.git\r\n\tgit remote add package-ckeditor5-code-block git@github.com:ckeditor/ckeditor5-code-block.git\r\n\tgit remote add package-ckeditor5-core git@github.com:ckeditor/ckeditor5-core.git\r\n\tgit remote add package-ckeditor5-easy-image git@github.com:ckeditor/ckeditor5-easy-image.git\r\n\tgit remote add package-ckeditor5-editor-balloon git@github.com:ckeditor/ckeditor5-editor-balloon.git\r\n\tgit remote add package-ckeditor5-editor-classic git@github.com:ckeditor/ckeditor5-editor-classic.git\r\n\tgit remote add package-ckeditor5-editor-decoupled git@github.com:ckeditor/ckeditor5-editor-decoupled.git\r\n\tgit remote add package-ckeditor5-editor-inline git@github.com:ckeditor/ckeditor5-editor-inline.git\r\n\tgit remote add package-ckeditor5-engine git@github.com:ckeditor/ckeditor5-engine.git\r\n\tgit remote add package-ckeditor5-enter git@github.com:ckeditor/ckeditor5-enter.git\r\n\tgit remote add package-ckeditor5-essentials git@github.com:ckeditor/ckeditor5-essentials.git\r\n\tgit remote add package-ckeditor5-font git@github.com:ckeditor/ckeditor5-font.git\r\n\tgit remote add package-ckeditor5-heading git@github.com:ckeditor/ckeditor5-heading.git\r\n\tgit remote add package-ckeditor5-highlight git@github.com:ckeditor/ckeditor5-highlight.git\r\n\tgit remote add package-ckeditor5-horizontal-line git@github.com:ckeditor/ckeditor5-horizontal-line.git\r\n\tgit remote add package-ckeditor5-image git@github.com:ckeditor/ckeditor5-image.git\r\n\tgit remote add package-ckeditor5-indent git@github.com:ckeditor/ckeditor5-indent.git\r\n\tgit remote add package-ckeditor5-link git@github.com:ckeditor/ckeditor5-link.git\r\n\tgit remote add package-ckeditor5-list git@github.com:ckeditor/ckeditor5-list.git\r\n\tgit remote add package-ckeditor5-markdown-gfm git@github.com:ckeditor/ckeditor5-markdown-gfm.git\r\n\tgit remote add package-ckeditor5-media-embed git@github.com:ckeditor/ckeditor5-media-embed.git\r\n\tgit remote add package-ckeditor5-mention git@github.com:ckeditor/ckeditor5-mention.git\r\n\tgit remote add package-ckeditor5-page-break git@github.com:ckeditor/ckeditor5-page-break.git\r\n\tgit remote add package-ckeditor5-paragraph git@github.com:ckeditor/ckeditor5-paragraph.git\r\n\tgit remote add package-ckeditor5-paste-from-office git@github.com:ckeditor/ckeditor5-paste-from-office.git\r\n\tgit remote add package-ckeditor5-remove-format git@github.com:ckeditor/ckeditor5-remove-format.git\r\n\tgit remote add package-ckeditor5-restricted-editing git@github.com:ckeditor/ckeditor5-restricted-editing.git\r\n\tgit remote add package-ckeditor5-select-all git@github.com:ckeditor/ckeditor5-select-all.git\r\n\tgit remote add package-ckeditor5-special-characters git@github.com:ckeditor/ckeditor5-special-characters.git\r\n\tgit remote add package-ckeditor5-table git@github.com:ckeditor/ckeditor5-table.git\r\n\tgit remote add package-ckeditor5-theme-lark git@github.com:ckeditor/ckeditor5-theme-lark.git\r\n\tgit remote add package-ckeditor5-typing git@github.com:ckeditor/ckeditor5-typing.git\r\n\tgit remote add package-ckeditor5-ui git@github.com:ckeditor/ckeditor5-ui.git\r\n\tgit remote add package-ckeditor5-undo git@github.com:ckeditor/ckeditor5-undo.git\r\n\tgit remote add package-ckeditor5-upload git@github.com:ckeditor/ckeditor5-upload.git\r\n\tgit remote add package-ckeditor5-utils git@github.com:ckeditor/ckeditor5-utils.git\r\n\tgit remote add package-ckeditor5-watchdog git@github.com:ckeditor/ckeditor5-watchdog.git\r\n\tgit remote add package-ckeditor5-widget git@github.com:ckeditor/ckeditor5-widget.git\r\n\tgit remote add package-ckeditor5-word-count git@github.com:ckeditor/ckeditor5-word-count.git\r\n\r\n\t```\r\n\r\n1. `git fetch --all --no-tags`\r\n\r\n1. Clone the forked `monorepo-tools`.\r\n\r\n\t```\r\n\tgit clone https://github.com/mlewand/monorepo-tools.git ~/monorepo-tools -b ckeditor5-migration\r\n\t```\r\n\t\r\n1. Execute monorepo build command (will take some time to process):\r\n\r\n\t```\r\n\t~/monorepo-tools/monorepo_build.sh main-repository package-ckeditor-cloud-services-core:packages/ckeditor-cloud-services-core package-ckeditor5-adapter-ckfinder:packages/ckeditor5-adapter-ckfinder package-ckeditor5-alignment:packages/ckeditor5-alignment package-ckeditor5-autoformat:packages/ckeditor5-autoformat package-ckeditor5-autosave:packages/ckeditor5-autosave package-ckeditor5-basic-styles:packages/ckeditor5-basic-styles package-ckeditor5-block-quote:packages/ckeditor5-block-quote package-ckeditor5-build-balloon:packages/ckeditor5-build-balloon package-ckeditor5-build-balloon-block:packages/ckeditor5-build-balloon-block package-ckeditor5-build-classic:packages/ckeditor5-build-classic package-ckeditor5-build-decoupled-document:packages/ckeditor5-build-decoupled-document package-ckeditor5-build-inline:packages/ckeditor5-build-inline package-ckeditor5-ckfinder:packages/ckeditor5-ckfinder package-ckeditor5-clipboard:packages/ckeditor5-clipboard package-ckeditor5-cloud-services:packages/ckeditor5-cloud-services package-ckeditor5-code-block:packages/ckeditor5-code-block package-ckeditor5-core:packages/ckeditor5-core package-ckeditor5-easy-image:packages/ckeditor5-easy-image package-ckeditor5-editor-balloon:packages/ckeditor5-editor-balloon package-ckeditor5-editor-classic:packages/ckeditor5-editor-classic package-ckeditor5-editor-decoupled:packages/ckeditor5-editor-decoupled package-ckeditor5-editor-inline:packages/ckeditor5-editor-inline package-ckeditor5-engine:packages/ckeditor5-engine package-ckeditor5-enter:packages/ckeditor5-enter package-ckeditor5-essentials:packages/ckeditor5-essentials package-ckeditor5-font:packages/ckeditor5-font package-ckeditor5-heading:packages/ckeditor5-heading package-ckeditor5-highlight:packages/ckeditor5-highlight package-ckeditor5-horizontal-line:packages/ckeditor5-horizontal-line package-ckeditor5-image:packages/ckeditor5-image package-ckeditor5-indent:packages/ckeditor5-indent package-ckeditor5-link:packages/ckeditor5-link package-ckeditor5-list:packages/ckeditor5-list package-ckeditor5-markdown-gfm:packages/ckeditor5-markdown-gfm package-ckeditor5-media-embed:packages/ckeditor5-media-embed package-ckeditor5-mention:packages/ckeditor5-mention package-ckeditor5-page-break:packages/ckeditor5-page-break package-ckeditor5-paragraph:packages/ckeditor5-paragraph package-ckeditor5-paste-from-office:packages/ckeditor5-paste-from-office package-ckeditor5-remove-format:packages/ckeditor5-remove-format package-ckeditor5-restricted-editing:packages/ckeditor5-restricted-editing package-ckeditor5-select-all:packages/ckeditor5-select-all package-ckeditor5-special-characters:packages/ckeditor5-special-characters package-ckeditor5-table:packages/ckeditor5-table package-ckeditor5-theme-lark:packages/ckeditor5-theme-lark package-ckeditor5-typing:packages/ckeditor5-typing package-ckeditor5-ui:packages/ckeditor5-ui package-ckeditor5-undo:packages/ckeditor5-undo package-ckeditor5-upload:packages/ckeditor5-upload package-ckeditor5-utils:packages/ckeditor5-utils package-ckeditor5-watchdog:packages/ckeditor5-watchdog package-ckeditor5-widget:packages/ckeditor5-widget package-ckeditor5-word-count:packages/ckeditor5-word-count\r\n\t```\r\n\r\nInspect the logs to see that history is preserved. Ensure that latest `ckeditor/ckeditor5` commit is included in your `monorepo` branch (so that there's no need for force-push or any shenanigans like that).\r\n\r\nThis is it, your local `monorepo` branch contains all the packages merged."", 'author': 'mlewand'}, {'body': '> Set remotes for all the subpackages to be imported:\r\n\r\nJust to be sure it will execute correctly. Use a bash script for that.', 'author': 'pomek'}, {'body': 'All the instructions are ready. What remains is to execute it as a part of #6534.', 'author': 'mlewand'}]",['type:task'],CLOSED,6476,[],"Merge CKEditor 5 subrepositories to the main repository ## Provide a description of the task

All the `ckeditor5-xyz` core repositories should be merged into the `ckeditor/ckeditor5` repository.

It would be great if we were able to somehow keep the history, so at least blame is useful - but that's not a must-have.

### Todos before the merge

*   [x] Ensure there are no severe performance drawbacks, when working with the repository.
*   [ ] Recreate the `monorepo` branch with the latest changes in all packages.
    *   [x] Prepare a reproducible script to create such `monorepo` branch.

## 📃 Other details

This is a subtask of #6466.",7,10
ckeditor,ckeditor5,Adjust the CI to work with monorepo,"## Provide a description of the task

CI customization will need to be adapted to work with the monorepo.

Couple of questions already:

*   we need to adjust current continuous integration flow
    *   what tests should be run when a PR is submitted / branch pushed? affected packages or entire monorepo test suite?
    *   what test should be run once branch is merged to master? affected packages or entire monorepo test suite?
    *   should there be cron runs?

## 📃 Other details

This is a subtask of [#6466](https://github.com/ckeditor/ckeditor5/issues/6466).",mlewand,['mlewand'],"[{'body': ""I'd also consider moving to a different CI service as Travis definitely isn't ideal. I have no experience here, but I hear about CircleCI and GH workflows.\r\n\r\nSome links:\r\n\r\n*   https://github.com/marketplace/category/continuous-integration\r\n*   https://help.github.com/en/actions/building-and-testing-code-with-continuous-integration/setting-up-continuous-integration-using-github-actions"", 'author': 'Reinmar'}, {'body': ""CircleCI's free tier has 1000 minutes monthly: https://github.com/marketplace/circleci. However, I'm sure that we can consider paid options if need be (AFAICS, we'd need the startup plan which isn't that pricy). Especially that not all the code that we have is open sourced anyway.\r\n\r\nYou can ping @czerwonkabartosz with some questions."", 'author': 'Reinmar'}, {'body': 'Feel free to ask questions about CircleCI. I will try to answer somehow or @morganfree will answer because he already knows the CircleCI better than me (knows the CircleCI API and documentation by heart) ;)', 'author': 'czerwonkabartosz'}, {'body': 'My proposals about CI flow:\r\n\r\n> what tests should be run when a PR is submitted / branch pushed? affected packages or entire monorepo test suite?\r\n\r\nFor PR build – check the coverage of changed packages, execute tests in changed packages, build docs.\r\n\r\nFor non-master commits: – execute tests in changed packages. At some point, you will create a PR which triggers ""PR build"" that checks more.\r\n\r\n> what test should be run once branch is merged to master? affected packages or entire monorepo test suite?\r\n\r\nMaster commits (push or merge) – all tests with code coverage. Also, docs should be checked.\r\n\r\n> should there be cron runs?\r\n\r\nWe\'re using Cron for publishing nightly docs. So I guess we want to stay with it.\r\n\r\n---\r\n\r\nExcept for the above, we need to remember:\r\n\r\n- a validator for checking paths (relatives inside a package, ""packages imports"" across packages)\r\n- do we need `yarn run docs:api --validate-only` if we\'re going to build full documentation?\r\n- anything else?\r\n\r\n--- \r\n\r\nIssues:\r\n\r\nCode coverage. Since we had problems with memory when running code coverage for the entire repository, we decided to check the cc of a single package in its repository. Now we\'re going to have monorepo and we need to find a way how to generate CC.\r\n\r\nShould we take a risk and generate cc for few packages at the same time (`yarn run test -f core,engine,... -c`)? At some point, it will crash.\r\n\r\nOr call n-times the same command with different values:\r\n\r\n```bash\r\nyarn run test -f core -c\r\nyarn run test -f engine -c\r\nyarn run test -f ... -c\r\n```\r\nUnfortunately, I will take some time.\r\n\r\nAnother problem is our ""cc-service"" that does not handle monorepo. Coveralls requires a repository on GH in order to start collecting CC.\r\n\r\nMaybe Codecov could resolve our problem but [after looking on docs](https://docs.codecov.io/docs/flags), it\'s a little weird we need to put 50x packages in the config file. OTOH, I didn\'t go too deep in this topic. Maybe I\'m wrong.', 'author': 'pomek'}, {'body': ""@pomek your proposal looks good to me :+1: although I'd make the cases as similar as possible so _non-master builds_ imho should also run check coverage of changed packages, rather than tests alone.\r\n\r\nAs for the issues part, we have verified there is no longer an issue with memory when doing code coverage tests. Seems that our recent unit tests memory leaks or tooling upgrade might have fixed that.\r\n\r\nI see no problem in manually maintaining codecov file with our subpackages explicitly listed, as long as this is documented :D"", 'author': 'mlewand'}, {'body': 'I moved this back to it31 as a great majority of the work was done already. If you want to have a followup in it32, please report a new ticket.', 'author': 'Reinmar'}]",['type:task'],CLOSED,6477,['6466'],"Adjust the CI to work with monorepo ## Provide a description of the task

CI customization will need to be adapted to work with the monorepo.

Couple of questions already:

*   we need to adjust current continuous integration flow
    *   what tests should be run when a PR is submitted / branch pushed? affected packages or entire monorepo test suite?
    *   what test should be run once branch is merged to master? affected packages or entire monorepo test suite?
    *   should there be cron runs?

## 📃 Other details

This is a subtask of [#6466](https://github.com/ckeditor/ckeditor5/issues/6466).",29,10
ckeditor,ckeditor5,Code coverage for monorepo,"## Provide a description of the task

A tricky case might be to do per-package code coverage after going for monorepo.

## 📃 Other details

This is a subtask of [#6466](https://github.com/ckeditor/ckeditor5/issues/6466).",mlewand,['mlewand'],"[{'body': ""Tentatively estimating it at 4 points, but it's a blind shot as first we need to clarify the requirements."", 'author': 'mlewand'}, {'body': ""The most challenging fact about this task is to allow for per-package code coverage while moving to monorepo structure.\r\n\r\nI'm getting promising results using [codecov](https://codecov.io/). While working on [ckeditor5 repo sandbox copy](https://github.com/mlewand/ckeditor5) I made a branch with just a few packages modified and the [testing script correctly picked](https://travis-ci.org/github/mlewand/ckeditor5?utm_medium=notification&utm_source=email) up which packages should be tested :+1: `codecov` command was run separately for each package (or flag using codecov nomenclature).\r\n\r\nNow, there are still couple of things to do:\r\n\r\n*   ensure that codecov provides some sort of message in pull requests, ensuring that the code coverage remains as high as it should\r\n*   determine a proper _reference branch_ - currently it always uses `master` branch as a reference to determine which packages should be changed. But sometimes it will be a `stable` branch for documentation changes.\r\n*   adjust the `scripts/codecov-run-tests.sh` script so that it can be run for the `master` branch only (currently it was intended only to be run for branched builds)"", 'author': 'mlewand'}, {'body': ""I noticed a problem on `master` where sometimes not all tests are executed, thus there's no full code coverage.\r\n\r\nRestarting travis build would eventually lead to full test run, and full code coverage. So clearly there's some integration problem.\r\n\r\nThe symptoms were that only part of tests were executed:\r\n\r\n```plaintext\r\nExecuted 6652 of 13583 (skipped 15) SUCCESS (1 min 15.828 secs / 29.534 secs)\r\n```\r\n\r\nAnd there were several logs:\r\n\r\n```plaintext\r\nDetected `console.warn():', 'Selection change observer detected an infinite rendering loop\r\n```\r\n\r\nAnd I think this one bit is a key to the problem."", 'author': 'mlewand'}, {'body': ""Today we decided to change a little our goals for CI.\r\n\r\nThe main goal remains to be able to tell the CC per package, but it's no longer a must-have for us to keep these results separate on codecov (a short backstory is that we wanted to pass per-package coverage using _flags_ mechanism in codecov, but once there are 50+ flags it didn't reliably put [nice bot messages](https://github.com/mlewand/ckeditor5/pull/5#issuecomment-607215430) to GH PRs).\r\n\r\nInstead the per-package-coverage will be performed on Travis alone. And if any of the packages shows a lower code coverage then it should place a fail status in related PR.\r\n\r\nTravis will execute test for _each_ package separately (so a dedicated `yarn run test -f <package> -c`). After that code coverage data from each run should be combined into one big coverage data file, which will be sent to codecov for a nice GUI.\r\n\r\nI already checked that combining json output works fine so we should be good here."", 'author': 'mlewand'}, {'body': 'Ok, I created a script that does per-package testing and combines the results once all are done and uploads _combined_ results to codecov.\r\n\r\nThe solution is ready for review in #6605\r\n\r\n## Failing tests\r\n\r\nEach CKE5 package is tested separately.\r\n\r\nFailing package suite doesn\'t stop others from running. It was important goal for me to make sure that all package suites are run - so that you get a full picture of what\'s wrong.\r\n\r\nYou can see an [example build where some autoformat test cases are failing](https://travis-ci.org/github/mlewand/ckeditor5/builds/675205569#L252-L258) (also some packages are missing coverage).\r\n\r\nFor readabilty passing suites do not print the output.\r\n\r\n## Incomplete package coverage\r\n\r\nHere\'s [an example test run where table and `cloud-services-core` packages doesn\'t meet 100% CC](https://travis-ci.org/github/mlewand/ckeditor5/builds/674886802).\r\n\r\nIt concludes it with a message ""Following packages did not provide required code coverage: table cloud-services-core"" at the end and marks the CI build as failed.\r\n\r\nNote that the combined result uploaded to codecov show (almost because master branch that we used had incomplete tests for `table`) full coverage - because results uploaded to codecov are _combined_ - missing parts were tested by other packages.\r\n\r\n## Timing\r\n\r\nIt takes ~13 minutes to finish the testing.\r\n\r\n## Codecov flags\r\n\r\nAs of today it doesn\'t make sense to use codecov\'s flags - it doesn\'t bring any value.\r\n\r\nEven the [docummentation](https://docs.codecov.io/docs/flags) says:\r\n\r\n> ### **Flags feature on the Codecov Compare page**\r\n> \r\n> As of June 2019, Codecov has suspended flags for Codecov.io users on the Codecov Compare page.', 'author': 'mlewand'}, {'body': 'I moved this back to it31 as a great majority of the work was done already. If you want to have a followup in it32, please report a new ticket.', 'author': 'Reinmar'}]",['type:task'],CLOSED,6478,['6466'],"Code coverage for monorepo ## Provide a description of the task

A tricky case might be to do per-package code coverage after going for monorepo.

## 📃 Other details

This is a subtask of [#6466](https://github.com/ckeditor/ckeditor5/issues/6466).",6,10
ckeditor,ckeditor5,Adjust docs for monorepo,"## Provide a description of the task

*   [x] scripts for building the docs (p3) - @pomek verified that both `yarn run docs` and integration build script for the entire CKEditor ecosystem will work out-of-the-box with no further changes required.
*   [x] [dev articles in the docs (p4)](https://github.com/ckeditor/ckeditor5/issues/6523)
*   [x] markdown files in subpackages, like main `README.md` or `api/docs/*.md` like [here](https://github.com/mlewand/ckeditor5-monorepo-test/blob/880aaabffa8a5f5affe85553b27ab01f6140530d/packages/ckeditor5-link/docs/api/link.md#L23-L30) (lines 23-30)

## 📃 Other details

This is a subtask of [#6466](https://github.com/ckeditor/ckeditor5/issues/6466).",mlewand,['mlewand'],"[{'body': ""> scripts for building the docs\r\n\r\nIn CKEditor 5 repository works without any changes.\r\n\r\nI needed to upgrade our documentation builder because now it does not need to bootstrap anything. Just a clone monorepo and link dependencies. And it's working."", 'author': 'pomek'}, {'body': 'All right our public docs are done, except #6770 which has been extracted.', 'author': 'mlewand'}]","['type:task', 'squad:devops']",CLOSED,6479,"['6523', '6466']","Adjust docs for monorepo ## Provide a description of the task

*   [x] scripts for building the docs (p3) - @pomek verified that both `yarn run docs` and integration build script for the entire CKEditor ecosystem will work out-of-the-box with no further changes required.
*   [x] [dev articles in the docs (p4)](https://github.com/ckeditor/ckeditor5/issues/6523)
*   [x] markdown files in subpackages, like main `README.md` or `api/docs/*.md` like [here](https://github.com/mlewand/ckeditor5-monorepo-test/blob/880aaabffa8a5f5affe85553b27ab01f6140530d/packages/ckeditor5-link/docs/api/link.md#L23-L30) (lines 23-30)

## 📃 Other details

This is a subtask of [#6466](https://github.com/ckeditor/ckeditor5/issues/6466).",14,12
ckeditor,ckeditor5,Online builder with monorepo,"## Provide a description of the task

We need to make sure that it handles monorepo structure once we're done.

## 📃 Other details

This is a subtask of [#6466](https://github.com/ckeditor/ckeditor5/issues/6466).",mlewand,[],"[{'body': ""We already had 2 monorepo releases, and there were no issue reported so it's safe to assume that everything works fine."", 'author': 'mlewand'}]","['type:task', 'squad:devops', 'squad:collaboration']",CLOSED,6480,['6466'],"Online builder with monorepo ## Provide a description of the task

We need to make sure that it handles monorepo structure once we're done.

## 📃 Other details

This is a subtask of [#6466](https://github.com/ckeditor/ckeditor5/issues/6466).",6,10
ckeditor,ckeditor5,"Add ""select entire column"" and ""select entire row"" options in the row/col dropdowns","## 📝 Provide a description of the new feature

Before we'll have #6276 let's have simple items in the row and col dropdowns to achieve the same result.

Steps required to achieve above:

*   [ ] create commands for selecting column or row
    *   [ ] commands should work with collapsed selection inside table cell
    *   [ ] commands should work with multi-cell selection
    *   [ ] commands should be disabled when selection is outside table or a whole table is selected
*   [ ] create UI buttons for given commands
*   [ ] tests
*   [ ] API docs (in code), feature docs (what [commands are available](https://ckeditor.com/docs/ckeditor5/latest/features/table.html#editor-commands))

Tricky parts (needs tests): spanned cells. I'd go with simplest solution and emulate with a command behaviour of what would user do with mouse. So no ""smart"" selections that would select more then selected table cell's parent row:

![](https://user-images.githubusercontent.com/247363/78029817-7890d100-7361-11ea-8d03-ec3a0a22a201.png)

would select:

![](https://user-images.githubusercontent.com/247363/78029909-99f1bd00-7361-11ea-8e24-5ac82e28aff1.png)

This task might be split to two task (for each command) this way we can review earlier and probably those commands will not share code (will share with other commands).

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.",Reinmar,['niegowski'],[],"['type:feature', 'package:table', 'domain:ui/ux']",CLOSED,6500,[],"Add ""select entire column"" and ""select entire row"" options in the row/col dropdowns ## 📝 Provide a description of the new feature

Before we'll have #6276 let's have simple items in the row and col dropdowns to achieve the same result.

Steps required to achieve above:

*   [ ] create commands for selecting column or row
    *   [ ] commands should work with collapsed selection inside table cell
    *   [ ] commands should work with multi-cell selection
    *   [ ] commands should be disabled when selection is outside table or a whole table is selected
*   [ ] create UI buttons for given commands
*   [ ] tests
*   [ ] API docs (in code), feature docs (what [commands are available](https://ckeditor.com/docs/ckeditor5/latest/features/table.html#editor-commands))

Tricky parts (needs tests): spanned cells. I'd go with simplest solution and emulate with a command behaviour of what would user do with mouse. So no ""smart"" selections that would select more then selected table cell's parent row:

![](https://user-images.githubusercontent.com/247363/78029817-7890d100-7361-11ea-8d03-ec3a0a22a201.png)

would select:

![](https://user-images.githubusercontent.com/247363/78029909-99f1bd00-7361-11ea-8e24-5ac82e28aff1.png)

This task might be split to two task (for each command) this way we can review earlier and probably those commands will not share code (will share with other commands).

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.",8,8
ckeditor,ckeditor5,Problems with the <table> abstraction in the model,"### Issue description (from #6630)

Atomic converters works in on operation at a time basis. In order to work out some of the above constrains they calculate operations based on the **model** state. This fails if more than two operations happens on a table.

Consider changing header rows from `2` to `1`. The downcast converter:

1.  Takes second **model** row `H2` (because it is at index which is after a heading section) finds its view element and move it to `<tbody>` section.
2.  Taking **model** state calculates which view cells requires renaming to `th`.

Now consider removing multiple rows (`H2` and `B1`). The `RemoveRow` command will:

1.  Remove `H2` row.
2.  Change heading rows to `1`.
3.  Set selection in `B2`.

Now this will fail because heading rows converter sees the same attribute change and will assume that table is valid. But what this converter will do is:

1.  Take the second **model** row (which is now `B2` ) and move it's view to `<tbody>`.

After table's attributes change conversion the remove row converter will step in. Removing elements from model is done on **positions** (offset in parent). So it will:

1.  For a removed row at given position it will get model parent (`table`).
2.  Get view row at an expected offset (let it be `2`).
3.  As the view has been modified (wrongly) it will find row `B2` to be removed instead of `H2`.
4.  :boom: The model to view mapping is broken as view for `B2` was removed instead of `H2`.

So the spotted problems are:

1.  Using model in downcast conversion can cause problems. The fix for changing header rows looks quite simple (I've almost got it working in ckeditor/ckeditor5-table#301).
2.  Table model and its conversion is hard to operate and figure out side effects. Downcast converters are too simplistic and relays on model state / single change.
3.  It may encourage developers to use `enqueueChange()` - I don't see other option for the problem described here. The thing with `enqueueChange()` is that run conversion on each step so it acts like step-by-step conversion but it looks like more work is done than necessary.
4.  I don't like the `headingRows` conversion. One idea is to have `<tableRow isHeading=""true"">` - this will require some other checks (no `isHeading` gaps have to be checked) than now but conversion ""should"" be simple for this case. And I don't see how we can make similar change with columns.
5.  I didn't check the columns heading conversion and its problems...

---

### Original issue description

It is rather a general list of spotted problems with current table abstraction which might be unsolvable or would require much work.

1.  No table sections in the model (`<tbody>`, `<thead>`)

WIP - the list should be updated with other issues.

---

Ad. 1 - No table sections in the model

After introducing table selection operations on table started to be more complex than anticipated when creating table conversion. The problem is that we do not have `header` or `body` in the model to make model simpler while HTML `<table>` has them and those sections have some constrains. One of them is that a table cell cannot be spanned with cells from body section. This leads to various calculation when changing ""simple"" attribute of a table: `headingRows`. This worked surprisingly well with simpler operations (ie remove 1 row, change headings count) or was a bug al along which didn't surfaced.

The problem with remove row command (#6391) is that it removes multiple rows and changes `headingRows` in one action. The `headingRows` attribute downcast works on moving rows around and it worked with one row being removed. It fails beautifully when more than one row is removed. This is because by default the `table` attributes are converted before removing rows. Thus this operates on different set of data than and should be re-written completely to anticipate this.

The easy fix for this was to make `headingRows` being downcasted _after_ table rows removal with `model.enqueueChange`. The other way of dealing with this could be always re-creating `body` and `head` sections and moving rows to them _but_ it will probably fail in most scenarios with removing rows and changing heading rows count (ie algorithm could move to head rows being removed and thus creating invalid view state).

The above leads to a my conclusion that not having 1:1 view to model projection requires from us handling some stuff carefully. IE `headingRows` operations in the **model** must be done always after modifying table structure **because conversion** must operate on target table state (number of rows) and we do not have **coversion** API to _delay_ some operations rather then using `model.enqueueChange()` . This is a bit unfortunate as it tangles model and the view in an _implicit_ (not obvious) way.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",jodator,[],"[{'body': 'I always wanted to make the conversion base on as simple mechanism as possible. The complexity should be kept under the hood and should not leak to converters.\r\n\r\nFor non 1:1 mappings, the only reasonable solution I can see is doing a ""reconversion"" whenever we cannot handle a model change with an easy 1:1 converter.\r\n\r\nFor instance, in case of tables, a table style can be converted with attrribute-to-attribute mapping. However, table heading rows count cannot. It should re-trigger conversion of the entire table.\r\n\r\nUnfortunately, the conversion system went the other way around and we have a lot of abstraction leaking to converters making them incomprehensible. IMO, this must change because there\'s simply no other way around.\r\n\r\nThe issue that you fixed with change+enqueueChange is fixed in the command. But what about collaboration or undo? What about integration code and other features? There\'s a great chance that one of these change sources will try to modify the table too much at once.', 'author': 'Reinmar'}, {'body': ""My thoughts on this matter:\r\n\r\n@jodator:\r\n\r\n1.  On complex conversion. You will never get rid of the complexity fully. Maybe you will lower it, but a lot of it will be just moved elsewhere.\r\n2.  On quick fix and using `enqueueChange`. No, this is incorrect use of `enqueueChange`. This method exists so that you are able to add a change to other batch than the current one (putting non-consecutive changes in one undo step) or to create different kind of batch (mostly `transparent`, to get around undo). It wasn't created to get around timing restrictions or to hack stuff. You'd be hacking stuff with a ticking bomb. I've already either just complained privately or created an issue that having `enqueueChange` somewhere in remove row command was messing up with track changes. Such hack introduced unpredictability. `enqueueChange` should be avoided. Especially, if there is a high possibility that it will be used in another change/enqueue change block. Command might be called by another script and then your `enqueueChange` messes up with it.\r\n3.  Instead, why not simply calling remove row command n times, when n rows are selected? You'll get n undo steps, that isn't desirable, but this is a simple change that won't impact other places of code. This will get around your `headingRows` problem untill we will propose a clean solution.\r\n4.  Is this a problem just with `headingRows` or cols are a problem too? I guess just rows, because of `<thead>`? How about introducing `isHeader` attribute for `<tableRow>`?\r\n\r\n@Reinmar\xa0\r\n\r\n1.  I have mixed feelings about recreation. I am always afraid of messing up with parts of code that might depend on the view. Moving stuff around is fine but creating new instances of view elements is worse. Mappings mostly, maybe some UI states depending on view. Glitches like flickering may occur. You might lose changes which where done directly on the view (I remember a lot of problems with `<span>`/`<p>` conversion in table cell). The recreation process would have to be called on model-level, I think, so that differ would actually have an information about removing and adding everything, to be sure that mappings are correct, etc. This will also reinforce our stance on not doing any change on the view outside of the conversion process.\r\n2.  However, I am sure if I agree with saying that conversion should be simple. I think that model should be simple, that post-fixers should be simple, that OT should be simple. This guarantees stability of our feature's base and separates problems.\r\n\r\nSince we are talking about a bigger refactor, maybe we could think about totally different representation of a table? I've always thought that there must be a better way to do it. I've seen some discussions on Twitter in this area, too. I feel there's general agreement that there's something wrong with how tables are represented in HTML. Maybe instead of going more into HTML, let's get really outside of it? I wonder how spreadsheet applications represent their tables.\r\n\r\nI wanted to write that:\r\n\r\nBut, in general, I think that we should simply delete most of the code we have and re-think how conversion works, how commands work, how post-fixers work. Start again with a better understanding of the feature and of how it fits our architecture. After all, I don't think that current model is really bad.\r\n\r\nBut after another thought I change my mind:\r\n\r\nOf course, I don't have a full understanding of issues in tables. If you think that having 1:1 representation will solve some problems, then that's fine, let's go this way. We will move complexity into commands and post-fixers. If I wanted to propose removing a lot of code, we can remove the idea for the model as well."", 'author': 'scofalik'}, {'body': ""I'm afraid we need to discuss this f2f :D"", 'author': 'Reinmar'}, {'body': '> 3. Instead, why not simply calling remove row command n times, when n rows are selected?\r\n\r\nDunno why we went in this direction (I wasn\'t here ;P). It looks like a single undo step requirement - but this can be ""fixed"". I was thinking about the same - especially that we already have a pattern for passing a batch to commands. The only other thing is that it might be desired to have a command that works on multi-cell selection.\r\n\r\n> 4. Is this a problem just with `headingRows` or cols are a problem too? I guess just rows, because of `<thead>`? How about introducing `isHeader` attribute for `<tableRow>`?\r\n\r\nThis is a problem with moving stuff around (`<tr>` to `<thead>`/`<tbody>`) and doing it _before_ changing table structure in the downcast conversion.\r\nThe `isHeader` might be a way to do it - dunno what other problems might occur here (single attribute change vs multiple flags on different elements).\r\n\r\n> Maybe instead of going more into HTML, let\'s get really outside of it? I wonder how spreadsheet applications represent their tables.\r\n\r\nI think that the problem here is that HTML `<table>` have `<thead>` and `<tbody>` sections and we should support them (ps. there\'s `<tfoot>` also :D ). It might be a case that a spreadsheet doesn\'t need to have a heading as it is defined in HTML.', 'author': 'jodator'}, {'body': 'I\'ve updated the issue description with similar analysis from #6630. The conversation above was related to the ""original issue description"" (also in the first post).', 'author': 'jodator'}, {'body': 'Another problems listed there https://github.com/ckeditor/ckeditor5/issues/6630#issuecomment-654813230 (dunno I keep posting there).', 'author': 'jodator'}, {'body': 'OK I had this thought that is either brilliant or completely dumb, but why we made _editing_ so complex? The desired _data_ must have `<thead>` and `<tbody>` sections, that\'s for sure. But WDYT about making _editing_ as straightforward as possible?\r\n\r\nWhat if we\'d ditch `<thead>` and `<tbody>` from the _editing_ view? We could bring back some atomic converters (for the [performance](https://github.com/ckeditor/ckeditor5/issues/7729#issuecomment-669896450) reasons) while _possibly_ removing the complexity of the `headingRows` manipulations?\r\n\r\nBesides:\r\n\r\n1.  it would be nice to have the same thing in _editing_ as in _data_ views\r\n2.  CSS styling issues because of no `<thead>` and `<tbody>`\r\n\r\nI don\'t see any real need for `<thead>` and `<tbody>` there, so the editing view might be just as well:\r\n\r\n```html\r\n<figure>\r\n    <div>...</div> <!-- UI -->\r\n    <table>\r\n        <tr class=""heading-row"">\r\n            <th><p>Heding row cell</p></th>\r\n            <th><p>Heding row cell</p></th>\r\n        </tr>\r\n        <tr>\r\n            <th><p>Heading column cell</p></th>\r\n            <td><p>Data cell</p>\r\n        </tr>\r\n    </table>\r\n</figure>\r\n```\r\n\r\nPros:\r\n\r\n*   Simpler view structure - no need to handle moving `<tr>` between sections or no need to re-convert the whole `<table>`\r\n\r\nCons:\r\n\r\n*   Might not fix the problem with multiple changes and re-rendering whole `<table>` might be still needed.\r\n*   ...', 'author': 'jodator'}, {'body': ""I'd say this is a good last resort solution :D If we won't be able to handle this better on our side, then we can change the structure. However, it comes with its problems – the styles written for the content outside and inside the editor will need to differ. And there may be some a11y issues due to not using a full table structure. In general, as long as we're able to keep the structures similar we should do that."", 'author': 'Reinmar'}, {'body': ""There has been no activity on this issue for the past year. We've marked it as stale and will close it in 30 days. We understand it may still be relevant, so if you're interested in the solution, leave a comment or reaction under this issue."", 'author': 'CKEditorBot'}, {'body': ""We've closed your issue due to inactivity over the last year. We understand that the issue may still be relevant. If so, feel free to open a new one (and link this issue to it)."", 'author': 'CKEditorBot'}]","['type:bug', 'package:engine', 'package:table', 'resolution:expired', 'type:refactor', 'type:debt', 'status:stale']",CLOSED,6506,[],"Problems with the <table> abstraction in the model ### Issue description (from #6630)

Atomic converters works in on operation at a time basis. In order to work out some of the above constrains they calculate operations based on the **model** state. This fails if more than two operations happens on a table.

Consider changing header rows from `2` to `1`. The downcast converter:

1.  Takes second **model** row `H2` (because it is at index which is after a heading section) finds its view element and move it to `<tbody>` section.
2.  Taking **model** state calculates which view cells requires renaming to `th`.

Now consider removing multiple rows (`H2` and `B1`). The `RemoveRow` command will:

1.  Remove `H2` row.
2.  Change heading rows to `1`.
3.  Set selection in `B2`.

Now this will fail because heading rows converter sees the same attribute change and will assume that table is valid. But what this converter will do is:

1.  Take the second **model** row (which is now `B2` ) and move it's view to `<tbody>`.

After table's attributes change conversion the remove row converter will step in. Removing elements from model is done on **positions** (offset in parent). So it will:

1.  For a removed row at given position it will get model parent (`table`).
2.  Get view row at an expected offset (let it be `2`).
3.  As the view has been modified (wrongly) it will find row `B2` to be removed instead of `H2`.
4.  :boom: The model to view mapping is broken as view for `B2` was removed instead of `H2`.

So the spotted problems are:

1.  Using model in downcast conversion can cause problems. The fix for changing header rows looks quite simple (I've almost got it working in ckeditor/ckeditor5-table#301).
2.  Table model and its conversion is hard to operate and figure out side effects. Downcast converters are too simplistic and relays on model state / single change.
3.  It may encourage developers to use `enqueueChange()` - I don't see other option for the problem described here. The thing with `enqueueChange()` is that run conversion on each step so it acts like step-by-step conversion but it looks like more work is done than necessary.
4.  I don't like the `headingRows` conversion. One idea is to have `<tableRow isHeading=""true"">` - this will require some other checks (no `isHeading` gaps have to be checked) than now but conversion ""should"" be simple for this case. And I don't see how we can make similar change with columns.
5.  I didn't check the columns heading conversion and its problems...

---

### Original issue description

It is rather a general list of spotted problems with current table abstraction which might be unsolvable or would require much work.

1.  No table sections in the model (`<tbody>`, `<thead>`)

WIP - the list should be updated with other issues.

---

Ad. 1 - No table sections in the model

After introducing table selection operations on table started to be more complex than anticipated when creating table conversion. The problem is that we do not have `header` or `body` in the model to make model simpler while HTML `<table>` has them and those sections have some constrains. One of them is that a table cell cannot be spanned with cells from body section. This leads to various calculation when changing ""simple"" attribute of a table: `headingRows`. This worked surprisingly well with simpler operations (ie remove 1 row, change headings count) or was a bug al along which didn't surfaced.

The problem with remove row command (#6391) is that it removes multiple rows and changes `headingRows` in one action. The `headingRows` attribute downcast works on moving rows around and it worked with one row being removed. It fails beautifully when more than one row is removed. This is because by default the `table` attributes are converted before removing rows. Thus this operates on different set of data than and should be re-written completely to anticipate this.

The easy fix for this was to make `headingRows` being downcasted _after_ table rows removal with `model.enqueueChange`. The other way of dealing with this could be always re-creating `body` and `head` sections and moving rows to them _but_ it will probably fail in most scenarios with removing rows and changing heading rows count (ie algorithm could move to head rows being removed and thus creating invalid view state).

The above leads to a my conclusion that not having 1:1 view to model projection requires from us handling some stuff carefully. IE `headingRows` operations in the **model** must be done always after modifying table structure **because conversion** must operate on target table state (number of rows) and we do not have **coversion** API to _delay_ some operations rather then using `model.enqueueChange()` . This is a bit unfortunate as it tangles model and the view in an _implicit_ (not obvious) way.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",23,11
ckeditor,ckeditor5,Merge cells command should not merge cells from column header with other cells,"## 📝 Provide detailed reproduction steps (if any)

Found here: https://github.com/ckeditor/ckeditor5-table/pull/290#issuecomment-607116810.

![image](https://user-images.githubusercontent.com/1099479/78116969-58b2e900-7405-11ea-97d6-74ba5c5d7a36.png)

and some weird result

![image](https://user-images.githubusercontent.com/1099479/78117037-71bb9a00-7405-11ea-8c65-c6378695e340.png)

### ✔️ Expected result

The command should be disabled like other merge cell commands.

### ❌ Actual result

You can merge cells from column header with other cells.

## 📃 Other details

*   Browser: any
*   CKEditor version: ckeditor/ckeditor5-table#290.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",jodator,['jodator'],[],"['type:bug', 'package:table']",CLOSED,6521,[],"Merge cells command should not merge cells from column header with other cells ## 📝 Provide detailed reproduction steps (if any)

Found here: https://github.com/ckeditor/ckeditor5-table/pull/290#issuecomment-607116810.

![image](https://user-images.githubusercontent.com/1099479/78116969-58b2e900-7405-11ea-97d6-74ba5c5d7a36.png)

and some weird result

![image](https://user-images.githubusercontent.com/1099479/78117037-71bb9a00-7405-11ea-8c65-c6378695e340.png)

### ✔️ Expected result

The command should be disabled like other merge cell commands.

### ❌ Actual result

You can merge cells from column header with other cells.

## 📃 Other details

*   Browser: any
*   CKEditor version: ckeditor/ckeditor5-table#290.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",0,8
ckeditor,ckeditor5,Deploy monorepo changes,"## Provide a description of the task

This will be a final step in our migration.

We can't just partially deploy the work to ckeditor5 repo (a lot of things will break). Instead we're verifying our work on a different, sandbox _clone_ of ckeditor5 repository and we're creating an instruction that should be followed during the deploy.",mlewand,['mlewand'],"[{'body': '### Steps\r\n\r\n*   [x] Consider merging `stable` to `master` in ckeditor5-\\* repos.\r\n*   [x] Merge the `monorepo-pending` branch to `master` in all packages, **except** main ckeditor5 repository.\r\n*   [x] Merge all subpackages to the main `ckeditor5` repository ([instruction](https://github.com/ckeditor/ckeditor5/issues/6476#issuecomment-604347762))\r\n*   [x] Merge the `monorepo` (created in previous step) and `monorepo-pending` branch to `master` in the main repository.\r\n*   [ ] Cleanup all the `ckeditor5-*` (subpackage) repositories\r\n    *   [x] Update readmes with information that repositories are no longer maintained and main repo should be used\r\n    *   [ ] Archive all repos\r\n*   [x] Merge `master` branch to the `stable` branch - new structure and docs should be applied to `stable` branch too\r\n    *   [ ] Rebuild & publish updated documentation\r\n*   [x] Merge `monorepo` branch in ckeditor/ckeditor5-dev repository.\r\n\r\n### Post deploy testing\r\n\r\n*   [x] Prepare a sample PR that breaks unit tests.\r\n*   [x] Prepare a sample PR that reduced the CC.\r\n*   [x] Close/remove all the test PRs made while testing.\r\n*   [x] Remove merged monorepo migration branches\r\n    *   `monorepo-pending`\r\n    *   `monorepo-post-migration`', 'author': 'mlewand'}, {'body': ""Remove lint task from `package.json`, delete `.gitignore` and other files in a directory that isn't an alone repository anymore. Review `package.json` – dev/dependencies, repository URL, bugs URL etc.\r\nI do not recommend doing it manually. A script for doing this could be helpful."", 'author': 'pomek'}, {'body': 'All right, all the necessary steps were performed. Docs deployment and repo archive will be handled later.', 'author': 'mlewand'}]",['type:task'],CLOSED,6534,[],"Deploy monorepo changes ## Provide a description of the task

This will be a final step in our migration.

We can't just partially deploy the work to ckeditor5 repo (a lot of things will break). Instead we're verifying our work on a different, sandbox _clone_ of ckeditor5 repository and we're creating an instruction that should be followed during the deploy.",7,10
ckeditor,ckeditor5,"The arrow next to the ""merge cells"" button seems to be disabled","## 📝 Provide a description of the improvement

When the button is disabled (because it's not applicable to single cell selections), the dropdown with options such as ""split"" or ""merge cell left"" should be available. It can be opened by click the arrow. However, to me, that arrow seems to be invisible. When the button is disabled, the arrow may be missed. I think that discoverability of that dropdown will be really hard.

I honestly don't know how we can improve this... Maybe the button shouldn't be off? Maybe it should have no action or display something when a single cell is selected?

![](https://user-images.githubusercontent.com/156149/79587054-3e019500-80d2-11ea-8365-4d8dc7881dd6.png)

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",Reinmar,['oleq'],"[{'body': 'cc @oleq @panr', 'author': 'Reinmar'}, {'body': ""I agree that it looks a little bit odd. Here are some options that popped into my head:\r\n\r\n1. Make the merge cells a standalone button. Then make the merge/split tools a regular drop-down (always enabled). **Problems**: \r\n   * We need two different icons for the same functionality, \r\n   * We're bloating the toolbar.\r\n2. We ignore the problem then implement the [unmerge functionality](https://github.com/ckeditor/ckeditor5/issues/6567) bound to the main button. The button will always be enabled and the vast majority of users will never need to open the drop-down in the first place. **Problems**:\r\n   * We need another feature.\r\n3. Somehow re-design of the split button to address the issue (???). **Problems**:\r\n   * This will probably result in the re-design of the rest of the components.\r\n   * That's pretty time-consuming."", 'author': 'oleq'}, {'body': ""I wonder if this could work:\r\n\r\n*   When multiple cells are selected, the button merges them.\r\n*   When only one, clicking the button opens the dropdown (button and arrow work in the same way).\r\n\r\nAt first I thought that it may be confusing. But then I realised that nothing bad will happen if you have just one cell selected – you'll simply see the dropdown panel with available options. When you have multiple cells selected, you will have a high chance of figuring out that there's a button and arrow and both are clickable. And if you click the button hoping for it to open the dropdown, you can always undo that."", 'author': 'Reinmar'}, {'body': '> *   When only one, clicking the button opens the dropdown (button and arrow work in the same way).\r\n\r\nBut you mean that the button would still have an icon of merge command? That would be misleading. How about changing the split button\'s ""face"" action in case the default one is disabled?\r\n\r\n> 1.  Make the merge cells a standalone button.\r\n\r\nAlthough this also seems to be a viable option _for now_ - we don\'t have a whole lot of buttons in the dedicated table toolbar. So seems like a cheap solution to buy time for a proper fix.\r\n\r\nAgree that currently anybody looking at it first will always think it\'s disabled. Personally never seen something like that before.', 'author': 'mlewand'}, {'body': '> * When multiple cells are selected, the button merges them.\r\n> * When only one, clicking the button opens the dropdown (button and arrow work in the same way).\r\n\r\nNot sure if this is possible with the current architecture. That could mean a brand new component for that purpose.\r\n\r\nAlso... I agree with @mlewand that if you click something that looks like a drop-down it should act like one. It should open the panel, not execute some editing action.\r\n\r\n----\r\n\r\n> But you mean that the button would still have an icon of merge command? That would be misleading. How about changing the split button\'s ""face"" action in case the default one is disabled?\r\n\r\nSo like making the button disabled but announcing it by changing the icon only? This what the ""disabled"" state of the button is for. Also, users won\'t be able to tell why the thing is not working (the button is enabled, right?). And they will have to learn what each of the icons means, which could be a steep learning curve.\r\n\r\n---\r\n\r\n> Agree that currently anybody looking at it first will always think it\'s disabled. Personally never seen something like that before.\r\n\r\nThere\'s a similar case somewhere in CF. I remember explaining how to do that to someone in their team.\r\n\r\n\r\n\r\n\r\n', 'author': 'oleq'}, {'body': '> Make the merge cells a standalone button. Then make the merge/split tools a regular drop-down (always enabled). **Problems**:\r\n> \r\n> *   We need two different icons for the same functionality,\r\n> *   We\'re bloating the toolbar.\r\n\r\nNot really an option to due to the problems that you describe. I can\'t imagine how the icons could look.\r\n\r\n> We ignore the problem then implement the [unmerge functionality](https://github.com/ckeditor/ckeditor5/issues/6567) bound to the main button. The button will always be enabled and the vast majority of users will never need to open the drop-down in the first place. **Problems**:\r\n> \r\n> *   We need another feature.\r\n\r\nUnmerge will also sometimes need to be off (when that cell wasn\'t merged previously). Also, I feel that it would be even more confusing than my proposal as you may be surprised by the result.\r\n\r\n> Somehow re-design of the split button to address the issue (???). **Problems**:\r\n> \r\n> *   This will probably result in the re-design of the rest of the components.\r\n> *   That\'s pretty time-consuming.\r\n\r\nI can\'t imagine simple and local changes that could be done here. Redesigning the entire toolbar for that is a no go too. So if you\'re consider it time-consuming, I don\'t think it\'s an option.\r\n\r\n:(\xa0\r\n\r\nI\'m afraid that this is a quite critical issue (the current styles) and that the only option is to make this a dropdown button and move the ""Merge cells"" to the dropdown.', 'author': 'Reinmar'}, {'body': 'What if we split that dropdown in two separate buttons (merge and split) and get rid of ""Merge cell up/left/right/bottom"" (I think that this is legacy and very confusing). So we would have button for merging (without dropdown), and dropdown for split vertically/horizontally.', 'author': 'niegowski'}, {'body': '> get rid of ""Merge cell up/left/right/bottom"" (I think that this is legacy and very confusing)\r\n\r\nWe need these options for environments (touch devices and for now visually impaired users) where multi-cell selections are not available.\r\n\r\nAs for whether it\'s a good idea assuming that in a longer perspective we\'ll resolve the issues with touch devices and lack of keyboard support, IDK. Perhaps that\'d be the way to go then.', 'author': 'Reinmar'}, {'body': 'Unfortunately, the current behaviour look \xa0broken to me. For some time I thought that something is broken.\r\n\r\n![](https://user-images.githubusercontent.com/247363/79947295-0304b600-8472-11ea-812b-0ead64d2ddc0.gif)', 'author': 'jodator'}]","['type:improvement', 'status:discussion', 'package:table', 'domain:ui/ux']",CLOSED,6631,[],"The arrow next to the ""merge cells"" button seems to be disabled ## 📝 Provide a description of the improvement

When the button is disabled (because it's not applicable to single cell selections), the dropdown with options such as ""split"" or ""merge cell left"" should be available. It can be opened by click the arrow. However, to me, that arrow seems to be invisible. When the button is disabled, the arrow may be missed. I think that discoverability of that dropdown will be really hard.

I honestly don't know how we can improve this... Maybe the button shouldn't be off? Maybe it should have no action or display something when a single cell is selected?

![](https://user-images.githubusercontent.com/156149/79587054-3e019500-80d2-11ea-8365-4d8dc7881dd6.png)

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",5,9
ckeditor,ckeditor5,Handle case of a smaller table pasted into bigger selection,"## 📝 Provide a description of the improvement

Extracted as a follow-up for #6120.

This scenario handles inserting smaller table than a table selection. This scenario should copy table horizontally and/or vertically when exceeding pasted table dimensions.

It should properly clone table structure (base issue moves content) and handle table slots occupied by spanned cells.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",jodator,['niegowski'],[],"['type:improvement', 'package:table']",CLOSED,6769,[],"Handle case of a smaller table pasted into bigger selection ## 📝 Provide a description of the improvement

Extracted as a follow-up for #6120.

This scenario handles inserting smaller table than a table selection. This scenario should copy table horizontally and/or vertically when exceeding pasted table dimensions.

It should properly clone table structure (base issue moves content) and handle table slots occupied by spanned cells.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",2,9
ckeditor,ckeditor5,"Revisit ""Custom builds"" and ""Installing plugins"" guides","## 📝 Provide a description of requested docs changes

*   Custom builds – remove and add a redirect to Installing plugins.
*   Installing plugins – completely rewrite, with the monorepo in mind.",mlewand,['Reinmar'],"[{'body': 'Posted question [""What is upstream GitHub URL to use for custom builds of CKEditor5 classic editor versions 19.1+""](https://stackoverflow.com/questions/62225924/what-is-upstream-github-url-to-use-for-custom-builds-of-ckeditor5-classic-editor) on stackoverflow but it looks like this may actually be the associated issue report, now targeting iteration 33, so linking my question here.\r\n\r\nIs there any ready advice for bringing a custom classic build up-to-date (to v19.1.1) before then?  If not, no problem, we\'ll await the revised/iteration-33 instructions.', 'author': 'davebeyer'}, {'body': ""Yeah, sorry for that. We have a delay with this guide and the amount of updates that we had to do after migrating to a monorepo was burned all our capacity.\r\n\r\nI actually don't know if we're going to propose the same way of maintaining builds (via forking). I'm leaning towards removing the mention of this approach completely. It channeled people to a non-optimal solution.\xa0\r\n\r\nIt requires slightly more work to set up a directory in your project with webpack configuration and main entry point in which you could define the shape of your build than just forking the repository. But then, maintaining a setup that you know would be easier. Maintaining something that you inherited from us (by forking a build repo) turned out to be paralysing for some developers. Plus, it had side effects – people started publishing their builds on npm (which, IMO, is unnecessary) and had problems with updating deps if they added some deps over what an official build provides.\r\n\r\nSo, the tl;dr is – IMO, it'd be better if you just copy [this](https://github.com/ckeditor/ckeditor5/blob/master/packages/ckeditor5-build-classic/src/ckeditor.js) and [this](https://github.com/ckeditor/ckeditor5/blob/master/packages/ckeditor5-build-classic/webpack.config.js) to an empty directory in your project, add a stock `package.json` (so you can add dependencies) or add them to the root `package.json` if you have one in your project already and fill the deps here. Then, it's a matter of running webpack on that `src/ckeditor.js` and with that config.\r\n\r\nI think we're going to document that approach."", 'author': 'Reinmar'}, {'body': ""OK, thanks for the update.   For now, given we're pretty slammed here too, I think we'll await your final deliberations and updated instructions."", 'author': 'davebeyer'}, {'body': 'WIP: https://github.com/ckeditor/ckeditor5/compare/i/6770', 'author': 'Reinmar'}, {'body': 'I got a valuable feedback from @wwalc that the ""Installing plugin"" guide should be as short and quick to use as possible. I started covering in it creating your own custom build from scratch, as I find this valuable. However, this grew to a size which makes this guide intimidating. I considered some options how to ma make it shorter (e.g. `npx ckeditor5-bootstrap-build`), but instead, it\'s better to move that part somewhere else.\r\n\r\nI\'ll try to refactor it so the ""creating a custom build from scratch"" will end up in advanced setup. The ""installing plugins"" will focus on using one of the builds or a setup produced by the online builder (I\'d like both things to be close to identical).\r\n\r\nAnyway, this means that I have yet another guide to refactor – the ""Advanced setup"" :tired\\_face:', 'author': 'Reinmar'}, {'body': 'A duplicate #7533 has been reported. It was referenced by mat128@cef7c7f which might also be useful.', 'author': 'mlewand'}, {'body': ""Hey @Reinmar & @mlewand.  Somehow I made my way through a breadcrumb trail of issues to this, and it saved me.  Pretty sure that both the online builder and docs are both pointing at the pre-monorepo-migration builds.\r\n\r\nIn a react integration, using the old builds was leading to some crazy out-of-memory javascript heap errors via babel / sourcemap generation.  Ended up spending quite a bit of time going down rabbit holes on that one.\r\n\r\nI was able to create a build using the instructions you wrote in https://github.com/ckeditor/ckeditor5/issues/7645 from 3 days ago.  That worked perfectly, and I was able to install plugins and create a working build.  Thank you for documenting your suggestions in the post above.\r\n\r\nI'm probably going to drop a few references to this issue around just so other people can save themselves some time until the official documentation is corrected.\r\n\r\nBest of luck with all the documentation updates... 😆"", 'author': 'mgandley'}, {'body': 'I merged #7534 to temporarily resolve the issue. However, I continue to work on [i/6770](https://github.com/ckeditor/ckeditor5/tree/i/6770) to get rid of the ""Custom builds"" guide and it\'s 90% done so far so I probably need a couple hours to finish it.\r\n\r\n@mgandley thanks for confirming that the instructions make sense. I don\'t feel entirely confident with them as I\'d, in general, loved if no one had to create custom builds. But it\'s cool to hear that the improved guide resolved some issues.', 'author': 'Reinmar'}, {'body': 'I can potentially include #8114 too.', 'author': 'Reinmar'}, {'body': 'Closing in favor of docs revamps that we were working on recently.', 'author': 'pomek'}]","['type:docs', 'squad:devops', 'resolution:resolved']",CLOSED,6770,[],"Revisit ""Custom builds"" and ""Installing plugins"" guides ## 📝 Provide a description of requested docs changes

*   Custom builds – remove and add a redirect to Installing plugins.
*   Installing plugins – completely rewrite, with the monorepo in mind.",22,15
ckeditor,ckeditor5,Implement the beforeInput support detection,"## 📝 Provide a description of the new feature

The event is supported in all major web browsers [except Firefox](https://bugzilla.mozilla.org/show_bug.cgi?id=970802) ([still an experimental feature behind a flag](https://wiki.developer.mozilla.org/en-US/docs/Mozilla/Firefox/Experimental_features)). This means for the time being both `beforeInput` and mutation typing will need to exist next to each other. And even after Firefox enables the feature, it will take some time for people to update their browsers (which is slow in corporate environments).

This is why `isBeforeInputSupported = !env.isGecko` does not make sense. We need a feature discovery similar to [the one described on the React issue tracker](https://github.com/facebook/react/issues/11211#issuecomment-355866473) instead.

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.",oleq,['oleq'],"[{'body': 'facebook/react#11211 and confirmation in https://stackoverflow.com/questions/49927038/how-to-feature-detect-input-events-level-1-or-2-support', 'author': 'Reinmar'}, {'body': 'Closed in #8021.', 'author': 'oleq'}]","['type:feature', 'package:typing', 'domain:dx']",CLOSED,7995,[],"Implement the beforeInput support detection ## 📝 Provide a description of the new feature

The event is supported in all major web browsers [except Firefox](https://bugzilla.mozilla.org/show_bug.cgi?id=970802) ([still an experimental feature behind a flag](https://wiki.developer.mozilla.org/en-US/docs/Mozilla/Firefox/Experimental_features)). This means for the time being both `beforeInput` and mutation typing will need to exist next to each other. And even after Firefox enables the feature, it will take some time for people to update their browsers (which is slow in corporate environments).

This is why `isBeforeInputSupported = !env.isGecko` does not make sense. We need a feature discovery similar to [the one described on the React issue tracker](https://github.com/facebook/react/issues/11211#issuecomment-355866473) instead.

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.",14,13
ckeditor,ckeditor5,Improve InputObserver so the event passes and normalizes additional information,"## Provide a description of the task

ATM the observer does nothing special; It passes the event through. The `beforeInput` event comes with some interesting properties, though:

*   `type`,
*   `getTargetRanges()`,
*   `data`,
*   `dataTransfer,`
*   `isComposing`

### TODO:

*   maybe we could have some `is()` interface for the type, for instance `is( 'insertText' )`?
*   `data` and `dataTransfer` should be normalized because depending on OS/browser/`type` they complement each other (it's a mess...)
*   ranges should be extracted using `getTargetRanges()`",oleq,['oleq'],"[{'body': 'Closed in #8043.', 'author': 'oleq'}]","['type:task', 'package:typing', 'domain:dx']",CLOSED,7996,[],"Improve InputObserver so the event passes and normalizes additional information ## Provide a description of the task

ATM the observer does nothing special; It passes the event through. The `beforeInput` event comes with some interesting properties, though:

*   `type`,
*   `getTargetRanges()`,
*   `data`,
*   `dataTransfer,`
*   `isComposing`

### TODO:

*   maybe we could have some `is()` interface for the type, for instance `is( 'insertText' )`?
*   `data` and `dataTransfer` should be normalized because depending on OS/browser/`type` they complement each other (it's a mess...)
*   ranges should be extracted using `getTargetRanges()`",29,13
ckeditor,ckeditor5,Migrate the Input plugin to the beforeInput event,"## Provide a description of the task

Depending on the `beforeInput` [being supported or not](https://github.com/ckeditor/ckeditor5/issues/7995), this plugin should run either of sub-plugins/helpers (to be decided):

*   for new `beforeInput`\-driven input,
*   for existing mutation-based input (`injectUnsafeKeystrokesHandling()`, `injectTypingMutationsHandling()`).

At least the following input event types should be handled:

*   `insertText`
*   `insertReplacementText`

Some extra things to be considered:

*   typing accented letters on Mac (which is NOT a composition but it already worked in the PoC),
*   what happens when the autocorrection kicks in (spell checker changes words as you type)?
*   does spell check work correctly (it worked on Mac in the PoC)?",oleq,['oleq'],"[{'body': 'Closed in [#817](https://github.com/ckeditor/ckeditor5/pull/8176)6.', 'author': 'oleq'}]","['type:task', 'package:typing', 'domain:ui/ux', 'domain:dx']",CLOSED,7997,['7995'],"Migrate the Input plugin to the beforeInput event ## Provide a description of the task

Depending on the `beforeInput` [being supported or not](https://github.com/ckeditor/ckeditor5/issues/7995), this plugin should run either of sub-plugins/helpers (to be decided):

*   for new `beforeInput`\-driven input,
*   for existing mutation-based input (`injectUnsafeKeystrokesHandling()`, `injectTypingMutationsHandling()`).

At least the following input event types should be handled:

*   `insertText`
*   `insertReplacementText`

Some extra things to be considered:

*   typing accented letters on Mac (which is NOT a composition but it already worked in the PoC),
*   what happens when the autocorrection kicks in (spell checker changes words as you type)?
*   does spell check work correctly (it worked on Mac in the PoC)?",29,13
ckeditor,ckeditor5,Migrate the Delete plugin to the beforeInput event,"## Provide a description of the task

Depending on the `beforeInput` [being supported or not](https://github.com/ckeditor/ckeditor5/issues/7995), this plugin should run either of sub-plugins/helpers (to be decided):

*   for new `beforeInput`\-driven deleting,
*   for existing mutation-based deleting

At least the following input event types should be handled:

*   `deleteContent`,
*   `deleteContentBackward`,
*   `deleteContentForward`,
*   `deleteWordBackward`,
*   `deleteWordForward`,
*   `deleteHardLineForward`
*   `deleteSoftLineBackward`

TODO: Check target ranges for various event types (this might make our life easier).",oleq,['oleq'],"[{'body': 'Closed in [#817](https://github.com/ckeditor/ckeditor5/pull/8176)6.', 'author': 'oleq'}]","['type:task', 'package:typing', 'domain:ui/ux', 'domain:dx']",CLOSED,7998,['7995'],"Migrate the Delete plugin to the beforeInput event ## Provide a description of the task

Depending on the `beforeInput` [being supported or not](https://github.com/ckeditor/ckeditor5/issues/7995), this plugin should run either of sub-plugins/helpers (to be decided):

*   for new `beforeInput`\-driven deleting,
*   for existing mutation-based deleting

At least the following input event types should be handled:

*   `deleteContent`,
*   `deleteContentBackward`,
*   `deleteContentForward`,
*   `deleteWordBackward`,
*   `deleteWordForward`,
*   `deleteHardLineForward`
*   `deleteSoftLineBackward`

TODO: Check target ranges for various event types (this might make our life easier).",29,13
ckeditor,ckeditor5,Migrate the Enter and ShiftEnter plugins to beforeInput,"## Provide a description of the task

At this moment `EnterObserver` is used to detect <kbd>Enter</kbd> and <kbd>Shift+Enter</kbd> keystrokes. This can be handled via `beforeInput` `insertParagraph` and `insertLineBreak` event types, though, for instance:

```javascript
editor.editing.view.document.on( 'beforeinput', ( evt, data ) => {
	const domEvent = data.domEvent;

	if ( domEvent.inputType === 'insertLineBreak' ) {
		editor.execute( 'shiftEnter' );

		evt.stop();
		data.preventDefault();
	}
} );
```",oleq,['oleq'],"[{'body': 'Features that listen to `enter`:\n* `BlockQuoteEditing`,\n* `CodeBlockEditing`,\n* `ListEditing`,\n* `WidgetTypeAround`', 'author': 'oleq'}, {'body': 'Idea: Split the logic inside `EnterObserver` to either use `keydown` or `beforeInput`.', 'author': 'oleq'}, {'body': 'Closed in [#817](https://github.com/ckeditor/ckeditor5/pull/8176)6.', 'author': 'oleq'}]","['type:task', 'package:typing', 'domain:ui/ux', 'domain:dx']",CLOSED,7999,[],"Migrate the Enter and ShiftEnter plugins to beforeInput ## Provide a description of the task

At this moment `EnterObserver` is used to detect <kbd>Enter</kbd> and <kbd>Shift+Enter</kbd> keystrokes. This can be handled via `beforeInput` `insertParagraph` and `insertLineBreak` event types, though, for instance:

```javascript
editor.editing.view.document.on( 'beforeinput', ( evt, data ) => {
	const domEvent = data.domEvent;

	if ( domEvent.inputType === 'insertLineBreak' ) {
		editor.execute( 'shiftEnter' );

		evt.stop();
		data.preventDefault();
	}
} );
```",27,13
ckeditor,ckeditor5,Use format* beforeInput types across the features,"## Provide a description of the task

There are various [`beforeInput` types](https://www.w3.org/TR/input-events-2/) that help integrate editor with native UI/OS controls (like the native WYSIWYG toolbar in iOS). There are events like

*   `formatBold`,
*   `formatItalic`,
*   `formatUnderline`,
*   `formatStrikeThrough`,
*   `formatSuperscript`,
*   `formatSubscript`,
*   `formatJustifyFull`,
*   `formatJustifyCenter`,
*   `formatJustifyRight`,
*   `formatJustifyLeft`,
*   `formatIndent`,
*   `formatOutdent`,
*   `formatRemove`,
*   `formatBackColor` (to be researched),
*   `formatFontColor` (to be researched),
*   `formatFontName` (to be researched)

that should be handled in individual features, for instance,

```javascript
editor.editing.view.document.on( 'beforeinput', ( evt, data ) => {
	const domEvent = data.domEvent;

	if ( domEvent.inputType === 'formatBold' ) {
		editor.execute( 'bold' );

		evt.stop();
		data.preventDefault();
	}
} );
```

Even though some event types are virtual at this moment (they exist in the spec only), the integration is very cheap so we could cover them all to stay safe in the future.",oleq,[],"[{'body': ""There has been no activity on this issue for the past year. We've marked it as stale and will close it in 30 days. We understand it may still be relevant, so if you're interested in the solution, leave a comment or reaction under this issue."", 'author': 'CKEditorBot'}, {'body': ""We've closed your issue due to inactivity over the last year. We understand that the issue may still be relevant. If so, feel free to open a new one (and link this issue to it)."", 'author': 'CKEditorBot'}]","['type:task', 'package:basic-styles', 'package:typing', 'package:font', 'package:alignment', 'domain:ui/ux', 'resolution:expired', 'package:indent', 'domain:dx', 'squad:core']",CLOSED,8000,[],"Use format* beforeInput types across the features ## Provide a description of the task

There are various [`beforeInput` types](https://www.w3.org/TR/input-events-2/) that help integrate editor with native UI/OS controls (like the native WYSIWYG toolbar in iOS). There are events like

*   `formatBold`,
*   `formatItalic`,
*   `formatUnderline`,
*   `formatStrikeThrough`,
*   `formatSuperscript`,
*   `formatSubscript`,
*   `formatJustifyFull`,
*   `formatJustifyCenter`,
*   `formatJustifyRight`,
*   `formatJustifyLeft`,
*   `formatIndent`,
*   `formatOutdent`,
*   `formatRemove`,
*   `formatBackColor` (to be researched),
*   `formatFontColor` (to be researched),
*   `formatFontName` (to be researched)

that should be handled in individual features, for instance,

```javascript
editor.editing.view.document.on( 'beforeinput', ( evt, data ) => {
	const domEvent = data.domEvent;

	if ( domEvent.inputType === 'formatBold' ) {
		editor.execute( 'bold' );

		evt.stop();
		data.preventDefault();
	}
} );
```

Even though some event types are virtual at this moment (they exist in the spec only), the integration is very cheap so we could cover them all to stay safe in the future.",27,13
ckeditor,ckeditor5,"Use insert* beforeInput types across the features (list, horizontal line, etc.)","## Provide a description of the task

Similar to [`format*` event types](https://github.com/ckeditor/ckeditor5/issues/8000), there are `insert*` event types like:

*   `insertOrderedList`,
*   `insertUnorderedList`,
*   `insertHorizontalRule`,
*   `insertLink` (requires some research)

that help integrate the editor with native UI/OS controls (like the native WYSIWYG toolbar in iOS).",oleq,[],"[{'body': ""There has been no activity on this issue for the past year. We've marked it as stale and will close it in 30 days. We understand it may still be relevant, so if you're interested in the solution, leave a comment or reaction under this issue."", 'author': 'CKEditorBot'}, {'body': ""We've closed your issue due to inactivity over the last year. We understand that the issue may still be relevant. If so, feel free to open a new one (and link this issue to it)."", 'author': 'CKEditorBot'}]","['type:task', 'package:list', 'package:typing', 'domain:ui/ux', 'resolution:expired', 'package:horizontal-rule', 'domain:dx', 'squad:core', 'status:stale']",CLOSED,8001,['8000'],"Use insert* beforeInput types across the features (list, horizontal line, etc.) ## Provide a description of the task

Similar to [`format*` event types](https://github.com/ckeditor/ckeditor5/issues/8000), there are `insert*` event types like:

*   `insertOrderedList`,
*   `insertUnorderedList`,
*   `insertHorizontalRule`,
*   `insertLink` (requires some research)

that help integrate the editor with native UI/OS controls (like the native WYSIWYG toolbar in iOS).",24,13
ckeditor,ckeditor5,Test and stabilize composition (IME) using beforeInput on desktop browsers (Mac),"## Provide a description of the task

On a F2F call with @niegowski we discovered that Safari on Mac uses `deleteByComposition` to recompose the typed content. It was a surprise because it seems Chrome does not do that so there are some differences within the same operating system when it comes to IME.

All Mac-compatible browsers must be tested thoroughly to make sure composition is stable and all use-cases (like recomposition) are covered.

Some extra things to verify:

*   does the spell check work (accepting changes)?
*   does the autocorrection work (spell checker changing words as you type)?
*   do accented letters work (they are not a composition on Mac)?",oleq,[],"[{'body': ""Closed together with #7462. We're reorganizing the work in #11438."", 'author': 'Reinmar'}]","['resolution:duplicate', 'type:task', 'package:typing', 'domain:ui/ux', 'browser:chrome', 'browser:edge', 'browser:safari', 'domain:typing/ime', 'squad:core']",CLOSED,8008,[],"Test and stabilize composition (IME) using beforeInput on desktop browsers (Mac) ## Provide a description of the task

On a F2F call with @niegowski we discovered that Safari on Mac uses `deleteByComposition` to recompose the typed content. It was a surprise because it seems Chrome does not do that so there are some differences within the same operating system when it comes to IME.

All Mac-compatible browsers must be tested thoroughly to make sure composition is stable and all use-cases (like recomposition) are covered.

Some extra things to verify:

*   does the spell check work (accepting changes)?
*   does the autocorrection work (spell checker changing words as you type)?
*   do accented letters work (they are not a composition on Mac)?",29,13
ckeditor,ckeditor5,Test and stabilize composition (IME) using beforeInput on desktop browsers (Windows),"## Provide a description of the task

A twin to #8008 except that Windows-compatible browsers must be tested.",oleq,[],"[{'body': ""Closed together with #7462. We're reorganizing the work in #11438."", 'author': 'Reinmar'}]","['resolution:duplicate', 'type:task', 'package:typing', 'domain:ui/ux', 'browser:chrome', 'browser:edge', 'domain:typing/ime', 'squad:core']",CLOSED,8009,[],"Test and stabilize composition (IME) using beforeInput on desktop browsers (Windows) ## Provide a description of the task

A twin to #8008 except that Windows-compatible browsers must be tested.",28,13
ckeditor,ckeditor5,Test and stabilize composition (IME) using beforeInput on desktop browsers (Linux),"## Provide a description of the task

A twin to [#8008](https://github.com/ckeditor/ckeditor5/issues/8008) except that Linux-compatible browsers must be tested. As there are multiple desktop environments in the Linux ecosystem and IME is tightly connected to the OS, I'd stick to the most popular distributions like Ubuntu or Mint just for starters (maybe something with KDE? Is KDE still a thing?).",oleq,[],"[{'body': ""Closed together with #7462. We're reorganizing the work in #11438."", 'author': 'Reinmar'}]","['resolution:duplicate', 'type:task', 'package:typing', 'domain:ui/ux', 'browser:chrome', 'domain:typing/ime', 'squad:core']",CLOSED,8010,['8008'],"Test and stabilize composition (IME) using beforeInput on desktop browsers (Linux) ## Provide a description of the task

A twin to [#8008](https://github.com/ckeditor/ckeditor5/issues/8008) except that Linux-compatible browsers must be tested. As there are multiple desktop environments in the Linux ecosystem and IME is tightly connected to the OS, I'd stick to the most popular distributions like Ubuntu or Mint just for starters (maybe something with KDE? Is KDE still a thing?).",4,13
ckeditor,ckeditor5,Test and stabilize composition (IME) using beforeInput on Android,"## Provide a description of the task

A twin to #8008 except that it's Android that must be tested. For starters, I'd go with the default Android web browser (that is Chrome most of the time, I guess) and few popular keyboards (because it's the keyboard that matters when it comes to IME).",oleq,[],"[{'body': ""I briefly checked out the status of things on Android 10 and it turned out it uses composition a lot, also for basic typing. While normal `insertText` works, `insertCompositionText` is used whenever the word is underlined (suggesting), which is like 80% of the time, also using English keyboard (it's not IME-related)."", 'author': 'oleq'}, {'body': 'TODO: https://github.com/ckeditor/ckeditor5/pull/8176#discussion_r500229072', 'author': 'oleq'}, {'body': ""Closed together with #7462. We're reorganizing the work in #11438."", 'author': 'Reinmar'}]","['resolution:duplicate', 'type:task', 'package:typing', 'domain:ui/ux', 'domain:typing/ime', 'domain:mobile', 'squad:core']",CLOSED,8011,[],"Test and stabilize composition (IME) using beforeInput on Android ## Provide a description of the task

A twin to #8008 except that it's Android that must be tested. For starters, I'd go with the default Android web browser (that is Chrome most of the time, I guess) and few popular keyboards (because it's the keyboard that matters when it comes to IME).",4,13
ckeditor,ckeditor5,Test and stabilize composition (IME) using beforeInput on iOS,"## Provide a description of the task

A twin to #8008 but for iOS. Although iOS allows custom keyboards now, I'd stick to the default keyboard + mobile Safari scenario when testing as it seems the most common one.",oleq,[],"[{'body': ""Closed together with #7462. We're reorganizing the work in #11438."", 'author': 'Reinmar'}]","['resolution:duplicate', 'type:task', 'package:typing', 'domain:ui/ux', 'domain:typing/ime', 'domain:mobile', 'squad:core']",CLOSED,8012,[],"Test and stabilize composition (IME) using beforeInput on iOS ## Provide a description of the task

A twin to #8008 but for iOS. Although iOS allows custom keyboards now, I'd stick to the default keyboard + mobile Safari scenario when testing as it seems the most common one.",28,13
ckeditor,ckeditor5,Test and stabilize beforeInput in Collaboration Features,"## Provide a description of the task

There are a few things that must be tested and stabilized, for instance:

*   what happens if during a composition a collaborator did some formatting in the same paragraph?
*   what happens if during a composition a collaborator split the paragraph?
*   what happens if during a composition an auto embedding finishes (paste a link, start composition, link was embedded)?
*   does `beforeInput` go well with track changes?
    *   does a composition on top of `beforeInput` work as well?
*   what happens when the autocorrection kicks in (spell checker changes words as you type) and the Track Changes is on?
*   does spell check work correctly with Track Changes?
*   ...
*   ...
*   ...
*   (probably lots of cases)",oleq,[],"[{'body': ""Closed together with #7462. We're reorganizing the work in #11438."", 'author': 'Reinmar'}]","['resolution:duplicate', 'type:task', 'package:typing', 'package:cloud-services', 'domain:ui/ux', 'domain:typing/ime', 'squad:core']",CLOSED,8013,[],"Test and stabilize beforeInput in Collaboration Features ## Provide a description of the task

There are a few things that must be tested and stabilized, for instance:

*   what happens if during a composition a collaborator did some formatting in the same paragraph?
*   what happens if during a composition a collaborator split the paragraph?
*   what happens if during a composition an auto embedding finishes (paste a link, start composition, link was embedded)?
*   does `beforeInput` go well with track changes?
    *   does a composition on top of `beforeInput` work as well?
*   what happens when the autocorrection kicks in (spell checker changes words as you type) and the Track Changes is on?
*   does spell check work correctly with Track Changes?
*   ...
*   ...
*   ...
*   (probably lots of cases)",29,13
ckeditor,ckeditor5,Inline images - MVP step 2,"- [ ] Linking images (we're fine with this: `<p><a><img>foo</a></p>`-> `<p><a><img></a><a>foo</a></p>`)
- [ ] Image resizing
- [ ] Support for loading only the inline image feature
",pkwasnik,[],"[{'body': 'Remember about link decorators.', 'author': 'pomek'}, {'body': ""I'm not sure why this issue is still open (it's not an epic). The first sub-feature is tracked in #8871. The rest is already done."", 'author': 'oleq'}]","['type:feature', 'package:image', 'domain:ui/ux', 'squad:core']",CLOSED,8666,[],"Inline images - MVP step 2 - [ ] Linking images (we're fine with this: `<p><a><img>foo</a></p>`-> `<p><a><img></a><a>foo</a></p>`)
- [ ] Image resizing
- [ ] Support for loading only the inline image feature
",25,3
ckeditor,ckeditor5,Inline images - nice to have features,"## 📝 Provide a description of the new feature

List of additional possible features for inline images. Base ticket: #2052

*   [ ] Vertical alignment of inline images.
*   [ ] Drag&drop of inline images.
*   [ ] Border, HSpace, VSpace → compat squad.
*   [ ] Other additional attributes → compat squad.

Considerations

*   [ ] Inserting images to lists

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.",pkwasnik,[],"[{'body': ""There has been no activity on this issue for the past year. We've marked it as stale and will close it in 30 days. We understand it may still be relevant, so if you're interested in the solution, leave a comment or reaction under this issue."", 'author': 'CKEditorBot'}, {'body': ""We've closed your issue due to inactivity over the last year. We understand that the issue may still be relevant. If so, feel free to open a new one (and link this issue to it)."", 'author': 'CKEditorBot'}]","['type:feature', 'package:image', 'resolution:expired', 'status:stale']",CLOSED,8712,[],"Inline images - nice to have features ## 📝 Provide a description of the new feature

List of additional possible features for inline images. Base ticket: #2052

*   [ ] Vertical alignment of inline images.
*   [ ] Drag&drop of inline images.
*   [ ] Border, HSpace, VSpace → compat squad.
*   [ ] Other additional attributes → compat squad.

Considerations

*   [ ] Inserting images to lists

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.",18,3
ckeditor,ckeditor5,Action when there are no more search results available.,"## 📝 Provide a description of the new feature

What should happen if there are no more search results (e.g. you replaced the last occurrence or your search query does not match)?",mateuszzagorski,"['mateuszzagorski', 'magda-chrzescian']","[{'body': 'Do we need something more than that?\r\n![image](https://user-images.githubusercontent.com/14334820/122757899-71bce980-d298-11eb-9ae8-bfb5193001f5.png)\r\n', 'author': 'magda-chrzescian'}, {'body': 'Blocked by our ux followups call that is scheduled to 13th of July.', 'author': 'mlewand'}, {'body': 'Resolved by #10047.', 'author': 'mlewand'}]","['type:feature', 'domain:ui/ux', 'squad:features', 'package:find-and-replace']",CLOSED,9934,[],"Action when there are no more search results available. ## 📝 Provide a description of the new feature

What should happen if there are no more search results (e.g. you replaced the last occurrence or your search query does not match)?",19,16
ckeditor,ckeditor5,Integrate find and replace plugin with source mode,"## 📝 Provide detailed reproduction steps (if any)

Based on https://github.com/ckeditor/ckeditor5/issues/9964#issuecomment-869651757

> 1. Switch to source mode
> 
> **Expected:** find & replace toolbar dropdown is inactive.
> 
> **Actual:** find & replace toolbar dropdown is active, you can open it and type some text, but nothing happens anyway.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",mlewand,['mateuszzagorski'],"[{'body': 'Fixed in #10080.', 'author': 'mlewand'}]","['type:bug', 'squad:features', 'package:find-and-replace']",CLOSED,10001,['9964'],"Integrate find and replace plugin with source mode ## 📝 Provide detailed reproduction steps (if any)

Based on https://github.com/ckeditor/ckeditor5/issues/9964#issuecomment-869651757

> 1. Switch to source mode
> 
> **Expected:** find & replace toolbar dropdown is inactive.
> 
> **Actual:** find & replace toolbar dropdown is active, you can open it and type some text, but nothing happens anyway.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",14,16
ckeditor,ckeditor5,The find and replace view does not indicate that no matches were found,"## 📝 Provide a description of the improvement

[http://fake.ckeditor.com:8081/build/docs/ckeditor5/latest/features/find-and-replace.html](http://fake.ckeditor.com:8081/build/docs/ckeditor5/latest/features/find-and-replace.html)

if you search for anything that has no matches there is no UI response of any kind. It would be nice to see `0 of 0` in the input view as for found matches. 

![](https://user-images.githubusercontent.com/1232187/123965507-cfe27e80-d9b4-11eb-9892-68edc063e2c8.gif)

## 📃 Other details

*   Browser: …
*   OS: …
*   CKEditor version: …
*   Installed CKEditor plugins: …

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",niegowski,['mateuszzagorski'],"[{'body': 'Fixed with [#10047](https://github.com/ckeditor/ckeditor5/pull/10047).', 'author': 'mlewand'}]","['type:improvement', 'squad:features', 'package:find-and-replace']",CLOSED,10014,[],"The find and replace view does not indicate that no matches were found ## 📝 Provide a description of the improvement

[http://fake.ckeditor.com:8081/build/docs/ckeditor5/latest/features/find-and-replace.html](http://fake.ckeditor.com:8081/build/docs/ckeditor5/latest/features/find-and-replace.html)

if you search for anything that has no matches there is no UI response of any kind. It would be nice to see `0 of 0` in the input view as for found matches. 

![](https://user-images.githubusercontent.com/1232187/123965507-cfe27e80-d9b4-11eb-9892-68edc063e2c8.gif)

## 📃 Other details

*   Browser: …
*   OS: …
*   CKEditor version: …
*   Installed CKEditor plugins: …

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",14,16
ckeditor,ckeditor5,Add missing badges README.md,"## Provide a description of the task

Now that npm package is published we can add badges to the README.md as in other plugins README's.",mlewand,['mateuszzagorski'],"[{'body': '@mateuszzagorski Please base your change from the `release` branch and do a PR to (the same) `release` branch.', 'author': 'mlewand'}, {'body': 'Fixed in eca7edc', 'author': 'mlewand'}]","['type:task', 'intro', 'release:blocker', 'package:find-and-replace']",CLOSED,10040,[],"Add missing badges README.md ## Provide a description of the task

Now that npm package is published we can add badges to the README.md as in other plugins README's.",22,16
ckeditor,ckeditor5,Find and replace multiroot support,"## 📝 Provide detailed reproduction steps (if any)

The find and replace feature should support editor with multiple document roots.

Surely we'd have to ignore special roots (that starting with the $ sign).

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",mlewand,['magda-chrzescian'],"[{'body': 'This feature would be very helpful for our users who have large, quasi-legal documents in the hundreds of pages. We use the multi root editor to create a seamless experience. Currently they use the browser for finding content which is not a good workaround. ', 'author': '108signals'}]","['type:bug', 'support:2', 'squad:core', 'squad:features', 'package:find-and-replace']",CLOSED,10146,[],"Find and replace multiroot support ## 📝 Provide detailed reproduction steps (if any)

The find and replace feature should support editor with multiple document roots.

Surely we'd have to ignore special roots (that starting with the $ sign).

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",18,16
ckeditor,ckeditor5,Research feasibility of Command#affectsContent,"## Provide a description of the task

Part of #10676. Research required to continue #10308.

Notes from a refinement meeting:

*   Idea: Introduce `Command#affectsContent` (readonly prop, set by the command itself, by default `true`).
*   Use that prop to decide which command to disable in the following cases:
    *   Read-only mode (in the Command class)
    *   Comments only mode (in CommentsOnly plugin)
    *   Restricted editing mode
    *   Track changes (unsupported commands)
    *   (are there more? search for `.forceDisabled`)

Scope:

*   Prototype this solution.
*   Review the value of `affectsContent` in 73 commands (all that we have now) and set to `false` in these which don't affect the content.
*   Check the aforementioned features. Is this property enough? Or are there more semantically distinctive cases (more props needed)?
*   Search for places where we override the `forceDisabled()` calls with `clearForceDisabled()`
    *   Clean up this code.
    *   Scan for code that could be removed now (hardcoded re-enabling like in FindCommand, hardcoded command names; scan for `clearForceDisabled()`).
*   Are there some commands that do not affect the content but should be disabled in one of the above-mentioned cases (or other cases)?
    *   DONK: comments only mode. Comment commands should be enabled, despite the fact that `affectsContent` would be true.
    *   Still, it can make a decision based on `affectsContent` in [https://github.com/ckeditor/ckeditor5/blob/1fc2435/external/collaboration-features/packages/ckeditor5-comments/src/commentsonly.js#L87](https://github.com/ckeditor/ckeditor5/blob/1fc2435/external/collaboration-features/packages/ckeditor5-comments/src/commentsonly.js#L87)
*   Check whether this will resolve cksource/ckeditor5-internal#796 and similar situations that we had.
*   Give it a thought: Is there a potential command that may need to have this property dynamic (change in different situations).
*   Different direction: Introduce a concept of modes and have `disableInModes[]` property.
    *   Then, a specific command would need to be aware of all modes. E.g. a Bold feature would need to be aware of the Comments feature.
    *   We want to avoid coupling features like that. Hence, a more abstract, and yet fully descriptive property like `affectsContent` is better.
*   Note: In MultiCommand, if any of the registered commands has `affectsContent`, then MultiCommand should too.
*   tl;dr:
    *   Check feasibility (does this property resolve the currently existing cases)
    *   Check the amount of needed changes to reduce this debt",Reinmar,['dawidurbanski'],"[{'body': 'The solution is prototyped (changes: [cke5](https://github.com/ckeditor/ckeditor5/compare/ck/10493-affects-content), [cf](https://github.com/cksource/collaboration-features/compare/ck/10493-affects-content), [internal](https://github.com/cksource/ckeditor5-internal/compare/ck/10493-affects-content)). Here are my thoughts on this after making some research.\r\n\r\nFirst of all, as discussed we should reconsider naming this `affectsData` because `content` word is bit vague. It also follows `Marker` property name as mentioned [here](https://github.com/ckeditor/ckeditor5/issues/10308#issuecomment-893240102).\r\n\r\nSecond of all I created this lookup table and gathered all the data in one place: (internal) https://docs.google.com/spreadsheets/d/1JfNMWffqVP14Mfn4n_JZQpASn2yvrYkD8CWKB_RxkOA/edit#gid=0\r\n\r\n<img width=""1275"" alt=""Screenshot 2021-10-04 at 11 55 45"" src=""https://user-images.githubusercontent.com/12466568/135831323-0cd47adf-f3ee-4542-800f-cdebd08c5e84.png"">\r\n\r\n### Results can be summarised as such:\r\n\r\n- #10636. \r\n✅  #affectsContent solves this problem\r\n- ""Replace"" does not work in track changes (https://github.com/cksource/collaboration-features/issues/4258)\r\n❌ #affectsContent does not solve this problem, because there is simply no integration between these two yet.\r\n- https://github.com/cksource/ckeditor5-internal/issues/1021\r\n✅  #affectsContent solves this problem.\r\n- https://github.com/cksource/ckeditor5-internal/issues/796\r\n✅  #affectsContent solves this problem.\r\n- https://github.com/cksource/collaboration-features/issues/4229\r\n❌ #affectsContent does not solve this problem, because TC has restricted editing integration explicitly allowing these two together (which makes no sense, see the ticket).\r\n- Adding comments threads is enabled in restricted editing.\r\n❌ #affectsContent does not solve this problem, because Comments has restricted editing integration explicitly allowing these two together (which makes no sense, see the ticket from previous point).\r\n- https://github.com/cksource/collaboration-features/issues/4230\r\n❌ #affectsContent does not solve this problem, because in revision history viewer editor is in read-only mode but restoring should be still enabled. It should still be disabled in the proper read only mode. Has to be fixed by CF team.\r\n- #10634\r\n✅  #affectsContent solves this problem (with small exception in read-only mode, check the comment in the table).\r\n- #10635\r\n✅  #affectsContent solves this problem.\r\n\r\n### Other related tickets in one place\r\n\r\n- https://github.com/ckeditor/ckeditor5/issues/10308\r\n- https://github.com/cksource/ckeditor5-internal/issues/753 (may be closed IMHO)\r\n- https://github.com/cksource/collaboration-features/issues/4213 (find is covered here, replace not)\r\n- https://github.com/cksource/products-feedback/issues/450 (same as previous one)\r\n\r\n### New manual test for convenience\r\n\r\nI have created a new manual test combining all editor modes in one test for simpler testing.\r\n\r\nIt\'s added on branch `ck/10493-affects-content`.\r\n\r\n<img width=""1327"" alt=""Screenshot 2021-10-04 at 12 30 12"" src=""https://user-images.githubusercontent.com/12466568/135836284-d5f2903e-bbe8-48ac-9a05-5dbc9c1d7d47.png"">\r\n\r\nTo use it:\r\n\r\n1. `git checkout ck/10493-affects-content`\r\n2. `mrgit checkout ck/10493-affects-content`\r\n3. `yarn manual --files=ckeditor5 -i external/collaboration-features/dev/presets/staging.js`\r\n4. Open `editor-modes.html`\r\n\r\nI also created a separate branch `ck/10493-affects-content-compare` with only this test added to current master branch. This can be used for easy comparison of current master vs new affectsContent POC.\r\n\r\nTo use it:\r\n\r\n1. `git checkout ck/10493-affects-content-compare`\r\n2. `mrgit chckout master`\r\n3. `yarn manual --files=ckeditor5 -i external/collaboration-features/dev/presets/staging.js`\r\n4. Open `editor-modes.html`\r\n\r\n### Other notes\r\n\r\n> Review the value of affectsContent in 73 commands (all that we have now) and set to false in these which don\'t affect the content.\r\n\r\nIt\'s actually `66` commands in main repo, `10` in CF repo and `2` in internal.\r\n\r\n> Check the amount of needed changes to reduce this debt\r\n\r\nThe update is trivial since we set `affectsContent` on main `Command` class to be `true` by default, and we only have to update this in couple parts, precisely:\r\n\r\nset `this.affectsContent = false` in commands:\r\n\r\n- [FindCommand](https://github.com/ckeditor/ckeditor5/blob/master/packages/ckeditor5-find-and-replace/src/findcommand.js)\r\n- [FindNextCommand](https://github.com/ckeditor/ckeditor5/blob/master/packages/ckeditor5-find-and-replace/src/findnextcommand.js)\r\n- [RestrictedEditingModeNavigationCommand](https://github.com/ckeditor/ckeditor5/blob/master/packages/ckeditor5-restricted-editing/src/restrictededitingmodenavigationcommand.js)\r\n- [SelectAllCommand](https://github.com/ckeditor/ckeditor5/blob/master/packages/ckeditor5-select-all/src/selectallcommand.js)\r\n- [SelectColumnCommand](https://github.com/ckeditor/ckeditor5/blob/master/packages/ckeditor5-table/src/commands/selectcolumncommand.js)\r\n- [SelectRowCommand](https://github.com/ckeditor/ckeditor5/blob/master/packages/ckeditor5-table/src/commands/selectrowcommand.js)\r\n\r\nInternal\r\n- ExportPdfCommand (internal)\r\n- ExportWordCommand (internal)\r\n\r\nCF\r\n- ShowChangeCommand (collaboration-features)\r\n\r\nadd `affectsContent` check in integrations:\r\n\r\n- [Read-only in Command](https://github.com/ckeditor/ckeditor5/blob/master/packages/ckeditor5-core/src/command.js#L121)\r\n- [Restricted editing](https://github.com/ckeditor/ckeditor5/blob/e0ff106ede45618f6d1e3ad4922290e967eca3fc/packages/ckeditor5-restricted-editing/src/restrictededitingmodeediting.js#L274-L318) This part also should be refactored to not use command names but rather to loop through all editor commands and disable/enable ones that are necessary (similar to other modes).\r\n- Comments-only (CF CommentsOnly plugin)\r\n- Track changes (CF TrackChangesCommand)\r\n\r\n> Is this property enough? Or are there more semantically distinctive cases (more props needed)?\r\n\r\nI have not found a single use case for any other props at this stage.\r\n\r\n> Are there some commands that do not affect the content but should be disabled in one of the above-mentioned cases.\r\n\r\nIt\'s up to the feature to decide whether it wants to respect affectsContent prop, and if not to override default behaviour.\r\n\r\n> Is there a potential command that may need to have this property dynamic (change in different situations).\r\n\r\nI have not found any use case for this. Also, if a command needs to be content affecting and not affecting at the same time, it might be a sign that it does too much and should be two separate commands (like search + replace for example).\r\n\r\n> In MultiCommand, if any of the registered commands has affectsContent, then MultiCommand should too.\r\n\r\nIn this POC I haven\'t touch `MultiCommand` so it\'s something to add in final solution. Should be straightforward.\r\n\r\n### What\'s next?\r\n\r\n- Clean up TODOs from this POC ~~(remove observable)~~ done\r\n- Add comments\r\n- Add tests if necessary\r\n- ~~Refactor restricted editing command enable/disable part.~~ done\r\n- Add `MultiCommand` support for `affectsContent`.\r\n- Maybe rename `affectsContent` to `affectsData`.\r\n- API docs\r\n- Commands guide', 'author': 'dawidurbanski'}, {'body': 'Follow ups:\r\n\r\nhttps://github.com/ckeditor/ckeditor5/issues/10670\r\nhttps://github.com/ckeditor/ckeditor5/issues/10671\r\nhttps://github.com/ckeditor/ckeditor5/issues/10672', 'author': 'dawidurbanski'}]","['type:task', 'package:core', 'domain:dx', 'squad:core']",CLOSED,10493,[],"Research feasibility of Command#affectsContent ## Provide a description of the task

Part of #10676. Research required to continue #10308.

Notes from a refinement meeting:

*   Idea: Introduce `Command#affectsContent` (readonly prop, set by the command itself, by default `true`).
*   Use that prop to decide which command to disable in the following cases:
    *   Read-only mode (in the Command class)
    *   Comments only mode (in CommentsOnly plugin)
    *   Restricted editing mode
    *   Track changes (unsupported commands)
    *   (are there more? search for `.forceDisabled`)

Scope:

*   Prototype this solution.
*   Review the value of `affectsContent` in 73 commands (all that we have now) and set to `false` in these which don't affect the content.
*   Check the aforementioned features. Is this property enough? Or are there more semantically distinctive cases (more props needed)?
*   Search for places where we override the `forceDisabled()` calls with `clearForceDisabled()`
    *   Clean up this code.
    *   Scan for code that could be removed now (hardcoded re-enabling like in FindCommand, hardcoded command names; scan for `clearForceDisabled()`).
*   Are there some commands that do not affect the content but should be disabled in one of the above-mentioned cases (or other cases)?
    *   DONK: comments only mode. Comment commands should be enabled, despite the fact that `affectsContent` would be true.
    *   Still, it can make a decision based on `affectsContent` in [https://github.com/ckeditor/ckeditor5/blob/1fc2435/external/collaboration-features/packages/ckeditor5-comments/src/commentsonly.js#L87](https://github.com/ckeditor/ckeditor5/blob/1fc2435/external/collaboration-features/packages/ckeditor5-comments/src/commentsonly.js#L87)
*   Check whether this will resolve cksource/ckeditor5-internal#796 and similar situations that we had.
*   Give it a thought: Is there a potential command that may need to have this property dynamic (change in different situations).
*   Different direction: Introduce a concept of modes and have `disableInModes[]` property.
    *   Then, a specific command would need to be aware of all modes. E.g. a Bold feature would need to be aware of the Comments feature.
    *   We want to avoid coupling features like that. Hence, a more abstract, and yet fully descriptive property like `affectsContent` is better.
*   Note: In MultiCommand, if any of the registered commands has `affectsContent`, then MultiCommand should too.
*   tl;dr:
    *   Check feasibility (does this property resolve the currently existing cases)
    *   Check the amount of needed changes to reduce this debt",8,18
ckeditor,ckeditor5,Editor doesn't preserve image size when pasting resized images from Google Docs,"## 📝 Provide detailed reproduction steps (if any)

1.  Create sample document in Google Docs with resized image.
2.  Copy the image and paste it into editor.

### ✔️ Expected result

Pasted images has the same size as in Google Docs.

### ❌ Actual result

Image is pasted with its original size.

Image HTML has width/height attributes which doesn't seem to be taken into account when pasting:

```
<img src=""https://lh4.googleusercontent.com/APWThOWTll8I0A_cIYAEe-o69Ddbc-uul0YkfwnSVnhZp9GoRvtCENXG50sq6sx9A0nKMw7C64nju3IU0gyPd7Xg6YxfG2Ul3hn_nqsj7jEUoAXbMEaNERGVkagEa57zooZWr-6L"" width=""161"" height=""226"" style=""margin-left:0px;margin-top:0px;"" />
```

### ❓ Possible solution

_If you have ideas, you can list them here. Otherwise, you can delete this section._

## 📃 Other details

*   Browser: Any
*   OS: Any
*   First affected CKEditor version: N/A
*   Installed CKEditor plugins: Image

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",jswiderski,[],"[{'body': 'Similar or related issues - #5632, #5154', 'author': 'jswiderski'}, {'body': ""Even if you set GHS to allow width/height attributes, it will not have any effect:\r\n\r\n```\r\nhtmlSupport: {\r\n\t\t\tdisallow: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'img',\r\n\t\t\t\t\tstyles: {\r\n\t\t\t\t\t\twidth: true,\r\n\t\t\t\t\t\theight: true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\t\r\n\t\t\tallow: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'img',\r\n\t\t\t\t\tattributes: {\r\n\t\t\t\t\t\twidth: true,\r\n\t\t\t\t\t\theight: true\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t]\r\n}\r\n```\r\n\r\nAttributes are assigned to wrapping `span` but not to `img` element.\r\n\r\n![](https://user-images.githubusercontent.com/5314687/144839187-cf7a7009-e670-4e5a-a384-a447c6be264c.png)\r\n\r\nGoogle Docs:\r\n\r\n![](https://user-images.githubusercontent.com/5314687/144839686-ce61db3a-a8f0-4fb2-be30-bda1b8b2cb0f.png)"", 'author': 'jswiderski'}, {'body': 'I did a quick assessment on this.\r\n\r\nGoogle simply uses `img[height]` and `img[width]` attributes to convey image size. We don\'t have any conversion for this.\r\n\r\nAll we need to fix size retention for proportionally resized images is to add converter for `img[width]` attribute.\r\n\r\nHowever, we don\'t have any handling for image height in CKE5 so far, so if we were to handle non-proportionally resized image we\'d need to add a handling for that which is a bigger task.\r\n\r\nFor a reference here\'s the example HTML code placed in the clipboard (Chrome, didn\'t check other browsers):\r\n```\r\n<p dir=""ltr"" style=""line-height:1.38;margin-top:0pt;margin-bottom:0pt;""><span\r\n\t\tstyle=""font-size:11pt;font-family:Arial;color:#000000;background-color:transparent;font-weight:400;font-style:normal;font-variant:normal;text-decoration:none;vertical-align:baseline;white-space:pre;white-space:pre-wrap;""><span\r\n\t\t\tstyle=""border:none;display:inline-block;overflow:hidden;width:429px;height:306px;"">\r\n\t\t\t<img src=""https://lh4.googleusercontent.com/VfZ3NHygkdxd2_0BDsdX7s54xkSOhw-noVSJDAEBde36EGr04YGEaXIG1s0Q2j4H__SgqrOlQCZppBDWDAEaHo07auCncNwO33zqhh02PqkLDOXet5mC2mwUGVSU-RSuzocNvC-f""\r\n\t\t\t\twidth=""429"" height=""306"" style=""margin-left:0px;margin-top:0px;"" /></span></span></p>\r\n```', 'author': 'mlewand'}, {'body': ""> Google simply uses `img[height]` and `img[width]` attributes to convey image size. We don't have any conversion for this.\r\n\r\nThen I'm pretty sure this will also be a problem for Drupal."", 'author': 'wimleers'}, {'body': 'I think, this may also be a related issue:\r\n\r\n* #11393\r\n', 'author': 'mmichaelis'}, {'body': 'This issue was solved with the #14146.', 'author': 'Witoso'}]","['type:bug', 'package:image', 'support:2', 'squad:core', 'resolution:resolved']",CLOSED,10838,[],"Editor doesn't preserve image size when pasting resized images from Google Docs ## 📝 Provide detailed reproduction steps (if any)

1.  Create sample document in Google Docs with resized image.
2.  Copy the image and paste it into editor.

### ✔️ Expected result

Pasted images has the same size as in Google Docs.

### ❌ Actual result

Image is pasted with its original size.

Image HTML has width/height attributes which doesn't seem to be taken into account when pasting:

```
<img src=""https://lh4.googleusercontent.com/APWThOWTll8I0A_cIYAEe-o69Ddbc-uul0YkfwnSVnhZp9GoRvtCENXG50sq6sx9A0nKMw7C64nju3IU0gyPd7Xg6YxfG2Ul3hn_nqsj7jEUoAXbMEaNERGVkagEa57zooZWr-6L"" width=""161"" height=""226"" style=""margin-left:0px;margin-top:0px;"" />
```

### ❓ Possible solution

_If you have ideas, you can list them here. Otherwise, you can delete this section._

## 📃 Other details

*   Browser: Any
*   OS: Any
*   First affected CKEditor version: N/A
*   Installed CKEditor plugins: Image

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",13,27
ckeditor,ckeditor5,Not able to select whole paragraph with triple click when there is a table right after it,"## 📝 Provide detailed reproduction steps (if any)

1. Add some text in paragraph
2. Add a table right after the paragraph
3. Triple click on the paragraph to select it

### ✔️ Expected result

Whole paragraph is selected.

### ❌ Actual result

Paragraph is not selected. Selection collapses and jumps to the beginning of the paragraph.

### Screencast


https://user-images.githubusercontent.com/34380544/149969165-4aad13d7-6d15-418b-be0d-0112ca44a3ab.mp4



## 📃 Other details

* First affected CKEditor version: `27.0.0`

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",FilipTokarski,['illia-stv'],"[{'body': 'Hi all, this is a serious bug in the core functionality and we would really appreciate this being solved asap. ', 'author': 'JasaNiklanovic'}, {'body': 'Possible fix or approach: inline fillers around widgets.\r\nWorkaround: ugly triple click listener -> select the whole block.', 'author': 'Witoso'}, {'body': ""Possible place to solve this as it's related to widgets: https://github.com/ckeditor/ckeditor5/blob/8d8a5730a5d40dae350d00d9605c3ab2c2df6e91/packages/ckeditor5-widget/src/widget.ts#L210-L221"", 'author': 'Witoso'}]","['type:bug', 'package:engine', 'support:2', 'squad:core']",CLOSED,11130,[],"Not able to select whole paragraph with triple click when there is a table right after it ## 📝 Provide detailed reproduction steps (if any)

1. Add some text in paragraph
2. Add a table right after the paragraph
3. Triple click on the paragraph to select it

### ✔️ Expected result

Whole paragraph is selected.

### ❌ Actual result

Paragraph is not selected. Selection collapses and jumps to the beginning of the paragraph.

### Screencast


https://user-images.githubusercontent.com/34380544/149969165-4aad13d7-6d15-418b-be0d-0112ca44a3ab.mp4



## 📃 Other details

* First affected CKEditor version: `27.0.0`

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",13,25
ckeditor,ckeditor5,[Conversion] Write down a summary of changes,"### Why

#10294 came with a large number of changes that are hard to discover without going really deep into the issue tracker.

Currently, the only place where we could send people is #11211.

### What

Let's write a blog-post-like (developer-oriented) summary of what has changed including:

*   The ""whys"" behind each of the change
*   The ""whats""

The idea is to make it digestible so we should:

*   Limit ourselves to what matters to people
*   Compile multiple smaller thoughts into topics (avoid explaining every single small change independently)",Reinmar,['dawidurbanski'],"[{'body': ""*   Option 1: For the time being, let's put this in the migration guide (to be done in #11188). Once the blog post is published, we'll remove this content from the migration guide and link to the blog post.\r\n*   **Option 2**: Write the summary here and link to this post from the Migration guide. The blog post may then take inspiration from this summary (but generalize shorten it even more).\r\n\r\n**Decision: Option 2.**"", 'author': 'Reinmar'}, {'body': 'Some ideas:\n* If possible, come up with examples that weren\'t possible before and now are much easier. Potentially, the ""before"" will need to be written in pseudo-code\n* We could link (or use) to some old examples in https://ckeditor.com/docs/ckeditor5/latest/framework/guides/deep-dive/conversion/element-reconversion.html.\n\nSome of the important new features:\n* Support for triggering an `e2E` converter based on attributes of the element – replaces multiple smaller converters (e2E + a2A or the case with `<hx>` based on `<heading level=x>`) and triggerBy.\n* The entire e2S. Previously required playing with doubled-binding between single model element and multiple view).', 'author': 'Reinmar'}, {'body': 'Draft of the document: (internal) https://www.notion.so/Summary-of-changes-in-the-reconversion-system-3ed675d4e18249b8a9ca9bce94dcb04c', 'author': 'dawidurbanski'}, {'body': '# Summary of changes\r\n\r\nTo see all changes in `v33.0.0` check the [migration guide](https://ckeditor.com/docs/ckeditor5/latest/builds/guides/migration/migration-to-33.html)\r\n\r\n# Downcast conversion helpers and API changes\r\n\r\n## New downcast conversion helper: `elementToStructure()`\r\n\r\nWe have found that in many cases you may want to create a single view element with one or many children elements (a structure) in one go.\r\n\r\nFor this purpose we introduced a new downcast conversion helper: `elementToStructure()`.\r\n\r\nPreviously you would probably use the `elementToElement()` conversion helper to perform this task like such:\r\n\r\n```jsx\r\n// Convert <horizontalLine> model element\r\n// into <div> <hr /> </div> structure.\r\neditor.conversion.for( \'dataDowncast\' ).elementToElement( {\r\n\tmodel: \'horizontalLine\',\r\n\tview: ( modelElement, { writer } ) => {\r\n\t\tconst viewWrapperElement = writer.createContainerElement( \'div\' );\r\n\t\tconst viewHrElement = writer.createEmptyElement( \'hr\' );\r\n\r\n\t\twriter.insert( writer.createPositionAt( viewWrapperElement, 0 ), viewHrElement );\r\n\t\t\t\t\r\n\t\treturn viewWrapperElement;\r\n\t}\r\n} );\r\n```\r\n\r\nCurrently this is discouraged and whenever possible you should use `elementToStructure()` instead.\r\n\r\nAdditionally we added an option to pass an array of children elements to `writer.createContainerElement()` in order to further simplify the process:\r\n\r\n```jsx\r\n// Convert <horizontalLine> model element\r\n// into <div> <hr /> </div> structure.\r\neditor.conversion.for( \'dataDowncast\' ).elementToStructure( {\r\n\tmodel: \'horizontalLine\',\r\n\tview: ( modelElement, { writer } ) => {\r\n\t\treturn writer.createContainerElement( \'div\', null, [\r\n\t\t\twriter.createEmptyElement( \'hr\' )\r\n\t\t] );\r\n\t}\r\n} );\r\n```\r\n\r\n## New, seamless reconversion mechanism\r\n\r\nThe reconversion API has been in beta for a while now. With CKEditor `33.0.0`, it finally reached the final state. There are some notable changes to it.\r\n\r\n### Removal of the `triggerBy` option\r\n\r\nStarting from CKEditor `23.1.0` you were able to replace a set of atomic converters (`elementToElement()` + `attributeToAttribute()`) with one converter handling any element + attributes combo using `triggerBy` option ([see more](https://ckeditor.com/docs/ckeditor5/latest/framework/guides/deep-dive/conversion/element-reconversion.html#enabling-element-reconversion)).\r\n\r\n```jsx\r\n// Convert <myElement type=""single"" ownerId=""1""> model element\r\n// into <div class=""my-element my-element-single"" data-owner-id=""1""></div>.\r\neditor.conversion.for( \'downcast\' ).elementToElement( {\r\n\tmodel: \'myElement\',\r\n\tview: ( modelElement, { writer } ) => {\r\n\t\treturn writer.createContainerElement( \'div\', {\r\n\t\t\t \'data-owner-id\': modelElement.getAttribute( \'ownerId\' ),\r\n\t\t\tclass: `my-element my-element-${ modelElement.getAttribute( \'type\' ) }`\r\n\t\t} );\r\n\t},\r\n\ttriggerBy: {\r\n\t\tattributes: [ \'ownerId\', \'type\' ]\r\n\t}\r\n} );\r\n```\r\n\r\nIn CKEditor `33.3.0` we changed this API and from now on you should use `attributes` property on a `model` instead.\r\n\r\n```jsx\r\n// Convert <myElement type=""single"" ownerId=""1""> model element\r\n// into <div class=""my-element my-element-single"" data-owner-id=""1""></div>.\r\neditor.conversion.for( \'downcast\' ).elementToElement( {\r\n\tmodel: {\r\n\t\tname: \'myElement\',\r\n\t\tattributes: [ \'ownerId\', \'type\' ]\r\n\t},\r\n\tview: ( modelElement, { writer } ) => {\r\n\t\treturn writer.createContainerElement( \'div\', {\r\n\t\t\t\'data-owner-id\': modelElement.getAttribute( \'ownerId\' ),\r\n\t\t\tclass: `my-element my-element-${ modelElement.getAttribute( \'type\' ) }`\r\n\t\t} );\r\n\t}\r\n} );\r\n```\r\n\r\nIn the above, the `<myElement>` model element will be reconverted every time either `ownerId` or `type` is updated.\r\n\r\nAdditionally you can react to changes in the element children using `children` property.\r\n\r\n```jsx\r\n// Convert <myElement><paragraph>A</paragraph></myElement> model element\r\n// into <div class=""my-element"" data-type=""single"">...</div>.\r\n// But if more paragraph are added like so:\r\n// <myElement><paragraph>A</paragraph><paragraph>B</paragraph></myElement>\r\n// then convert into <div class=""my-element"" data-type=""multiple"">...</div>.\r\neditor.conversion.for( \'downcast\' ).elementToElement( {\r\n\tmodel: {\r\n\t\tname: \'myElement\',\r\n\t\tchildren: true\r\n\t},\r\n\tview: ( modelElement, conversionApi ) => {\r\n\t\tconst { writer } = conversionApi;\r\n\r\n\t\treturn writer.createContainerElement( \'div\', {\r\n\t\t\tclass: \'my-element\',\r\n\t\t\t\'data-type\': modelElement.childCount == 1 ? \'single\' : \'multiple\'\r\n\t\t} );\r\n\t}\r\n} );\r\n```\r\n\r\nBoth `attributes` and `children` can be used together and are available in both `elementToElement()` and `elementToStructure()` conversion helpers.\r\n\r\n# The brand new slots API\r\n\r\nUntil now the “slots” concept was only briefly discussed (see: https://github.com/ckeditor/ckeditor5/issues/1589). With the addition of the `elementToStructure()` conversion helper it became apparent, that we need a proper slots API in place.\r\n\r\nSlots will allow you to place some view elements in one container element while putting some other element in another one.\r\n\r\nFor example:\r\n\r\n```jsx\r\neditor.conversion.for( \'dataDowncast\' ).elementToStructure( {\r\n\tmodel: {\r\n\t\tname: \'items\',\r\n\t\tattributes: [ \'highlightedItems\' ]\r\n\t},\r\n\tview: ( modelElement, { writer } ) => {\r\n\t\tconst highlightedItems = modelElement.getAttribute( \'highlightedItems\' ) || 0;\r\n\r\n\t\treturn writer.createContainerElement( \'div\', { class: \'items\' }, [\r\n\t\t\twriter.createContainerElement( \'div\', { class: \'highlighted\' }, [\r\n\t\t\t\twriter.createSlot( element => element.index < highlightedItems )\r\n\t\t\t] ),\r\n\t\t\twriter.createContainerElement( \'div\', null, [\r\n\t\t\t\twriter.createSlot( element => element.index >= highlightedItems )\r\n\t\t\t] )\r\n\t\t] );\r\n\t}\r\n} );\r\n```\r\n\r\nWill result in such conversion:\r\n\r\n```jsx\r\nModel:\r\n\r\n<items highlightedItems=""2"">\r\n\t<paragraph>One</paragraph>\r\n\t<paragraph>Two</paragraph>\r\n\t<paragraph>Three</paragraph>\r\n</items>\r\n\r\nTo View:\r\n\r\n<div class=""items"">\r\n\t<div class=""highlighted"">\r\n\t\t<p>One</p>\r\n\t\t<p>Two</p>\r\n\t</div>\r\n\t<div>\r\n\t\t<p>Three</p>\r\n\t</div>\r\n</div>\r\n```\r\n\r\n## Known issues\r\n\r\nThere is a problem when you try to put `$text` nodes directly inside slots. It has been raised and is tracked in https://github.com/ckeditor/ckeditor5/issues/11149.\r\n\r\nThe workaround for now is to use `elementToElement()` conversion helper to create multiple elements instead of `elementToStructure()`.\r\n\r\n# DowncastDispatcher API changes\r\n\r\n## Changes to the flow of events in the downcast pipeline\r\n\r\nThis change was driven by two main factors:\r\n\r\n- Converters using the new slots API will trigger events in a recursive way while in any other cases `DowncastDispatcher` will fire events in a flat structure, one by one,\r\n- The opposite `UpcastDispatcher` triggers events in the recursive way for all converters so we aim to unify both of them with this change.\r\n\r\nYou can read details about it in https://github.com/ckeditor/ckeditor5/issues/10376\r\n\r\n### Set of new methods used to control events flow\r\n\r\nWith this change converters can ask `DowncastDispatcher` to start converting children or attributes using the `conversionApi`\'s `convertItem()`,\xa0`convertChildren()` and\xa0`convertAttributes()` methods.\r\n\r\nThanks to this converters can control the flow of events.\r\n\r\n### **Implications of this change**\r\n\r\nIn most cases this should be transparent to developers but it may have some impact if you were cancelling events in this flow.\r\n\r\nLong story short, do not use `evt.stop()` inside conversion event listeners **unless you know what you are doing**.\r\n\r\n```jsx\r\neditor.conversion.for( \'dataDowncast\' ).add( dispatcher => {\r\n\treturn dispatcher.on( `attribute:xyz`, ( evt, data, conversionApi ) => {\r\n\t\t...\r\n\r\n\t\tevt.stop(); // ❌  DO NOT CANCEL EVENTS!\r\n\t} );\r\n} );\r\n```\r\n\r\n## Change `convertInsert()` to `convert()`\r\n\r\nThe aim was to make this API much cleaner and the `convert()` method can now convert markers as well, you don’t have to trigger it separately. It’s mostly used internally in our code so we won’t go into details about this one.\r\n\r\n## New error `conversion-model-consumable-not-consumed`\r\n\r\nWe’ve been seeing a numerous pesky issues caused by the fact that some elements in the converter were not consumed. This was very hard to debug and was causing other, unrelated converters to accidentally consume these previously unconsumed elements.\r\n\r\nI has been discussed multiple times in the past, mainly in https://github.com/ckeditor/ckeditor5/issues/3818 and we finally introduced `conversion-model-consumable-not-consumed` error in https://github.com/ckeditor/ckeditor5/issues/10377 which you can check for more info.\r\n\r\n❌  **What to avoid (notice no `consumable.consume` in the converter):**\r\n\r\n```jsx\r\neditor.conversion.for( \'dataDowncast\' ).add( dispatcher => {\r\n\treturn dispatcher.on( `attribute:xyz`, ( evt, data, conversionApi ) => {\r\n\t\tconst { item, attributeNewValue } = data;\r\n\t\tconst { mapper, writer } = conversionApi;\r\n\r\n\t\tif ( !conversionApi.consumable.test( item, evt.name ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst viewElement = mapper.toViewElement( item );\r\n\r\n\t\twriter.setStyle( \'xyz\', attributeNewValue, viewElement );\r\n\t} );\r\n} );\r\n```\r\n\r\n**✅\xa0 What to to instead:**\r\n\r\n```jsx\r\neditor.conversion.for( \'dataDowncast\' ).add( dispatcher => {\r\n\treturn dispatcher.on( `attribute:xyz`, ( evt, data, conversionApi ) => {\r\n\t\tconst { item, attributeNewValue } = data;\r\n\t\tconst { mapper, writer } = conversionApi;\r\n\t\t\r\n\t\t// ✅\xa0Consume item immediately when you check if consumable.\r\n\t\tif ( !conversionApi.consumable.consume( item, evt.name ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst viewElement = mapper.toViewElement( item );\r\n\r\n\t\twriter.setStyle( \'xyz\', attributeNewValue, viewElement );\r\n\t} );\r\n} );\r\n\r\n--- OR ---:\r\n\r\neditor.conversion.for( \'dataDowncast\' ).add( dispatcher => {\r\n\treturn dispatcher.on( `attribute:xyz`, ( evt, data, conversionApi ) => {\r\n\t\tconst { item, attributeNewValue } = data;\r\n\t\tconst { mapper, writer } = conversionApi;\r\n\t\t\r\n\t\tif ( !conversionApi.consumable.test( item, evt.name ) ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tconst viewElement = mapper.toViewElement( item );\r\n\r\n\t\twriter.setStyle( \'xyz\', attributeNewValue, viewElement );\r\n\r\n\t\t// ✅\xa0Consume item afterwards.\r\n\t\tconversionApi.consumable.consume( item, evt.name );\r\n\t} );\r\n} );\r\n```\r\n\r\n# EditingController API changes\r\n\r\n## New methods `reconvertItem()` and `reconvertMarker()`\r\n\r\nFor many reasons (very nicely explained in https://github.com/ckeditor/ckeditor5/issues/10659) we introduced these two new methods.\r\n\r\nWe need them mainly if something changed outside of the model or in a way that you need to manually trigger the reconversion.\r\n\r\nIt’s usually used in very complex cases so there’s very little change you may be affected by this change.', 'author': 'dawidurbanski'}]","['type:task', 'type:docs', 'package:engine', 'squad:core', 'release:blocker']",CLOSED,11268,[],"[Conversion] Write down a summary of changes ### Why

#10294 came with a large number of changes that are hard to discover without going really deep into the issue tracker.

Currently, the only place where we could send people is #11211.

### What

Let's write a blog-post-like (developer-oriented) summary of what has changed including:

*   The ""whys"" behind each of the change
*   The ""whats""

The idea is to make it digestible so we should:

*   Limit ourselves to what matters to people
*   Compile multiple smaller thoughts into topics (avoid explaining every single small change independently)",5,17
ckeditor,ckeditor5,Image plugin doesn't handle width/height in attributes,"## 📝 Provide detailed reproduction steps (if any)

Recently we have improved GHS to preserve image width and height attributes #9916 but the Image plugin itself doesn't seem to handle them. 

1.  Set GHS to allow everything. 
2.  Set editor data to this HTML `<p><img alt=""oracle"" height=""13"" src=""`[`https://upload.wikimedia.org/wikipedia/commons/5/50/Oracle_logo.svg`](https://upload.wikimedia.org/wikipedia/commons/5/50/Oracle_logo.svg)`"" width=""100"" /></p>`

### ✔️ Expected result

CKEditor displays image with proper width/height

### ❌ Actual result  
 

Editor sets style for width/height to 0 and values from attributes are not taken into account. 

![](https://user-images.githubusercontent.com/5314687/156570611-6b7f829c-2bba-41ee-b923-0a14cb8d71ee.png)

_What is the actual result of the above steps?_

### ❓ Possible solution

_If you have ideas, you can list them here. Otherwise, you can delete this section._

## 📃 Other details

*   Browser: Any
*   OS: Any
*   First affected CKEditor version: 1.0.0
*   Installed CKEditor plugins: image

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",jswiderski,[],"[{'body': ""This is very important especially nowadays with PageSpeed Insights and Chrome's Lighthouse (among other 3rd party tools) which rate web page metrics for performance and other things and punish sites' scores for CLS (content layout shifts).   An image without width and height attributes in 2023 is just completely outta the question.  I understand the removal of the dialog window that CKE4/CKFinder had which allowed for setting multiple image attributes; but the width and height should be just automatic or there needs to be some exposed API like an event to listen on when an image is added so the attributes can be added easily. [This was relatively easy to do in CKEditor 4](https://ckeditor.com/old/forums/CKEditor/Forcing-img-tag-to-use-width-and-height-attributes-instead-of-style) but appears overengineered in CK5 and so far I haven't found anything explaining on how to add a hook or something to add image attributes when an image is inserted into the editor.\r\n\r\nIf there is a way to do this can you guys at least explain how we can do it?"", 'author': 'jsfgreen'}, {'body': '@jsfgreen the effort to add those attributes on upload, as well as support the content that already has them, is in progress. We will soon share with the community options to test it out. You can also read #14146 for details.', 'author': 'Witoso'}, {'body': '@Witoso Oh ok thank you for the quick response!  Will #14146 also address images added by CKFinder?', 'author': 'jsfgreen'}, {'body': 'Yes, we will try to make it transparent and work out of the box for integrators :) cc: @mmotyczynska', 'author': 'Witoso'}, {'body': 'The implementation is close to completion, but we would love to hear some feedback. [The details are gathered in the comment.](https://github.com/ckeditor/ckeditor5/issues/14146#issuecomment-1632607316)', 'author': 'Witoso'}, {'body': '🎉 This feature was merged to the `master` and is available on the [nightly releases](https://github.com/ckeditor/ckeditor5/issues/14724) and [nightly docs](https://ckeditor5.github.io/docs/nightly/ckeditor5/latest/examples/builds-custom/full-featured-editor.html) to test.\r\n\r\n[In a comment in another issue](https://github.com/ckeditor/ckeditor5/issues/14146#issuecomment-1632607316), you can find more details about the changes.', 'author': 'Witoso'}]","['type:bug', 'package:image', 'support:2', 'resolution:resolved']",CLOSED,11393,[],"Image plugin doesn't handle width/height in attributes ## 📝 Provide detailed reproduction steps (if any)

Recently we have improved GHS to preserve image width and height attributes #9916 but the Image plugin itself doesn't seem to handle them. 

1.  Set GHS to allow everything. 
2.  Set editor data to this HTML `<p><img alt=""oracle"" height=""13"" src=""`[`https://upload.wikimedia.org/wikipedia/commons/5/50/Oracle_logo.svg`](https://upload.wikimedia.org/wikipedia/commons/5/50/Oracle_logo.svg)`"" width=""100"" /></p>`

### ✔️ Expected result

CKEditor displays image with proper width/height

### ❌ Actual result  
 

Editor sets style for width/height to 0 and values from attributes are not taken into account. 

![](https://user-images.githubusercontent.com/5314687/156570611-6b7f829c-2bba-41ee-b923-0a14cb8d71ee.png)

_What is the actual result of the above steps?_

### ❓ Possible solution

_If you have ideas, you can list them here. Otherwise, you can delete this section._

## 📃 Other details

*   Browser: Any
*   OS: Any
*   First affected CKEditor version: 1.0.0
*   Installed CKEditor plugins: image

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",14,27
ckeditor,ckeditor5,Migrate to beforeInput vol 2,"## 📝 Provide a description of the new feature

An epic for revival of #7462 and further work.

*   Feature branch: [`ck/epic/11438-migrate-to-beforeinput`](https://github.com/ckeditor/ckeditor5/tree/ck/epic/11438-migrate-to-beforeinput)
*   Draft PR: #11456

### ToC

*   #11448
*   #11626
*   #11636
*   #11736
*   #12058 
*   ckeditor/ckeditor5#11904
*   Post-MVP: #12425 

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.",oleq,"['oleq', 'niegowski']","[{'body': '@oleq Will this also address #2045? ', 'author': 'wimleers'}, {'body': 'In the tracking mode, how long will this problem take? Currently, it seriously affects the use', 'author': 'huzedong2015'}, {'body': ""Small status update as it's hard to track the current work based on our activity on GitHub.\r\n\r\n*   It seems that the entire effort will consist of 4 main parts:\r\n    1.  Migrating from mutation observer to `beforeInput`. This is done :white\\_check\\_mark:. \xa0But the outcome was: no IME support, no Android support.\r\n    2.  Bringing back IME support. This is currently on review in #12024 (update: it's merged now :white\\_check\\_mark:) but it was tested by dozens of users already and the feedback is great. We fixed most issues with IME that we had, including composing when using features like track changes. The snapshot of that work can be tested on [https://ckeditor5.github.io/misc/ime-snapshot-220610/ckeditor5/34.1.0/](https://ckeditor5.github.io/misc/ime-snapshot-220610/ckeditor5/34.1.0/)\r\n    3.  Bringing back acceptable Android support (it was never perfect so we don't aim at perfect from day one). This is where we are right now. There's huge research behind the scene to understand how to approach this. We're looking for quick wins here.\r\n    4.  Improving the implementation, especially for Android as the rest seems already really stable (as I mentioned – it was tested with dozens of users).\xa0\r\n*   Once we have the first 3 points parts done, we'll be ready to release the entire work. I feel that we're really close to this, but we're still looking at how to nail down the Android support. The foundation is really strong so I'm not afraid about that.\r\n*   If you want to test it now:\r\n    *   Check out the snapshot of the docs from June: [https://ckeditor5.github.io/misc/ime-snapshot-220610/ckeditor5/34.1.0/](https://ckeditor5.github.io/misc/ime-snapshot-220610/ckeditor5/34.1.0/)\r\n    *   If you want to build your own editor build on this work, see #12024. The latest work is currently on `ck/11438-beforeinput-ime-research-vol1.1` but once #12024 is merged it will be on `ck/epic/11438-migrate-to-beforeinput`."", 'author': 'Reinmar'}, {'body': ""> *   Check out the snapshot of the docs from June: https://ckeditor5.github.io/misc/ime-snapshot-220610/ckeditor5/34.1.0/\r\n\r\nIf you have any feedback, especially for CJK languages, we'll appreciate if you share it here. The earlier we know about something, the better :)"", 'author': 'Reinmar'}]","['type:feature', 'package:engine', 'package:typing', 'domain:typing/ime', 'Epic', 'squad:core', 'status:in-progress']",CLOSED,11438,['11904'],"Migrate to beforeInput vol 2 ## 📝 Provide a description of the new feature

An epic for revival of #7462 and further work.

*   Feature branch: [`ck/epic/11438-migrate-to-beforeinput`](https://github.com/ckeditor/ckeditor5/tree/ck/epic/11438-migrate-to-beforeinput)
*   Draft PR: #11456

### ToC

*   #11448
*   #11626
*   #11636
*   #11736
*   #12058 
*   ckeditor/ckeditor5#11904
*   Post-MVP: #12425 

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.",14,23
ckeditor,ckeditor5,[Style dropdpown] Style grid gets misaligned when two styles are in a row,"![image.png](https://images.zenhubusercontent.com/5db82ed39f933c00013cf856/f586da74-9be2-4e08-aa74-0ad612f6e299)

Solution should be simple and comes down to some flex property in CSS (probably `justify-content: start;`).",oleq,['oleq'],[],"['squad:core', 'package:style']",CLOSED,11575,[],"[Style dropdpown] Style grid gets misaligned when two styles are in a row ![image.png](https://images.zenhubusercontent.com/5db82ed39f933c00013cf856/f586da74-9be2-4e08-aa74-0ad612f6e299)

Solution should be simple and comes down to some flex property in CSS (probably `justify-content: start;`).",31,20
ckeditor,ckeditor5,[Style dropdown] Missing integration for block quotes,"![Screenshot 2022-04-07 at 10.21.06.png](https://images.zenhubusercontent.com/5db82ed39f933c00013cf856/b638e2ad-ee36-4de3-8c45-64098d475456)

It works in the upcast but the command (and the UI that works on top of it) does not allow for any interaction. I guess this could be more that just block quotes: AFAIR the command starts from `getSelectedBlocks()` which is shallow and does not include selection parents so this could spread to the nested editable > widget case and others.",oleq,[],"[{'body': 'I was going to report this one! 😄  Thanks for fixing it before I could 🤓 Thanks — linking here from https://www.drupal.org/project/drupal/issues/3222797#comment-14505686 _and_ from Drupal core code, to ensure we expand our test coverage once we update to a release of CKEditor 5 that includes this. 👍  ', 'author': 'wimleers'}]","['squad:core', 'package:style']",CLOSED,11576,[],"[Style dropdown] Missing integration for block quotes ![Screenshot 2022-04-07 at 10.21.06.png](https://images.zenhubusercontent.com/5db82ed39f933c00013cf856/b638e2ad-ee36-4de3-8c45-64098d475456)

It works in the upcast but the command (and the UI that works on top of it) does not allow for any interaction. I guess this could be more that just block quotes: AFAIR the command starts from `getSelectedBlocks()` which is shallow and does not include selection parents so this could spread to the nested editable > widget case and others.",31,20
ckeditor,ckeditor5,[Style dropdown] Missing integration with block widgets,"Pretty self-explanatory, it should be possible to apply and remove styles on block widgets.

Support for inline widgets is tracked in a separate issue #11584.",oleq,[],"[{'body': 'Being reported by the Drupal community over at https://www.drupal.org/forum/support/post-installation/2022-11-30/how-do-i-configure-the-styles-dropdown-in-ckeditor-5#comment-14808215', 'author': 'wimleers'}, {'body': ""Here's an issue with some additional info I discovered when trying to add / remove classes to a `<table>` tag that may be of some help: https://github.com/ckeditor/ckeditor5/issues/13208."", 'author': 'graber-1'}, {'body': 'DUP in #12441. You can find some valuable context in it.', 'author': 'Reinmar'}, {'body': '[In May](https://github.com/ckeditor/ckeditor5/issues/11574), we closed a significant iteration on Styles (integrating with tables, lists, etc.) As this issue is pretty generic, and we need more specific needs, I will close it.\r\n\r\nWe have an umbrella issue for further refinements: #14274. Open new issues (and link to them in the epic), and we’ll look into them. Thanks!', 'author': 'Witoso'}]","['support:2', 'squad:core', 'resolution:resolved', 'package:style']",CLOSED,11577,[],"[Style dropdown] Missing integration with block widgets Pretty self-explanatory, it should be possible to apply and remove styles on block widgets.

Support for inline widgets is tracked in a separate issue #11584.",17,28
ckeditor,ckeditor5,[Style dropdown] Incorrect style retained after creating a new paragraph,"## 📝 Provide detailed reproduction steps (if any)

1. Open style plugin manual test
2. Create a H1 heading and apply `Large heading` style
3. Press `Enter`

### ✔️ Expected result

A new paragraph with no style is created.

### ❌ Actual result

A new paragraph with `Large heading` style is created (although it's not possible to do it with the dropdown). You are not able to simply turn it off. You need to change paragraph to H1, turn off the style and again change H1 to paragraph.

### Screencast


https://user-images.githubusercontent.com/34380544/162154462-f4b5ed97-66b9-4dc2-971d-b107bd549c1b.mp4




---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",FilipTokarski,['filipsobol'],"[{'body': 'This will probably be resolved by #11606.', 'author': 'Reinmar'}, {'body': ""~~This will probably be resolved by #11606.~~ (we decided to fix it as below).\n\nHeading feature: splits, and changes it to paragraph, and let's clean all of the styles (integration of GHS with Headings)."", 'author': 'Witoso'}]","['type:bug', 'support:2', 'squad:core', 'package:style']",CLOSED,11578,[],"[Style dropdown] Incorrect style retained after creating a new paragraph ## 📝 Provide detailed reproduction steps (if any)

1. Open style plugin manual test
2. Create a H1 heading and apply `Large heading` style
3. Press `Enter`

### ✔️ Expected result

A new paragraph with no style is created.

### ❌ Actual result

A new paragraph with `Large heading` style is created (although it's not possible to do it with the dropdown). You are not able to simply turn it off. You need to change paragraph to H1, turn off the style and again change H1 to paragraph.

### Screencast


https://user-images.githubusercontent.com/34380544/162154462-f4b5ed97-66b9-4dc2-971d-b107bd549c1b.mp4




---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",1,20
ckeditor,ckeditor5,[Style dropdown] Confusing UX in the grid of styles,"Currently:

*   only those styles that can be applied in the current selection are enabled,
*   the rest is disabled

There are a few problems with this approach:

1.  The user must be aware that the ""Heading XYZ"" is not available because the selection is in a paragraph.
    *   This is wrong and will only bring frustration: we cannot expect this kind of knowledge from the users even though they could figure it out eventually.
    *   **Proposed solution A**: just like in desktop word processors, applying a style should rename the element in the model, for instance, if a paragraph is selected, clicking ""Heading XYZ"" should convert the paragraph into a heading and apply the style
        *   Risks
            *   Converting a paragraph into a table sounds weird (and vice-versa). Some cases may remain impossible but my point is that at least the majority of them should work like this.
            *   Converting a paragraph into a heading could mean that some paragraph content might not be allowed in a heading (by the schema) and could be damaged/removed. CKEditor 5 is not as permissive as desktop word processors in this matter so this must be thought through before we proceed.
2.  The list of styles gets bloated if only a few are available and the rest is disabled (sort of connected to 1.)
    *   Often you need to scroll and be very careful not to miss your applicable style among many inactive ones.
    *   **Proposed solution A**: Hide inactive styles.
        *   Risks:
            *   This is very bad for a11y (the UI becomes unpredictable). 
            *   This is also bad for people with muscle memory who expect the same thing to remain in the same place if they use the same style 100 times each day.
    *   **Proposed solution B**: Collapse inactive styles and display them at the end of the category.
        *   Risks: Probably the same risks as in A.
    *   **Proposed solution C**: A checkbox that would filter out inactive styles.
        *   Risks: Additional complexity to the UI.
3.  Whether styles are active or not, navigating 30+ of them could be very hard.
    *   Lots of scrolling every time you want to apply the 24th one + hard to tell one style from another if the visual difference is subtle.
    *   **Proposed solution A**: search input that would filter styles by name
        *   Risks: Bloats the UI. 
    *   **Proposed solution B:** a dedicated section with ""recently used"" styles.
        *   Risks: This will look weird when there are 5 styles in total (but OK when there are 30 of them).
    *   **Proposed solution C:** styles organized as a tree (+ maybe some way to collapse branches)
        *   Risks:
            *   Feels like using a sledgehammer to crack a nut, especially when there are just a few styles.
            *   Does not left much room to display previews (maybe this could be an alternative look of the dropdown then?)
                *   Or even better yet, this could become a styles sidebar (like comments, or track changes) and exist next to the standard dropdown. There would be enough place for a search input, recently used, and previews. A tool for advanced integrations.",oleq,[],"[{'body': '> 1. The user must be aware that the ""Heading XYZ"" is not available because the selection is in a paragraph.\r\n\r\n🤔  I though this was one of the pain points of `StylesCombo` in CKE4 that the CKE team wanted to avoid porting to CKE5? That\'s what the `Format` dropdown was for in CKE4. And it\'s what the `Heading` plugin in CKE5 does to a limited extent.\r\n\r\nI think it _is_ reasonable to expect that a paragraph is not a heading — first a paragraph must be converted to a heading, _then_ a heading style can be applied using `Style`. Is that really unreasonable?\r\n\r\n> 2. The list of styles gets bloated if only a few are available and the rest is disabled (sort of connected to 1.)\r\n\r\nProposed solution D: reduce the visual prominence/screen real estate of the unavailable styles. That way, the order remains the same, (keyboard) muscle memory remains applicable, but visual scanning is accelerated.\r\n\r\n> 3. Whether styles are active or not, navigating 30+ of them could be very hard.\r\n\r\nI think this is a premature problem to solve. Let\'s wait for people to run into this problem and optimize the UI for them _then_?\r\n\r\n', 'author': 'wimleers'}, {'body': '> I think it _is_ reasonable to expect that a paragraph is not a heading — first a paragraph must be converted to a heading, _then_ a heading style can be applied using `Style`. Is that really unreasonable?\r\n\r\nHonestly, I\'m also having second thoughts about it. On one hand, I think this would greatly improve the UX. On the other hand, this is another layer of complexity on top of what we already have. Maybe some sort of information as to why the particular style in unavailable would help? (a tooltip maybe)\xa0\r\n\r\n> Proposed solution D: reduce the visual prominence/screen real estate of the unavailable styles. That way, the order remains the same, (keyboard) muscle memory remains applicable, but visual scanning is accelerated\r\n\r\nThis makes sense 👍 But I identified two problems with this approach:\r\n\r\n1.  The first one comes down to 1.. How do we explain that some styles look like this and do that and the rest looks different and does nothing? The latter will probably lose previews to save space. Is this enough to drive the point home?\r\n2.  What the layout should look like?\xa0\r\n    1.  ATM we\'re having main categories (block vs text) as a two grids.\xa0\r\n    2.  This enhancement will bring active vs inactive sub-categories inside each main category.\xa0\r\n    3.  Also, inactive ones must look different to save space (posting the screenshot to bootstrap the creative process 🙂).\xa0\r\n\r\n![](https://user-images.githubusercontent.com/1099479/167405189-51f25427-a91c-4d27-b80d-4a8683071343.png)\r\n\r\nRemoving preview and changing height will create a weird layout (first row) and moving ""Large paragraph"" down to the next row will break the muscle memory patters. Also, this assumes that there\'s sorting enabled which will break the muscle memory patterns in the first place.\r\n\r\n![](https://user-images.githubusercontent.com/1099479/167407262-8c753dc0-ed47-4202-bd2e-889faaf5239a.png)\r\n\r\n> I think this is a premature problem to solve. Let\'s wait for people to run into this problem and optimize the UI for them _then_?\r\n\r\n👍', 'author': 'oleq'}, {'body': 'I\'m also cross-linking #11580 because I noticed that removing styles when multiple have been applied becomes a chore (click the dropdown, remove style A, click the dropdown, remove style B, ...).\xa0\r\n\r\n*   On one hand, we could stop hiding the dropdown when the style is applied and removed.\r\n    *   OTOH I suppose the majority of users will apply one style at a time and they expect the UI to hide.\r\n*   I think this may go beyond integration with the ""Remove formatting"" button (which is fine). We may need a dedicated UI in the style dropdown to get rid of all styles with a single click.', 'author': 'oleq'}]","['domain:ui/ux', 'support:2', 'squad:core', 'package:style']",OPEN,11579,[],"[Style dropdown] Confusing UX in the grid of styles Currently:

*   only those styles that can be applied in the current selection are enabled,
*   the rest is disabled

There are a few problems with this approach:

1.  The user must be aware that the ""Heading XYZ"" is not available because the selection is in a paragraph.
    *   This is wrong and will only bring frustration: we cannot expect this kind of knowledge from the users even though they could figure it out eventually.
    *   **Proposed solution A**: just like in desktop word processors, applying a style should rename the element in the model, for instance, if a paragraph is selected, clicking ""Heading XYZ"" should convert the paragraph into a heading and apply the style
        *   Risks
            *   Converting a paragraph into a table sounds weird (and vice-versa). Some cases may remain impossible but my point is that at least the majority of them should work like this.
            *   Converting a paragraph into a heading could mean that some paragraph content might not be allowed in a heading (by the schema) and could be damaged/removed. CKEditor 5 is not as permissive as desktop word processors in this matter so this must be thought through before we proceed.
2.  The list of styles gets bloated if only a few are available and the rest is disabled (sort of connected to 1.)
    *   Often you need to scroll and be very careful not to miss your applicable style among many inactive ones.
    *   **Proposed solution A**: Hide inactive styles.
        *   Risks:
            *   This is very bad for a11y (the UI becomes unpredictable). 
            *   This is also bad for people with muscle memory who expect the same thing to remain in the same place if they use the same style 100 times each day.
    *   **Proposed solution B**: Collapse inactive styles and display them at the end of the category.
        *   Risks: Probably the same risks as in A.
    *   **Proposed solution C**: A checkbox that would filter out inactive styles.
        *   Risks: Additional complexity to the UI.
3.  Whether styles are active or not, navigating 30+ of them could be very hard.
    *   Lots of scrolling every time you want to apply the 24th one + hard to tell one style from another if the visual difference is subtle.
    *   **Proposed solution A**: search input that would filter styles by name
        *   Risks: Bloats the UI. 
    *   **Proposed solution B:** a dedicated section with ""recently used"" styles.
        *   Risks: This will look weird when there are 5 styles in total (but OK when there are 30 of them).
    *   **Proposed solution C:** styles organized as a tree (+ maybe some way to collapse branches)
        *   Risks:
            *   Feels like using a sledgehammer to crack a nut, especially when there are just a few styles.
            *   Does not left much room to display previews (maybe this could be an alternative look of the dropdown then?)
                *   Or even better yet, this could become a styles sidebar (like comments, or track changes) and exist next to the standard dropdown. There would be enough place for a search input, recently used, and previews. A tool for advanced integrations.",5,28
ckeditor,ckeditor5,Remove format does not remove styles applied by style dropdown plugin,"## 📝 Provide detailed reproduction steps (if any)

1. Open style plugin manual test
2. Add some inline and block styles to the content
3. Try using `Remove format` button on various styled content

### ✔️ Expected result

`Remove format` button works at least on inline styles.

### ❌ Actual result

`Remove format` does nothing or is inactive.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",FilipTokarski,['filipsobol'],"[{'body': 'According to https://ckeditor.com/docs/ckeditor5/latest/features/remove-format.html, ""The remove format feature allows you to quickly remove any text formatting applied using inline HTML elements and CSS styles, like [basic text styles](https://ckeditor.com/docs/ckeditor5/latest/features/basic-styles.html) (bold, italic, etc.), [font family, size, and color](https://ckeditor.com/docs/ckeditor5/latest/features/font.html) and similar.""\r\n\r\nThat excludes block level elements (though I don\'t understand why we wouldn\'t want to also be able to remove styles from block level elements,  but that\'s another issue). \r\n\r\nIn my testing (which you can view in a screencast at https://loom.com/share/5a0add14f4bf443fae07dbbd15e7db34), styles do not get removed from `<span>` elements in certain scenarios, which are inline elements,  and should have their styles removed by this plugin. It isn\'t working as I believe it should, based on the plugin description. ', 'author': 'caspervoogt'}, {'body': 'I added a screencast showing this issue; https://loom.com/share/5a0add14f4bf443fae07dbbd15e7db34', 'author': 'caspervoogt'}, {'body': 'Also reported by @caspervoogt on `drupal.org`: https://www.drupal.org/project/drupal/issues/3321254', 'author': 'wimleers'}, {'body': 'Short workaround might help if use GHS plugin \r\n\r\n```\r\nconfig.htmlSupport = {\r\n    disallow: [\r\n        {\r\n            styles: false\r\n        }\r\n    ]\r\n};\r\n```\r\n', 'author': 'njsoftdev'}, {'body': 'Chiming in to add that, after pasting formatted text, clicking ""remove formatting"" does nothing - doesn\'t remove styles, links, any text decorations, etc.\r\n\r\nThis is a regression from CK4, where ""remove formatting"" didn\'t work great but removed at least *some* formatting.\r\n\r\n\r\n', 'author': 'aaronbauman'}, {'body': ""After some investigation, we noticed a simple solution that would allow us to fix it quickly but it comes with some quirks.\r\n\r\nWhen we implement the change, Remove Format will remove **all** attributes set on the elements it has selected. Classes, id's, data-*, styles. So it will result in data loss which may not be related to the format. But it will not differ from the behavior of CKEditor 4 which does exactly the same, as tested [here](https://ckeditor.com/docs/ckeditor4/latest/examples/acf.html). \r\n\r\nPotential Scope: Set `isFormatting: true` on all inline GHS elements to make Remove Format work.\r\n\r\n@Reinmar, thoughts?\r\n"", 'author': 'Witoso'}, {'body': 'Testing this on CKE4 is tricky because there are many aspects that distort the results.\r\n\r\nFirst of all, as you mentioned, this needs to be tested with ACF off. The ""Disabling ACF"" sample in [https://ckeditor.com/docs/ckeditor4/latest/examples/acf.html](https://ckeditor.com/docs/ckeditor4/latest/examples/acf.html) is ok.\r\n\r\nSecond, different types of elements may be treated differently.\r\n\r\nFinally, selection handling isn\'t always... intuitive.\r\n\r\n### Handling blocks\r\n\r\nLet\'s start with:\r\n\r\n```\r\n\r\n<p class=""bar"" data-foo=""1"" style=""color: blue"">aaa</p>\r\n<p class=""bar"" data-foo=""1"" style=""color: blue"">aaa</p>\r\n<p class=""bar"" data-foo=""1"" style=""color: blue"">aaa</p>\r\n```\r\n\r\nPress Ctrl+A and Remove format. Result:\r\n\r\n```\r\n\r\n<p class=""bar"" data-foo=""1"" style=""color: blue"">aaa</p>\r\n\r\n<p data-foo=""1"">aaa</p>\r\n\r\n<p data-foo=""1"">aaa</p>\r\n```\r\n\r\nThe first block wasn\'t discovered by CKE4 as ""fully selected"" and hence it was skipped. In other blocks, as you can see, the data attribute was retained. And this, to me, makes a lot of sense, because this isn\'t a formatting attribute.\r\n\r\n### Handling inline content\r\n\r\nInput:\r\n\r\n```\r\n<p>foo <span data-foo=1>xxx</span> bar</p>\r\n<p>foo <strong data-foo=1>xxx</strong> bar</p>\r\n<p>foo <a href=""#"" data-foo=1 class=bar style=""color:red"">xxx</a> bar</p>\r\n<p>foo <img src=""x"" data-foo=1 class=bar style=""color:red""> bar</p>\r\n```\r\n\r\nOutput:\r\n\r\n```\r\n<p>foo xxx bar</p>\r\n\r\n<p>foo xxx bar</p>\r\n\r\n<p>foo <a data-foo=""1"" href=""#"">xxx</a> bar</p>\r\n\r\n<p>foo <img data-foo=""1"" src=""x"" /> bar</p>\r\n```\r\n\r\n### Some more inspiration\r\n\r\nSee [https://github.com/ckeditor/ckeditor4/blob/master/plugins/removeformat/plugin.js#L166-L182](https://github.com/ckeditor/ckeditor4/blob/master/plugins/removeformat/plugin.js#L166-L182)\r\n\r\nI don\'t think that CKE4\'s remove format worked perfectly, but it definitely needs to be a bit smarter than it seems.\r\n\r\n### Remove format vs GHS\r\n\r\nTheoretically, when in doubt, Remove format may treat HTML content enabled via GHS as unwanted. However, this might lead to removing too much and breaking some content. So this is a tricky decision.\r\n\r\nI\'d avoid going ""all in"" too quickly. I\'d try with this:\r\n\r\n*   Remove classes and styles added via GHS.\r\n*   Remove all inline formatting enabled via GHS (inline elements that we store as text attributes).\r\n\r\nAnd then let\'s see how it works in real life.', 'author': 'Reinmar'}, {'body': 'Valid points, my proposal would be to push it quickly for inline elements first as a step forward in compatibility with CKE4, and then push the removal of the block styles to the later iterations as a topic that requires much more analysis and refinement.', 'author': 'Witoso'}, {'body': ""Scope v1:\n* Add `isFormatting: true` to all inline elements in GHS' `schemadefinitions.ts`, **except** `a` and **except** all   `$inlineObject`.\n* Edit docs to mention that Remove Format will remove all HTML attributes of inline elements if they appear in GHS integration.\n* Create a new issue for gathering interest in Remove Format for blocks."", 'author': 'Witoso'}, {'body': ""The remove format action for blocks will be tracked in #13983. Vote if it's something you're looking forward to.\r\n"", 'author': 'Witoso'}]","['type:bug', 'package:remove-format', 'squad:core', 'package:style']",CLOSED,11580,[],"Remove format does not remove styles applied by style dropdown plugin ## 📝 Provide detailed reproduction steps (if any)

1. Open style plugin manual test
2. Add some inline and block styles to the content
3. Try using `Remove format` button on various styled content

### ✔️ Expected result

`Remove format` button works at least on inline styles.

### ❌ Actual result

`Remove format` does nothing or is inactive.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",19,20
ckeditor,ckeditor5,[Style dropdown] Inline styles are not disabled in the code block,"## 📝 Provide detailed reproduction steps (if any)

1. Select some text inside a code block or place a caret inside a code block
2. Open styles dropdown
3. Apply any inline style

### ✔️ Expected result

Inline styles should be disabled there. 

### ❌ Actual result

Inline styles are enabled but not applied.
![2022-04-07 10 45 39](https://user-images.githubusercontent.com/1232187/162160024-e648415d-635e-482b-8c5a-e5e629c3b651.gif)

### ❓ Possible solution

Code block disables attributes on text inside it but the styles dropdown does not reflect it. 

## 📃 Other details

* Browser: …
* OS: …
* First affected CKEditor version: …
* Installed CKEditor plugins: …

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",niegowski,[],[],"['type:bug', 'squad:core', 'package:style']",CLOSED,11581,[],"[Style dropdown] Inline styles are not disabled in the code block ## 📝 Provide detailed reproduction steps (if any)

1. Select some text inside a code block or place a caret inside a code block
2. Open styles dropdown
3. Apply any inline style

### ✔️ Expected result

Inline styles should be disabled there. 

### ❌ Actual result

Inline styles are enabled but not applied.
![2022-04-07 10 45 39](https://user-images.githubusercontent.com/1232187/162160024-e648415d-635e-482b-8c5a-e5e629c3b651.gif)

### ❓ Possible solution

Code block disables attributes on text inside it but the styles dropdown does not reflect it. 

## 📃 Other details

* Browser: …
* OS: …
* First affected CKEditor version: …
* Installed CKEditor plugins: …

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",13,20
ckeditor,ckeditor5,[Style dropdown] Should apply block style to all selected blocks,"## 📝 Provide a description of the improvement

The style dropdown applies block style only to the first block but it should apply it to all selected blocks (for example as headings dropdown does).

## 📃 Other details

![2022-04-07 10 54 26](https://user-images.githubusercontent.com/1232187/162161307-6b134f5b-d412-494b-bb20-517e683e78f1.gif)

* Browser: …
* OS: …
* CKEditor version: …
* Installed CKEditor plugins: …

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",niegowski,[],"[{'body': 'Happening as well inside the table, and with multiple cells selected:\r\n\r\nhttps://user-images.githubusercontent.com/11699569/162171224-62b25aac-731b-45b9-b462-1564b8e46409.mp4\r\n\r\n\r\n', 'author': 'mateuszzagorski'}]","['type:improvement', 'squad:core', 'package:style']",CLOSED,11582,[],"[Style dropdown] Should apply block style to all selected blocks ## 📝 Provide a description of the improvement

The style dropdown applies block style only to the first block but it should apply it to all selected blocks (for example as headings dropdown does).

## 📃 Other details

![2022-04-07 10 54 26](https://user-images.githubusercontent.com/1232187/162161307-6b134f5b-d412-494b-bb20-517e683e78f1.gif)

* Browser: …
* OS: …
* CKEditor version: …
* Installed CKEditor plugins: …

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",13,20
ckeditor,ckeditor5,[Style dropdown] Inline style can't be removed from an inline widget itself,"## 📝 Provide detailed reproduction steps (if any)

![2022-04-07 11 05 43](https://user-images.githubusercontent.com/1232187/162163571-39b6600c-8d01-4b2e-ab88-9c7a75b48d08.gif)

### ✔️ Expected result

Should be possible to wrap inline widgets same as text (it's all wrapped with a dedicated AttributeElement).

### ❌ Actual result

You can set inline style when more than just an image is selected, but you can't modify inline style while an inline widget is selected itself.

### ❓ Possible solution

Blocking of styles should be only for block styles, inline styles should be enabled if allowed by the schema.

## 📃 Other details

* Browser: …
* OS: …
* First affected CKEditor version: …
* Installed CKEditor plugins: …

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",niegowski,[],[],"['type:bug', 'squad:core', 'package:style']",CLOSED,11584,[],"[Style dropdown] Inline style can't be removed from an inline widget itself ## 📝 Provide detailed reproduction steps (if any)

![2022-04-07 11 05 43](https://user-images.githubusercontent.com/1232187/162163571-39b6600c-8d01-4b2e-ab88-9c7a75b48d08.gif)

### ✔️ Expected result

Should be possible to wrap inline widgets same as text (it's all wrapped with a dedicated AttributeElement).

### ❌ Actual result

You can set inline style when more than just an image is selected, but you can't modify inline style while an inline widget is selected itself.

### ❓ Possible solution

Blocking of styles should be only for block styles, inline styles should be enabled if allowed by the schema.

## 📃 Other details

* Browser: …
* OS: …
* First affected CKEditor version: …
* Installed CKEditor plugins: …

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",13,20
ckeditor,ckeditor5,[Style dropdown] Block style applied to the block before a block widget,"## 📝 Provide detailed reproduction steps (if any)

![2022-04-07 11 15 16](https://user-images.githubusercontent.com/1232187/162165417-1e513efd-80a5-44f4-81f7-7e80bcce4499.gif)

### ✔️ Expected result

Only blocks that are visually selected should be affected.

### ❌ Actual result

A block before a block widget gets the style.

### ❓ Possible solution



## 📃 Other details

* Browser: …
* OS: …
* First affected CKEditor version: …
* Installed CKEditor plugins: …

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",niegowski,['filipsobol'],"[{'body': 'This seems to be consistent with the behavior of other block operations.\r\n\r\nIf we select the last paragraph, the image, and the end of the heading, as in the GIF above, the style, quote, and code block operations **will affect the heading block**.\r\nHowever, if we select only the last paragraph and image, the style and code block operations are disabled, and the quote operation **will not affect the heading block**.\r\n\r\nSee this video where I first select only the last paragraph and image, and then also the end of the heading.\r\n\r\n\r\nhttps://user-images.githubusercontent.com/4145208/229166084-b65047e9-9280-4106-b875-b5333f3e4517.mp4\r\n', 'author': 'filipsobol'}, {'body': 'Good find @filipsobol! I just want to share another recording that may better show where the problem is, and why it may be confusing for the user:\r\n\r\nhttps://user-images.githubusercontent.com/9881379/229437817-3f904c2d-4eb5-4b3d-a3cc-2529ba5304d3.mov\r\n\r\nNotice that as a user I only slightly raise my selection above the paragraph. My expectation is I select part of the paragraph, and the image. But this small selection (user\'s perspective), selects heading as well. It\'s even more visible if you have an empty paragraph. Users may have the intuition, ""I only select what\'s on the level of my cursor"", and unfortunately we break this pattern here.\r\n\r\nNot sure where the problem lies but it\'s still there.', 'author': 'Witoso'}, {'body': 'Other editors have better visual indications when end of the block is selected.\r\n\r\nWord:\r\nhttps://user-images.githubusercontent.com/4145208/229442680-9c895652-0b1b-473f-95f7-b4219fb972b7.mp4\r\n\r\nGoogle docs:\r\nhttps://user-images.githubusercontent.com/4145208/229442759-fd66d178-ef6b-4365-85b2-809eddb0f815.mp4\r\n\r\n\r\n', 'author': 'filipsobol'}, {'body': ""We decided to ignore the first selected block if the selection starts at the end of that block:\r\n\r\n```xml\r\n<paragraph>a[</paragraph> // This block should be ignored\r\n<paragraph>b</paragraph>\r\n<paragraph>c]</paragraph>\r\n```\r\n\r\nThere should be an exception if this block is empty. Such blocks are still treated as selected:\r\n\r\n```xml\r\n<paragraph>[</paragraph> // Selection starting at the beginning of the empty block counts\r\n<paragraph>b</paragraph>\r\n<paragraph>c]</paragraph>\r\n```\r\n\r\nWe already ignore the last selected block if the selection ends at the beginning of that block:\r\n\r\n```xml\r\n<paragraph>[a</paragraph>\r\n<paragraph>b</paragraph>\r\n<paragraph>]c</paragraph> // This selection is ignored\r\n```\r\n\r\nHowever, it doesn't have the above exception, i.e. if the last block is empty, it will NOT be selected:\r\n\r\n```xml\r\n<paragraph>[a</paragraph>\r\n<paragraph>b</paragraph>\r\n<paragraph>]</paragraph> // This selection is ignored\r\n```\r\n\r\nTo have consistent behavior, we will improve the handling for this so that the empty blocks are selected in both cases."", 'author': 'filipsobol'}, {'body': ""> There should be an exception if this block is empty. Such blocks are still treated as selected:\r\n\r\nI'm a bit worried about this one. And not sure if I understand it well.\r\n\r\n```\r\n<heading2>[</heading2> // Selection starting at the beginning of the empty block counts\r\n<imageBlock></imageBlock>\r\n<paragraph>c]</paragraph>\r\n```\r\n\r\nBut this case in style dropdown will be also confusing. It will be more visible (I will see a highlight of the selection) but the selection will still be applied when I move the cursor just above the paragraph. Right?\r\n\r\n![image](https://user-images.githubusercontent.com/9881379/229530220-f416a64c-aaba-4dc8-8a1b-c29e47b9bb92.png)\r\n"", 'author': 'Witoso'}, {'body': ""Yes, currently that's the case. Interestingly, it happens on Chrome, but not in Firefox.\r\n\r\n\r\nhttps://user-images.githubusercontent.com/4145208/229535000-03277892-476e-4dc3-9495-aa14791e36da.mp4"", 'author': 'filipsobol'}]","['type:bug', 'squad:core', 'package:style']",CLOSED,11585,[],"[Style dropdown] Block style applied to the block before a block widget ## 📝 Provide detailed reproduction steps (if any)

![2022-04-07 11 15 16](https://user-images.githubusercontent.com/1232187/162165417-1e513efd-80a5-44f4-81f7-7e80bcce4499.gif)

### ✔️ Expected result

Only blocks that are visually selected should be affected.

### ❌ Actual result

A block before a block widget gets the style.

### ❓ Possible solution



## 📃 Other details

* Browser: …
* OS: …
* First affected CKEditor version: …
* Installed CKEditor plugins: …

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",13,20
ckeditor,ckeditor5,"[Style dropdown] Inline style can't be removed after adding any paragraph styling (e.g. highlight, bold, italic)","## 📝 Provide detailed reproduction steps (if any)


https://user-images.githubusercontent.com/11699569/162178693-4973d7cc-6d1c-41c3-985f-21e58c91af1f.mp4



### ✔️ Expected result

_Should be possible to remove `marker` from the selected text_

### ❌ Actual result

_Marker can't be removed, unless you remove the highlight/bold/italic etc. first_

---

📃 Other details

- If you do it the other way around (add highlight/bold/italic etc. to text first, and after that marker on part of the text) - there is no problem as described/shown above.


If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",mateuszzagorski,['niegowski'],"[{'body': 'The issue applies to any paragraph styling. After applying e.g. bold to text you are not able to unselect any of the previously chosen styles from the style dropdown. ', 'author': 'dufipl'}]","['type:bug', 'squad:core', 'package:style']",CLOSED,11588,[],"[Style dropdown] Inline style can't be removed after adding any paragraph styling (e.g. highlight, bold, italic) ## 📝 Provide detailed reproduction steps (if any)


https://user-images.githubusercontent.com/11699569/162178693-4973d7cc-6d1c-41c3-985f-21e58c91af1f.mp4



### ✔️ Expected result

_Should be possible to remove `marker` from the selected text_

### ❌ Actual result

_Marker can't be removed, unless you remove the highlight/bold/italic etc. first_

---

📃 Other details

- If you do it the other way around (add highlight/bold/italic etc. to text first, and after that marker on part of the text) - there is no problem as described/shown above.


If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",1,20
ckeditor,ckeditor5,[Style dropdown] Integration with document (advanced) lists,"## 📝 Provide a description of the new feature

Document (advanced) lists use different model attribute names than the default `htmlAttributes`. This is why the styles feature (command) does not interact with them. A dedicated integration is necessary.

**(edited by @Witoso, 30.03.2022)**

Acceptance criteria:
* given I have Document lists plugin and the style definition of `ol`, when I'm in a list item, or select multiple list items or multiple lists, and select the style, then style should be applied to one (or more) `ol` elements.
* given I have Document lists plugin and the style definition of `ul`, when I'm in a list item, or select multiple list items or multiple lists, and select the style, then style should be applied to one (or more) `ul` elements.
* given I have Document lists plugin and the style definition of `li`, when I'm in a list item, or select multiple list items or multiple lists, and select the style, then style should be applied to one (or more) `li` elements.


---

If you'd like to see this feature implemented, add a 👍 reaction to this post.",oleq,['niegowski'],"[{'body': 'Related: https://github.com/ckeditor/ckeditor5/issues/12668\n', 'author': 'Witoso'}]","['type:feature', 'package:list', 'support:2', 'squad:core', 'package:style']",CLOSED,11590,[],"[Style dropdown] Integration with document (advanced) lists ## 📝 Provide a description of the new feature

Document (advanced) lists use different model attribute names than the default `htmlAttributes`. This is why the styles feature (command) does not interact with them. A dedicated integration is necessary.

**(edited by @Witoso, 30.03.2022)**

Acceptance criteria:
* given I have Document lists plugin and the style definition of `ol`, when I'm in a list item, or select multiple list items or multiple lists, and select the style, then style should be applied to one (or more) `ol` elements.
* given I have Document lists plugin and the style definition of `ul`, when I'm in a list item, or select multiple list items or multiple lists, and select the style, then style should be applied to one (or more) `ul` elements.
* given I have Document lists plugin and the style definition of `li`, when I'm in a list item, or select multiple list items or multiple lists, and select the style, then style should be applied to one (or more) `li` elements.


---

If you'd like to see this feature implemented, add a 👍 reaction to this post.",5,20
ckeditor,ckeditor5,"[Style dropdown] Inline styles retained when changing heading, inserting codeblock","## 📝 Provide detailed reproduction steps (if any)

Changing heading:

https://user-images.githubusercontent.com/11699569/162199263-c12ecc9f-a9e9-4684-b792-7ac24e785a65.mov

Inserting codeblock:

https://user-images.githubusercontent.com/11699569/162199797-3b6465a4-9074-4d2e-9ece-5bd82c45bb35.mov


### ✔️ Expected result

I'd expect that by changing the heading/inserting codeblock:
1. All of the added htmlAttributes will be removed.
2. At least all of the htmlAttributes that cant be unchecked should be removed.

### ❌ Actual result

All of the htmlAttributes added are available, even though there is no way of removing them.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",mateuszzagorski,[],"[{'body': 'This will probably be resolved by #11606.', 'author': 'Reinmar'}, {'body': 'Solved by: https://github.com/ckeditor/ckeditor5/issues/14216.', 'author': 'Witoso'}]","['type:bug', 'squad:core', 'package:style']",CLOSED,11591,[],"[Style dropdown] Inline styles retained when changing heading, inserting codeblock ## 📝 Provide detailed reproduction steps (if any)

Changing heading:

https://user-images.githubusercontent.com/11699569/162199263-c12ecc9f-a9e9-4684-b792-7ac24e785a65.mov

Inserting codeblock:

https://user-images.githubusercontent.com/11699569/162199797-3b6465a4-9074-4d2e-9ece-5bd82c45bb35.mov


### ✔️ Expected result

I'd expect that by changing the heading/inserting codeblock:
1. All of the added htmlAttributes will be removed.
2. At least all of the htmlAttributes that cant be unchecked should be removed.

### ❌ Actual result

All of the htmlAttributes added are available, even though there is no way of removing them.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",0,28
ckeditor,ckeditor5,[Style dropdown][GHS] Clean up disallowed attributes upon editing,"Based on a scenario from #11578, it's visible that GHS's attributes should be cleared from elements on which they are not allowed.",Reinmar,"['niegowski', 'arkflpc']","[{'body': 'Another scenario: #11591', 'author': 'Reinmar'}, {'body': ""For now, let's only handle style dropdown cases for blocks. "", 'author': 'Witoso'}, {'body': 'When I think about it the reason to prioritize this is the actions we took to improve Style dropdown. We will have more blocks that could be styled, e.g. tables, and lists, therefor the issue may appear more and more often.', 'author': 'Witoso'}, {'body': 'I _think_ that this is this same bug being reported in Drupal: https://www.drupal.org/project/drupal/issues/3326261#comment-15061287.', 'author': 'wimleers'}, {'body': 'Yes, looks like it. @niegowski will we probably need to take a second look at this, we had a good intuition it might occur more often. ', 'author': 'Witoso'}, {'body': 'Create a ul list:\r\n ![image](https://github.com/ckeditor/ckeditor5/assets/9881379/e8a7dc20-1521-4bd9-8dbe-3094b62585d2)\r\n\r\nCreata an ol list:\r\n![image](https://github.com/ckeditor/ckeditor5/assets/9881379/3a62a41a-c6a0-4353-b3a0-bb72f8042113)\r\n', 'author': 'Witoso'}, {'body': 'Another case for lists: https://github.com/ckeditor/ckeditor5/issues/14216', 'author': 'Witoso'}, {'body': 'All cases were solved by the PRs in https://github.com/ckeditor/ckeditor5/issues/14216. Closing.', 'author': 'Witoso'}]","['type:task', 'squad:core', 'package:html-support', 'package:style']",CLOSED,11606,[],"[Style dropdown][GHS] Clean up disallowed attributes upon editing Based on a scenario from #11578, it's visible that GHS's attributes should be cleared from elements on which they are not allowed.",17,28
ckeditor,ckeditor5,[Style dropdown] Refactor the command,"Clean up after rapid development of this feature at the end of the last sprint.

Let's also spend ~20% of the time on improving the test suite for it.",Reinmar,['niegowski'],"[{'body': 'I started refactoring it in the https://github.com/ckeditor/ckeditor5/tree/ck/11574-refactor branch.', 'author': 'niegowski'}]","['type:task', 'squad:core', 'package:style']",CLOSED,11607,[],"[Style dropdown] Refactor the command Clean up after rapid development of this feature at the end of the last sprint.

Let's also spend ~20% of the time on improving the test suite for it.",10,20
ckeditor,ckeditor5,Document lists plugin not allow to-do lists?,"I am testing the document list but i get error of listEditing conflict (loaded from another plugin)  
its loaded from todolist plugin, so i dont know if its bug or its not support right now to work with todolist

i see there is closed issue about this #10812  
""Error when loading DocLists and PlainLists/ToDoList/PlainListStyle together""

---

If you'd like to see this fixed sooner, add a :+1: reaction to this post.",kuku711,[],"[{'body': 'For now, the new Document List plugin does not support to-do list. So you can either use the old list plugin with to-do lists or the new one without.', 'author': 'Reinmar'}, {'body': '> For now, the new Document List plugin does not support to-do list. So you can either use the old list plugin with to-do lists or the new one without.\r\n\r\nIs it expected when the change will be ? we cant decide if give up the todo list or the document list.. we need both of them 😁', 'author': 'kuku711'}, {'body': '> > For now, the new Document List plugin does not support to-do list. So you can either use the old list plugin with to-do lists or the new one without.\r\n> \r\n> Is it expected when the change will be ? we cant decide if give up the todo list or the document list.. we need both of them 😁\r\n\r\nNo ETA yet. But definitely unlikely in the next 2-4 months.', 'author': 'Reinmar'}, {'body': 'Any update on this? This is blocking our adoption of document lists', 'author': 'glynam1'}, {'body': 'Bump on this, we are dealing with this same issue. We want to use the Todo lists plugin but DocumentList plugin is required for import from word/collaboration so we have to use documentlist and it clashes with the list plugin. Would really like to see this addressed.', 'author': 'jc-harbour'}, {'body': ""Wanted to mention that using DocumentList fixes a Chrome cursor bug https://github.com/ckeditor/ckeditor5/issues/8961 but we can't transition to DocumentList because we are also using TodoList. :("", 'author': 'Macrofig'}, {'body': '@Macrofig thanks for the info, noted! Todos is something we plan to bring to document lists relatively soon, so we will keep you posted.', 'author': 'Witoso'}, {'body': ""Any ETA for this issue? DocumentList fixes bugs for our editor, but we can't use yet since we have TodoList active. "", 'author': 'NicholasJarr'}, {'body': ""We don't have an exact ETA right now but it's quite high on our priority list."", 'author': 'Witoso'}, {'body': 'Refinement notes:\r\n\r\n*   We need to do a PoC.\r\n*   Having a separate element in a model for todo type?\r\n*   Could it be a starting point for mutli-list (e.g, `1.1.2`)?\r\n*   Todo in lists implemented as input.', 'author': 'Witoso'}, {'body': 'The ticket for PoC: #14663.', 'author': 'arkflpc'}, {'body': 'To-do lists for `DocumentList` plugin landed on `master`.\r\nClosing issue: https://github.com/ckeditor/ckeditor5/issues/14663', 'author': 'Witoso'}]","['type:feature', 'package:list', 'support:2', 'squad:core', 'resolution:resolved']",CLOSED,11620,[],"Document lists plugin not allow to-do lists? I am testing the document list but i get error of listEditing conflict (loaded from another plugin)  
its loaded from todolist plugin, so i dont know if its bug or its not support right now to work with todolist

i see there is closed issue about this #10812  
""Error when loading DocLists and PlainLists/ToDoList/PlainListStyle together""

---

If you'd like to see this fixed sooner, add a :+1: reaction to this post.",29,29
ckeditor,ckeditor5,"[Style dropdown] `<a>` text style can be applied to any text node, instead of only `<a>` elements","## 📝 Provide detailed reproduction steps (if any)

1. Configure `Style` to set a class on a link: 
```
{name: ""Reliable source"", element: ""a"", classes: [""reliable""]}
```
2. Edit content like this:
```
<p>Hello world.</p>
```
3. Click on the paragraph

### ✔️ Expected result

The `Reliable source` style is not available (`aria-disabled=""true""`).

### ❌ Actual result

1. It _is_ available:
![Screenshot 2022-05-05 at 15 36 55](https://user-images.githubusercontent.com/14240/166939052-1a8ba92a-54c4-41bc-855c-cf2bf7f9502b.png)

2. It generates invalid markup, like so: 
```
<p><a class=""reliable"">Hello world.</a></p>
```
![Screenshot 2022-05-05 at 15 36 51](https://user-images.githubusercontent.com/14240/166939092-589005f6-108d-405d-a6bb-5bffc4e3b1f3.png)


### ❓ Possible solution

_If you have ideas, you can list them here. Otherwise, you can delete this section._

## 📃 Other details

* Browser: N/A
* OS: N/A
* First affected CKEditor version: `34.0.0`
* Installed CKEditor plugins: `Style`

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",wimleers,['niegowski'],"[{'body': 'Discovered while working on the functional JS test coverage for Drupal: https://www.drupal.org/project/drupal/issues/3222797#comment-14505463.', 'author': 'wimleers'}, {'body': ""Another interesting behavior that I've observed is that if you select some text then apply a style with `<a>` as its defined element it wraps the selected text in an anchor tag without an `href` attribute as already described. Without deselecting the text, if you then click the link button and provide a URL to link to, after doing this whenever you click inside the link text the usual link bubble showing the URL and allowing you to edit the link does not appear in the editor.\r\n\r\nHowever, if you perform those steps in the opposite order (i.e. create a link first and then apply the style) the link bubble does appear as expected when the link text is clicked. Interestingly, either order of operations results in the exact same HTML being applied to the text."", 'author': 'RichardDavies'}, {'body': ""We decided that the `a` element will be treated as an object (reference how CKE4 called it). This means it will behave differently than other inline elements in the Style dropdown:\r\n* You will not be able to apply `a` style to other elements, like `p`. It will not rename the element. The reasoning behind it is that you almost never want to create an `a` without a link.\r\n* When you will have a cursor inside already present `a`, the Style dropdown should apply the class to the element you're in, not create an empty one that allows you to type in a new style as it's happening right now."", 'author': 'Witoso'}, {'body': 'Cases:\n* collapsed: we know what to do.\n* ranges with more than one link (tricky). Decision based on how we handle block right now:\n  * enabled: at least one link.\n  * active: similar behavior as a block (first applicable decides).\n', 'author': 'Witoso'}, {'body': '🥳 ', 'author': 'wimleers'}]","['type:bug', 'support:2', 'squad:core', 'package:style']",CLOSED,11709,[],"[Style dropdown] `<a>` text style can be applied to any text node, instead of only `<a>` elements ## 📝 Provide detailed reproduction steps (if any)

1. Configure `Style` to set a class on a link: 
```
{name: ""Reliable source"", element: ""a"", classes: [""reliable""]}
```
2. Edit content like this:
```
<p>Hello world.</p>
```
3. Click on the paragraph

### ✔️ Expected result

The `Reliable source` style is not available (`aria-disabled=""true""`).

### ❌ Actual result

1. It _is_ available:
![Screenshot 2022-05-05 at 15 36 55](https://user-images.githubusercontent.com/14240/166939052-1a8ba92a-54c4-41bc-855c-cf2bf7f9502b.png)

2. It generates invalid markup, like so: 
```
<p><a class=""reliable"">Hello world.</a></p>
```
![Screenshot 2022-05-05 at 15 36 51](https://user-images.githubusercontent.com/14240/166939092-589005f6-108d-405d-a6bb-5bffc4e3b1f3.png)


### ❓ Possible solution

_If you have ideas, you can list them here. Otherwise, you can delete this section._

## 📃 Other details

* Browser: N/A
* OS: N/A
* First affected CKEditor version: `34.0.0`
* Installed CKEditor plugins: `Style`

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",8,20
ckeditor,ckeditor5,[TS] Revise code style guide to cover TypeScript,"We need to revise [Code style](https://ckeditor.com/docs/ckeditor5/latest/framework/guides/contributing/code-style.html) to cover TypeScript features.

It'd also be a good idea to write here tips & tricks that we learn while porting the code.

 Part of #11708.
",arkflpc,[],"[{'body': 'To follow up with some team brainstorming.', 'author': 'Witoso'}, {'body': ""Draft of scope:\r\n- Review current examples\r\n- Add new rules from esLint\r\n- Module import formatting\r\n- Accessibility\r\n- Mixins\r\n- Creating read-only properties\r\n\r\nIf a decision needs to be made, write in draft possible solutions, and let's discuss them on the team level.\r\n"", 'author': 'arkflpc'}]","['type:docs', 'squad:core', 'domain:ts']",OPEN,11723,[],"[TS] Revise code style guide to cover TypeScript We need to revise [Code style](https://ckeditor.com/docs/ckeditor5/latest/framework/guides/contributing/code-style.html) to cover TypeScript features.

It'd also be a good idea to write here tips & tricks that we learn while porting the code.

 Part of #11708.
",6,22
ckeditor,ckeditor5,Style command should check if the classes overlap with other active styles while removing,"## 📝 Provide detailed reproduction steps (if any)

1.  Open the styles guide.
2.  Apply a bright code block style (added `.fancy-code.fancy-code-bright`).
3.  Apply a dark code block style (there's no exclusive styles support yet), (added `.fancy-code.fancy-code-dark`).
4.  Remove the bright code block style.

### ✔️ Expected result

The code block is dark.

### ❌ Actual result

It's neither bright or dark. 

Removing the bright code style removed both `.fancy-code.fancy-code-bright`. Only `.fancy-code-dark` is left.

### ❓ Possible solution

When removing, style command should check if the classes overlap with other active styles. If another style was also applied that shares the same class, the class should be preserved.",oleq,['filipsobol'],"[{'body': 'This is really irritating, especially, as it is part of [the official documentation](https://ckeditor.com/docs/ckeditor5/35.2.1/features/style.html) of the feature. While the possible solution is preferred, this solution may become rather complex. Just think of a third style just applying `.fancy-code` without any darkness/brightness? Could be used to express: Take darkness/brightness from the system preferences instead.\r\n\r\nFor a quick calm on this, this behavior should be documented and possibly removed from the example.\r\n\r\nSome other idea, I veto in the end:\r\n\r\nOr perhaps an even better approach: We could provide some contract of ""exclusive"" selection, which we currently miss.\r\n\r\nLet\'s repeat the configuration:\r\n\r\n```javascript\r\n{\r\n  name: \'Code (dark)\',\r\n  element: \'pre\',\r\n  classes: [ \'fancy-code\', \'fancy-code-dark\' ]\r\n},\r\n{\r\n  name: \'Code (bright)\',\r\n  element: \'pre\',\r\n  classes: [ \'fancy-code\', \'fancy-code-bright\' ]\r\n}\r\n```\r\n\r\nIn this case, it seems obvious, that only one (or none) of them should be enabled. Thus, such duplicate classes could implicitly be used to express a grouping behavior (disable the previous, if selecting the new).\r\n\r\nIn the end, any magic, any allowed class overlaps cannot easily be resolved by CKEditor and should instead be left to the users of CKEditor to design such classes knowing the limitations.', 'author': 'mmichaelis'}, {'body': 'The OP example may be a bit confusing as it shows adding two styles that are actually exclusive. But a user may make this error by mistake, and correcting it (turning off one style), should result in proper styling.\n\nAnother example where this error would be troublesome is when someone uses Tailwind CSS that is not using semantic class names, and classes tend to duplicate quite a lot.', 'author': 'Witoso'}, {'body': 'Acceptance criteria:\n* given I applied two styles from the dropdown and those styles overlapping classes when I remove one style, then the overlapping classes stay on the element.', 'author': 'Witoso'}]","['type:bug', 'support:2', 'squad:core', 'package:style']",CLOSED,11748,[],"Style command should check if the classes overlap with other active styles while removing ## 📝 Provide detailed reproduction steps (if any)

1.  Open the styles guide.
2.  Apply a bright code block style (added `.fancy-code.fancy-code-bright`).
3.  Apply a dark code block style (there's no exclusive styles support yet), (added `.fancy-code.fancy-code-dark`).
4.  Remove the bright code block style.

### ✔️ Expected result

The code block is dark.

### ❌ Actual result

It's neither bright or dark. 

Removing the bright code style removed both `.fancy-code.fancy-code-bright`. Only `.fancy-code-dark` is left.

### ❓ Possible solution

When removing, style command should check if the classes overlap with other active styles. If another style was also applied that shares the same class, the class should be preserved.",3,20
ckeditor,ckeditor5,"[TS] Allow running tests written in TS (automated, manual)","For instance
* `yarn test --browsers=""ChromeHeadless"" --reporter=""dots"" --files=""utils/dom/iswindow.ts""`
* `yarn manual --files=""utils/manual/diff/diff.ts""`",oleq,[],"[{'body': 'A follow-up of https://github.com/ckeditor/ckeditor5/issues/11717.', 'author': 'oleq'}, {'body': 'fyi @pomek, we have this issue.', 'author': 'Witoso'}, {'body': 'Closing as done (see: #14170, #14171).', 'author': 'pomek'}]","['domain:dx', 'squad:devops', 'squad:core']",CLOSED,11888,[],"[TS] Allow running tests written in TS (automated, manual) For instance
* `yarn test --browsers=""ChromeHeadless"" --reporter=""dots"" --files=""utils/dom/iswindow.ts""`
* `yarn manual --files=""utils/manual/diff/diff.ts""`",24,22
ckeditor,ckeditor5,[Chrome] Can't remove the whole content when the widget is at the beginning/end of the document,"Branch `ck/11438-beforeinput-ime-research-vol1.2-android`

## 📝 Provide detailed reproduction steps (if any)

Steps updated 13.09.2022 as explained here: https://github.com/ckeditor/ckeditor5/issues/11904#issuecomment-1245109027

1.  Open http://localhost:8125/ckeditor5/tests/manual/all-features.html in Chrome.
2.  Create a new paragraph at the beginning of the document.
3.  Put an image at the document's beginning (inside a previously created paragraph).
4.  Select all.
5.  Press Delete.

### ✔️ Expected result

The content is removed.

### ❌ Actual result

Nothing happens.

## 📃 Other details

Can't reproduce it on `master`.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",Mgsy,['arkflpc'],"[{'body': ""I can confirm that this issue is not reproducing on Firefox, Safari and Safari@iOS, so I've marked it as Chrome related."", 'author': 'dufipl'}, {'body': 'Still persists on branch ck/11438-beforeinput-ime-research-vol1.1-android in case of placing image at the beginning of document.\r\nThe focus after adding image goes to insert image button on toolbar.\r\nThis issue is still occuring only on Chrome.\r\n\r\n\r\nhttps://user-images.githubusercontent.com/66953380/187189065-3f18e97c-cc6d-41ed-ad09-01a2f4710ed8.mov\r\n\r\n', 'author': 'Acrophost'}, {'body': ""There's no beforeInput fired in this case :\\< It's a Chrome bug.\r\n\r\nWe need to create a minimal test case with a plain contenteditable and report this to Blink guys."", 'author': 'Reinmar'}, {'body': ""As for a workaround – the idea is to detect the situation when we had `keydown:Backspace` + `keyup:Backspace` without a `beforeInput` in the middle. Let's make it precise."", 'author': 'Reinmar'}, {'body': 'Note, this can be reproduced on ckeditor/ckeditor5#11456 and it has nothing to do with Android.', 'author': 'Reinmar'}, {'body': ""I can't reproduce it (Chrome version 105.0.5195.102, 64-bit Linux). I could before, and I'm doing the same steps as before. Google seems to have resolved the problem."", 'author': 'arkflpc'}, {'body': ""I'm on Version 105.0.5195.102 (Official Build) (x86\\_64) and it's still reproducible for me. What branch are you checking?"", 'author': 'Reinmar'}, {'body': ""I'm still getting the same events logged:\r\n\r\n![](https://user-images.githubusercontent.com/156149/189839156-79428a02-a1fc-44b2-8f40-856ffc3c6398.png)\r\n\r\nI'm testing this on the before input branches (either the epic one `ck/epic/11438-migrate-to-beforeinput` or the Android one `ck/11438-beforeinput-ime-research-vol1.1-android`, doesn't matter)."", 'author': 'Reinmar'}, {'body': ""Ok, it still happens on `ck/11438-beforeinput-ime-research-vol1.1-android` but doesn't happen on `ck/11438-beforeinput-ime-research-vol1.2-android` anymore.\r\n\r\nWhen **backspace** is pressed, `keyup` follows `keydown` directly, but when **delete** is pressed, there is unrelated `beforeinput` event between them.\r\n\r\n![](https://user-images.githubusercontent.com/8916871/189856692-da9f5ca8-d8c6-4911-9c98-1447a7eb83c2.png)"", 'author': 'arkflpc'}, {'body': ""@Reinmar, @arkflpc I think I see where the misunderstanding might be: when you put the image at the beginning of the document, but **within existing paragraph** issue does not reproduce, but when you create **a new paragraph at the beginning** and put the image there, the issue is still reproducing as shown here:\r\n![image cant delete](https://user-images.githubusercontent.com/32898551/189858011-7c9b753d-e1d8-4900-a40c-2297b5c2ae3a.gif)\r\n\r\nI've added this step to the issue description for clarification.\r\n\r\nFor the record, I'm using the `ck/11438-beforeinput-ime-research-vol1.1-android` branch and the 105.0.5195.102 (arm64) Chrome version.\r\n"", 'author': 'dufipl'}, {'body': 'In case of forward delete (key code 46) there is `beforeinput` event with `inputType == \'insertText\'` and `data == \'\\x7f\'` (Unicode ""Delete"" symbol) between `keydown` and `keyup`. It has to be ignored because it adds garbage to the end and messes with selection. However, it happens only on Linux.', 'author': 'arkflpc'}, {'body': ""I've filled a bug in Chromium: https://bugs.chromium.org/p/chromium/issues/detail?id=1365311."", 'author': 'arkflpc'}, {'body': 'Closed in #12474.', 'author': 'niegowski'}]","['type:bug', 'browser:chrome', 'domain:typing/ime', 'squad:core', 'status:in-progress']",CLOSED,11904,['11904'],"[Chrome] Can't remove the whole content when the widget is at the beginning/end of the document Branch `ck/11438-beforeinput-ime-research-vol1.2-android`

## 📝 Provide detailed reproduction steps (if any)

Steps updated 13.09.2022 as explained here: https://github.com/ckeditor/ckeditor5/issues/11904#issuecomment-1245109027

1.  Open http://localhost:8125/ckeditor5/tests/manual/all-features.html in Chrome.
2.  Create a new paragraph at the beginning of the document.
3.  Put an image at the document's beginning (inside a previously created paragraph).
4.  Select all.
5.  Press Delete.

### ✔️ Expected result

The content is removed.

### ❌ Actual result

Nothing happens.

## 📃 Other details

Can't reproduce it on `master`.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",13,19
ckeditor,ckeditor5,[beforeInput] Bring back basic typing support in Android,"In a course of action in https://github.com/ckeditor/ckeditor5/issues/11438 we wrote a composition support for non-Android browsers (see https://github.com/ckeditor/ckeditor5/pull/12024).

Unfortunately, while it works really well on every other system and browser and every language (including CJK), it does not work on Android at all.

We need to implement a completely custom handling for Android browsers.

Keyboards that we'll try to support from day one:

* The default one
* GBoard
* Swift

## ToC

* PoC ([done](https://github.com/ckeditor/ckeditor5/issues/12058#issuecomment-1220904956) ✅ )
* And then stabilize:
  * #12391
  * #12369
  * #12368",Reinmar,['niegowski'],"[{'body': ""Let's try to approach this in 3 stages:\r\n\r\n1.  Research events fired by Android keyboards. See: [https://www.notion.so/Typing-events-scenarios-8d750fcdc8984e4fa5126e78b98e4047.](https://www.notion.so/Typing-events-scenarios-8d750fcdc8984e4fa5126e78b98e4047.)\r\n    *   The goal is to compile a event model common across all major Android keyboards and identify the most important quirks.\r\n2.  Try recreating minimal support for typing on Android to unblock releasing the work done in #12024. It can be really incomplete as long as it does not crash. Release this minimal support together with the entire #12024 as soon as possible.\r\n3.  Take time to figure out a more complete implementation and finally close the IME&beforeInput topic for real. The last step may take significantly longer than step 2, hence it's separated."", 'author': 'Reinmar'}, {'body': ""The main differences for Android IME (typing with an English keyboard):\r\n\r\n1.  every time composition is replacing the whole word (even if only some characters were added or removed)\r\n2.  it keeps active composition while changing the selection between words in the document\r\n3.  there is no target ranges in the composition `beforeinput` events instead it's manipulating the DOM selection to reflect the text part that should be affected by the input\r\n\r\n### Emulate desktop IME behavior (the first attempt to solve those issues)\r\n\r\nTrying to keep as much of the original IME handling as possible and try to work around the issues mentioned above.\r\n\r\n_Note: Renderer and selection observer were disabled while in the composition state (from the editor's point of view)._\r\n\r\n1.  the `insertText` event was triggered on the composition end (no matter if the real one or the fake one)\r\n    *   the content and affected range were accumulated on `beforeinput` composition events\r\n    *   while committing the composition the text affected by the composition was compared with the one in the composition event and only differences were fired in the event (to prevent striping text node attributes while replacing the text node)\r\n2.  monitoring the selection changes to verify if it's still composing the same word or if it moved to some other place\r\n    *   in such case detected it was triggering false composition end\r\n    *   the composition (editor state) was restarted on the first composition event after that\r\n3.  for the affected range, the DOM selection is used\r\n\r\nThis approach caused problems with DOM - View position mapping because of the disabled renderer and the fact that the browser is wrapping some text with links or bold etc. There were some other problems that I can't recall now but maybe we should try to check it again.\r\n\r\n### Trying to ignore composition and just use the `beforeinput` composition events\r\n\r\nThis idea was to not ignore `insertCompositionText` type of `beforeinput` event so that every change would get applied to the model and view immediatelly so in theory there should not be problems with the position mapping.\r\n\r\n1.  the `insertText` event is triggered on every `insertCompositionText`\xa0\r\n    *   the text affected by the composition was compared with the one in the composition event and only differences were fired in the event (to prevent striping text node attributes while replacing the text node)\r\n2.  this approach completely ignores the `isComposing` flag, renderer is not disabled\r\n3.  for the affected range, the DOM selection is used (as in the previous attempt)\r\n\r\nUnfortunately, this approach also had issues with non-English keyboards because it broke the composition even harder than on the master branch. It was enough to compose in plain text to get the composition broken.\r\n\r\n### Rendering only if some document structure was changed (not text)\r\n\r\nThis is an extension of the previous attempt that is trying to trigger render in cases where some text node needs to get wrapped with some inline element (for example link or some bold etc). This would allow composing in plain text context but would still break composition while typing inside a link (same as on master).\r\n\r\nWhile trying to detect whether render should update DOM I noticed that current `beforeinput` handling is marking the whole container element as modified and the renderer is replacing the whole DOM text node instead of modifying its content. This might be the case of broken composition with non-English keyboards. I need to research it more to find out if we could fix the rendering so that it would not replace text nodes but update those modified. This would also affect desktop browsers because this bug of replacing the whole node is also affecting them."", 'author': 'niegowski'}, {'body': ""After expanding `Renderer#_updateChildren()` to be able to detect text node changes and update text nodes instead of replacing them I realized that this is still not enough because this whole flow is triggered on `beforeinput` so the text typed by the user is not yet in the DOM and since composition events can't be stopped this breaks composition.\xa0\r\n\r\nThe idea to solve the above problem:\r\n\r\n*   ~the renderer should be disabled while composing (even on android)~\xa0  \r\n    only updating text nodes should be disabled while composing\r\n*   ~on every `compositionupdate` event, the renderer should be triggered~  \r\n    the renderer is triggered after every change in DOM by the MutationObserver  \r\n    *   if it was correct and matches the view then the renderer does not change anything\r\n    *   if it should be wrapped with a link or moved outside it then it fixes it and this breaks composition the same as on typing based on mutations (master)"", 'author': 'niegowski'}, {'body': ""PoC branch: [https://github.com/ckeditor/ckeditor5/compare/ck/epic/11438-migrate-to-beforeinput...ck/11438-beforeinput-ime-research-vol1.1-android](https://github.com/ckeditor/ckeditor5/compare/ck/epic/11438-migrate-to-beforeinput...ck/11438-beforeinput-ime-research-vol1.1-android)\r\n\r\nSome problems with partial solutions:\r\n\r\n1.  Replacing \xa0misspelled words by picking the correct version from the dropdown was not rendered\r\n    *   This was caused by the fact that DOM text nodes were not updated while the `isComposing` flag is set\r\n    *   The `beforeinput` event got prevented (`insertReplacementText` is not a composition event, so it can be prevented)\r\n    *   The solution to this issue was to `preventDefault()` only those before input events that got triggered while not composing\r\n2.  Backspace and deleting content was causing an inline filler to get reduced to 6 characters (and considered lost)\r\n    *   This was caused by the fact that on Android the `deleteContentBackward` is ignoring `preventDefault()`\r\n    *   The selection after a link was just after an inline filler so the last character of it got removed by the browser\r\n    *   There is a workaround in the above PoC branch that does not use inline filler on android if there is any node on any side of the caret\r\n        *   This fixes the backspace problem\r\n        *   This sometimes causes that typing after a link is not possible (content jumps into the link)\r\n            *   This needs more checking\r\n        *   Inline filler is still rendered in an empty inline element to make it possible to type inside a `strong` element etc.\r\n3.  Pressing enter key does not trigger proper `beforeinput` event on some devices, instead it triggers `insertCompositionText` with data: `test\\n`\r\n    1.  I wasn't able to reproduce it so no solution for now\r\n4.  Composing after an English word by using the SwiftKey keyboard and trying to compose in Japanese causes the whole word to change to Japanese characters\r\n    1.  The same is happening in a plain content-editable so this is probably out of the scope"", 'author': 'niegowski'}, {'body': ""> Pressing enter key does not trigger proper `beforeinput` event on some devices, instead it triggers `insertCompositionText` with data: `test\\n`\r\n> \r\n> 1.  I wasn't able to reproduce it so no solution for now\r\n\r\nThat sounds like ckeditor/ckeditor5#11906."", 'author': 'Reinmar'}, {'body': ""@ckeditor/qa-team I think it's worth retesting the whole thing on Android.\r\n\r\nThe branch to test is [ck/11438-beforeinput-ime-research-vol1.1-android](https://github.com/ckeditor/ckeditor5/compare/ck/epic/11438-migrate-to-beforeinput...ck/11438-beforeinput-ime-research-vol1.1-android).\r\n\r\nKeyboards to cover:\r\n\r\n*   Default\r\n*   GBoard\r\n*   Swift\r\n\r\nLanguages:\r\n\r\n*   English\r\n*   One of Japanese layouts\r\n\r\nNote: Make sure to test on the newest Chrome as something changed recently. Also, we had problems setting up a simulator with all 3 keyboards. Together with @niegowski we were following this guide: [https://www.notion.so/Setting-up-Android-Emulator-9708664ec48e429686ab587bb1167c8a](https://www.notion.so/Setting-up-Android-Emulator-9708664ec48e429686ab587bb1167c8a) but at different moments and I ended up having 3 keyboards to choose from while Kuba just 2. We didn't figure this out and each of us tested what we could.\r\n\r\nOne additional favor I'd like to ask you: Could you also review (and close if not reproducible anymore) the issues reported specifically for the previous attempt to resolve Android issues? The list: https://github.com/ckeditor/ckeditor5/issues?q=is%3Aissue+is%3Aopen+ck%2F11438-beforeinput-ime-research-vol1.2-android"", 'author': 'Reinmar'}, {'body': ""Remaining issues to cover now:\r\n\r\n*   Merge latest `master` to this branch.\r\n*   Let's try to fix [https://github.com/ckeditor/ckeditor5/issues/12058#issuecomment-1221984375](https://github.com/ckeditor/ckeditor5/issues/12058#issuecomment-1221984375) + ckeditor/ckeditor5#12368 assuming they are the same problem. Let's simply add support for `beforeInput:insertText` with `'\\n'` and see if they go away. It should certainly resolve ckeditor/ckeditor5#11906. It may resolve #2045 too.\r\n*   Let's investigate ckeditor/ckeditor5#12369. Is our hypothesis correct? Can we detect and skip this particular `compositionstart`?"", 'author': 'Reinmar'}, {'body': 'Closed in #12446.', 'author': 'niegowski'}]","['type:task', 'domain:typing/ime', 'Epic', 'squad:core']",CLOSED,12058,"['12058', '11438']","[beforeInput] Bring back basic typing support in Android In a course of action in https://github.com/ckeditor/ckeditor5/issues/11438 we wrote a composition support for non-Android browsers (see https://github.com/ckeditor/ckeditor5/pull/12024).

Unfortunately, while it works really well on every other system and browser and every language (including CJK), it does not work on Android at all.

We need to implement a completely custom handling for Android browsers.

Keyboards that we'll try to support from day one:

* The default one
* GBoard
* Swift

## ToC

* PoC ([done](https://github.com/ckeditor/ckeditor5/issues/12058#issuecomment-1220904956) ✅ )
* And then stabilize:
  * #12391
  * #12369
  * #12368",14,23
ckeditor,ckeditor5,"[TS] Merge the ""number"" type into PriorityString","Followup of: https://github.com/ckeditor/ckeditor5/issues/11708
Part of: https://github.com/ckeditor/ckeditor5/issues/12027

Right now we define a type of e.g. `on()`'s `options.priority` param as `PriorityString | number`.

For me, the number is part of `PriorityString`. Everywhere where we expect the priority, we also allow a number version of it.

So, the proposal is to:

* Move `number` to `PriorityString` to simplify its use.
* Keep the current name of this union to avoid increasing visibility of the fact that a number can be used (which should be done only in special cases).",Reinmar,['arkflpc'],[],"['type:task', 'squad:core', 'domain:ts']",CLOSED,12218,"['11708', '12027']","[TS] Merge the ""number"" type into PriorityString Followup of: https://github.com/ckeditor/ckeditor5/issues/11708
Part of: https://github.com/ckeditor/ckeditor5/issues/12027

Right now we define a type of e.g. `on()`'s `options.priority` param as `PriorityString | number`.

For me, the number is part of `PriorityString`. Everywhere where we expect the priority, we also allow a number version of it.

So, the proposal is to:

* Move `number` to `PriorityString` to simplify its use.
* Keep the current name of this union to avoid increasing visibility of the fact that a number can be used (which should be done only in special cases).",5,22
ckeditor,ckeditor5,Cannot set block style on table,"## 📝 Provide detailed reproduction steps (if any)

1.  Open an editor with tables and styles dropdown (e.g. from styles manual tests).
2.  Create a table.
3.  Select the whole table.
4.  Open ""Styles"" from the toolbar.

### ✔️ Expected result

It should be possible to select block styles for tables.

### ❌ Actual result

All block styles are disabled.

![](https://user-images.githubusercontent.com/20561161/189117621-62cabb01-0d7e-443e-b386-fe18837e1d7f.png)",DawidKossowski,[],"[{'body': 'I totally agree to that issue. But there is possibly more to consider:\r\n\r\nRegarding table styling, we already have [Table Properties](https://ckeditor.com/docs/ckeditor5/35.2.0/api/module_table_tableproperties-TableProperties.html) feature:\r\n\r\n![Screenshot of Table Properties Dialog](https://user-images.githubusercontent.com/71911/201280477-1a708043-dd4f-44e3-9a74-4ae2a98136bb.png)\r\n\r\nUnfortunately, this feature is based on `style` attribute and there is no option mapping this to classes instead, like it is for similar features like [Text Alignment](https://ckeditor.com/docs/ckeditor5/latest/features/text-alignment.html#using-classes-instead-of-inline-style) and to some extent for font related features such as [Font Family](https://ckeditor.com/docs/ckeditor5/35.2.0/api/module_font_fontfamily-FontFamilyOption.html#member-view) via `view` `ElementDefinition` (not documented well, though).\r\n\r\nSo, trying to leverage this to a desired behavior:\r\n\r\n> As an editor\r\n> In order to apply styling to inserted tables\r\n> I want to be able to select from a set of predefined styles, represented as `class` attribute in view.\r\n\r\nThe [Styles](https://ckeditor.com/docs/ckeditor5/35.2.0/features/style.html) feature may be one way to cope with that, another one would be providing an alternative table properties dialog (same would apply to table cell properties then, even a new feature table row properties).\r\n\r\nIn the end, we should have a good decision matrix when to use which feature... or perhaps even better: There is some way so that all of them ""come together"". Example:\r\n\r\n* I can define style classes for `<table>`.\r\n\r\n* I can select corresponding style classes in _Table properties_ dialog (thus, a restricted view for applicable styles).\r\n\r\n* To align with the existing `style` based table properties:\r\n\r\n  * The class based styling is considered the desired way to style tables: Thus, by default, editors can only choose different styles (not that up to now styles are additive, thus, don\'t toggle).\r\n\r\n  * Given defined style-classes exist for `<table>`, explicit style properties are hidden in a collapsed region labelled, for example, as ""Override"". Possibly, the collapsed region is shown as soon as an `Override` checkbox is clicked.\r\n\r\n  * All styles in ""Override"" section are unset by default (this is different to now and possibly challenging to design a good user interaction here).\r\n', 'author': 'mmichaelis'}, {'body': ""Let's merge this into a more general #11577."", 'author': 'Reinmar'}]","['type:bug', 'resolution:duplicate', 'support:2', 'squad:core', 'package:style']",CLOSED,12441,[],"Cannot set block style on table ## 📝 Provide detailed reproduction steps (if any)

1.  Open an editor with tables and styles dropdown (e.g. from styles manual tests).
2.  Create a table.
3.  Select the whole table.
4.  Open ""Styles"" from the toolbar.

### ✔️ Expected result

It should be possible to select block styles for tables.

### ❌ Actual result

All block styles are disabled.

![](https://user-images.githubusercontent.com/20561161/189117621-62cabb01-0d7e-443e-b386-fe18837e1d7f.png)",13,20
ckeditor,ckeditor5,Nested lists pasted from Word don't display properly while using Document lists and Indent block,"## 📝 Provide detailed reproduction steps (if any)

1.  Enable Document lists, Document list properties, Indent block and Paste from Office.
2.  Paste the content from the example - [Lorem ipsum.docx](https://github.com/ckeditor/ckeditor5/files/9565456/Lorem.ipsum.docx)

### ✔️ Expected result

The list displays properly.

### ❌ Actual result

There is an additional margin for the nested list items.

![](https://user-images.githubusercontent.com/20988892/190130401-07f744ca-f51f-4636-bcc9-dfd7b3b13c8d.png)

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",Mgsy,['mmotyczynska'],"[{'body': ""Actually, I've just noticed that this issue is caused by the Indent block feature that maintains the `margin-left` attribute on `paragraph`."", 'author': 'Mgsy'}, {'body': '**Clipboard normalized HTML view after transformation**\r\n\r\n```html\r\n<ul style=""list-style-type:circle"">\r\n    <li class=""MsoListParagraphCxSpFirst"" style=""mso-list:l1 level1 lfo1;text-indent:-18.0pt""><span lang=""EN-IN""\r\n            style=""font-family:"" Courier New"";mso-fareast-font-family:""Courier New""""></span><span lang=""EN-US""\r\n            style=""mso-ansi-language:EN-US"">Lorem ipsum</span><span lang=""EN-IN"">\r\n            <o:p></o:p>\r\n        </span></li>\r\n    <li class=""MsoListParagraphCxSpMiddle"" style=""mso-list:l1 level1 lfo1;text-indent:-18.0pt""><span lang=""EN-IN""\r\n            style=""font-family:"" Courier New"";mso-fareast-font-family:""Courier New""""></span><span lang=""EN-US""\r\n            style=""mso-ansi-language:EN-US"">Lorem ipsum</span><span lang=""EN-IN"">\r\n            <o:p></o:p>\r\n        </span>\r\n        <ul style=""list-style-type:square"">\r\n            <li class=""MsoListParagraphCxSpMiddle""\r\nmargin -->   style=""margin-left:72.0pt;mso-add-space:auto;mso-list:l1 level2 lfo1;text-indent:-18.0pt""><span\r\n                    lang=""EN-IN""\r\n                    style=""font-family:Wingdings;mso-bidi-font-family:Wingdings;mso-fareast-font-family:Wingdings""></span><span\r\n                    lang=""EN-IN"">Lorem ipsum<o:p></o:p></span></li>\r\n            <li class=""MsoListParagraphCxSpMiddle""\r\n                style=""margin-left:72.0pt;mso-add-space:auto;mso-list:l1 level2 lfo1;text-indent:-18.0pt""><span\r\n                    lang=""EN-IN""\r\n                    style=""font-family:Wingdings;mso-bidi-font-family:Wingdings;mso-fareast-font-family:Wingdings""></span><span\r\n                    lang=""EN-IN"">Lorem ipsum<o:p></o:p></span></li>\r\n        </ul>\r\n    </li>\r\n    <li class=""MsoListParagraphCxSpMiddle"" style=""mso-list:l1 level1 lfo1;text-indent:-18.0pt""><span lang=""EN-IN""\r\n            style=""font-family:"" Courier New"";mso-fareast-font-family:""Courier New""""></span><span lang=""EN-IN"">Lorem\r\n            ipsum<o:p></o:p></span></li>\r\n    <li class=""MsoListParagraphCxSpLast"" style=""mso-list:l1 level1 lfo1;text-indent:-18.0pt""><span lang=""EN-IN""\r\n            style=""font-family:"" Courier New"";mso-fareast-font-family:""Courier New""""></span><span lang=""EN-IN"">Lorem\r\n            ipsum<o:p></o:p></span></li>\r\n</ul>\r\n<p class=""MsoNormal""><span lang=""EN-IN""></span></p>\r\n<ol>\r\n    <li class=""MsoListParagraphCxSpFirst"" style=""mso-list:l0 level1 lfo2;text-indent:-18.0pt""><span lang=""EN-IN""\r\n            style=""mso-bidi-font-family:Calibri;mso-bidi-theme-font:minor-latin""></span><span lang=""EN-IN"">Min<o:p>\r\n            </o:p></span></li>\r\n    <li class=""MsoListParagraphCxSpMiddle"" style=""mso-list:l0 level1 lfo2;text-indent:-18.0pt""><span lang=""EN-IN""\r\n            style=""mso-bidi-font-family:Calibri;mso-bidi-theme-font:minor-latin""></span><span lang=""EN-IN"">Lorem ipsum\r\n            <o:p></o:p></span>\r\n        <ul style=""list-style-type:square"">\r\n            <li class=""MsoListParagraphCxSpMiddle""\r\n                style=""margin-left:72.0pt;mso-add-space:auto;mso-list:l0 level2 lfo2;text-indent:-18.0pt""><span\r\n                    lang=""EN-IN""\r\n                    style=""font-family:Wingdings;mso-bidi-font-family:Wingdings;mso-fareast-font-family:Wingdings""></span><span\r\n                    lang=""EN-IN"">Lorem ipsum<o:p></o:p></span></li>\r\n            <li class=""MsoListParagraphCxSpLast""\r\n                style=""margin-left:72.0pt;mso-add-space:auto;mso-list:l0 level2 lfo2;text-indent:-18.0pt""><span\r\n                    lang=""EN-IN""\r\n                    style=""font-family:Wingdings;mso-bidi-font-family:Wingdings;mso-fareast-font-family:Wingdings""></span><span\r\n                    lang=""EN-IN"">Lorem ipsum<o:p></o:p></span></li>\r\n        </ul>\r\n    </li>\r\n</ol>\r\n```', 'author': 'Witoso'}, {'body': ""The potential scope would be dropping `margin-left` in cases when it's on `ol/ul/li` (and Paste from Office). This aligns also with @jacekbogdanski goals."", 'author': 'Witoso'}, {'body': ""Potential blocker for @jacekbogdanski's case - we would fix it paste, and they need it for the data pipeline as well."", 'author': 'Witoso'}, {'body': 'I think the plan minimum is to make IndentBlock stop upcasting margin-left from \\<li> to a paragraph. Dunno how this could be technically achieved, but logically speaking, it does too eager upcast conversion.', 'author': 'Reinmar'}, {'body': ""Would be great to see this addressed. We've had several customers flag this issue"", 'author': '108signals'}, {'body': 'Scope:\r\n\r\nIndentBlock stop upcasting margin-left from \\<li> to a paragraph.\r\n\r\nRel: #14155', 'author': 'Witoso'}]","['type:bug', 'package:list', 'package:paste-from-office', 'support:2', 'package:indent', 'squad:core']",CLOSED,12466,[],"Nested lists pasted from Word don't display properly while using Document lists and Indent block ## 📝 Provide detailed reproduction steps (if any)

1.  Enable Document lists, Document list properties, Indent block and Paste from Office.
2.  Paste the content from the example - [Lorem ipsum.docx](https://github.com/ckeditor/ckeditor5/files/9565456/Lorem.ipsum.docx)

### ✔️ Expected result

The list displays properly.

### ❌ Actual result

There is an additional margin for the nested list items.

![](https://user-images.githubusercontent.com/20988892/190130401-07f744ca-f51f-4636-bcc9-dfd7b3b13c8d.png)

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",31,29
ckeditor,ckeditor5,[Style dropdown] Can't change the style of custom element introduced via Headings configuration,"## 📝 Provide detailed reproduction steps (if any)

*   Add support for `<div class=""normal-div"">` element via Headings configuration:

```
heading: {
   options: [
      // ...
      {
         model: 'normalDiv', view: { name: 'div', classes: 'normal-div' }, title: 'Normal (DIV)', class: 'ck-heading_normalDiv',
      }
   ]
}
```

*   Add support for a style that applies to `div`:

```
style: {
   definitions: [
      {
         name: 'Special Container',
         element: 'div',
         styles: {
            padding: '5px 10px',
            background: '#eee',
            border: '1px solid #ccc',
         },
      }
] }
```

*   In the editor, convert the paragraph to `<div class=""normal-div"">`.
*   Open the style dropdown and try to add a Special container style.

### ✔️ Expected result

It's possible to add the style.

### ❌ Actual result

It's impossible to add the style.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",Mgsy,[],"[{'body': 'I actually wonder, that the given style definition is valid. According to 35.3.0 documentation, only `classes` is supported: [Typedef StyleDefinition (style/style~StyleDefinition) - CKEditor 5 API docs](https://ckeditor.com/docs/ckeditor5/35.3.0/api/module_style_style-StyleDefinition.html). `styles` and other configuration options were available in [CKEditor 4 only](https://ckeditor.com/docs/ckeditor4/latest/guide/dev_howtos_styles.html). See also:\r\n\r\n* #12494\r\n\r\nNevertheless, the issue may be similar to that one I described as side note to:\r\n\r\n* #12772\r\n\r\nBecause of the different representation in model, headings feature and styles feature collide here and may even cause ambiguous states when loading data, when both are configured to apply the same `class` attribute.\r\n\r\nThus, all in all, there is a mismatch between features adding classes (headings, some font features, possibly also text-alignment) and the styles feature.\r\n', 'author': 'mmichaelis'}]","['type:bug', 'support:2', 'squad:core', 'package:style']",OPEN,12625,[],"[Style dropdown] Can't change the style of custom element introduced via Headings configuration ## 📝 Provide detailed reproduction steps (if any)

*   Add support for `<div class=""normal-div"">` element via Headings configuration:

```
heading: {
   options: [
      // ...
      {
         model: 'normalDiv', view: { name: 'div', classes: 'normal-div' }, title: 'Normal (DIV)', class: 'ck-heading_normalDiv',
      }
   ]
}
```

*   Add support for a style that applies to `div`:

```
style: {
   definitions: [
      {
         name: 'Special Container',
         element: 'div',
         styles: {
            padding: '5px 10px',
            background: '#eee',
            border: '1px solid #ccc',
         },
      }
] }
```

*   In the editor, convert the paragraph to `<div class=""normal-div"">`.
*   Open the style dropdown and try to add a Special container style.

### ✔️ Expected result

It's possible to add the style.

### ❌ Actual result

It's impossible to add the style.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",3,28
ckeditor,ckeditor5,[UI initialization performance] Research how the UI is initialized (the flow) and which steps take significant amount of time,Part of #12592.,Reinmar,['niegowski'],"[{'body': ""While analyzing the UI init flow, I checked different approaches to cut that time.\xa0\r\n\r\n### Lazy render\r\n\r\nThe first idea was to postpone DOM element creation to the first moment that it would get visible. There are some view classes that have a separate `isVisible` property, so I was trying to move that property to the base `View` class and skip rendering until the first `isVisible` change. Unfortunately, there are a lot of places that expect the `View#element` property to be initialized by `View#render()`. The most common is `FocusTracker#add( element )` and `KeystrokeHandler#listenTo( element)`. Another obstacle to this approach is `ViewCollection` that expects a DOM element in `ViewCollection#setParent()`.\r\n\r\nThis approach would be baked into the UI engine and would not require changes in features code but OTOH it could break some custom UIs that expect DOM element to be ready to use just after calling `render()`.\r\n\r\n### Lazy init\r\n\r\nAnother approach was to postpone the construction of view instances that are expected to be not visible on the editor initialization (like dropdown panels, and widget toolbars). There is a branch that shows some improvements in UI init time: https://github.com/ckeditor/ckeditor5/compare/ck/12682-performance-reference...ck/12682-performance-lazy-init\r\n\r\nThis branch does not include all possible optimization places but already there is a visible performance improvement (see table at the bottom of this comment).\r\n\r\n### Toolbar grouping\r\n\r\nWe've seen that disabling this option improve the load times. In scenarios where the initialization time is critical, we recommend disabling it. See [`config.toolbar`](https://ckeditor.com/docs/ckeditor5/latest/api/module_core_editor_editorconfig-EditorConfig.html#member-toolbar).\r\n\r\n### SVG parsing overhead\r\n\r\nI checked whether SVG parsing (for `IconView` and `WidgetTypeAround`) takes a significant time (by disabling SVG loading completely) and I think that it does not impact the init time too much.\r\n\r\n### DOM element clone vs create\r\n\r\nAnother idea to verify was to clone existing DOM elements instead of creating new ones. In tests, it looked like it performed the same or even the performance was worse.\r\n\r\n### UI Init time measurements\r\n\r\nReference: https://github.com/ckeditor/ckeditor5/compare/ck/12682-performance-reference  \r\nLazy init: [https://github.com/ckeditor/ckeditor5/compare/ck/12682-performance-reference...ck/12682-performance-lazy-init](https://github.com/ckeditor/ckeditor5/compare/ck/12682-performance-reference...ck/12682-performance-lazy-init)  \r\nWithout SVGs: https://github.com/ckeditor/ckeditor5/compare/ck/12682-performance-reference...ck/12682-performance-without-svg\r\n\r\n![image](https://user-images.githubusercontent.com/1232187/202860463-6fa873a0-6a42-42df-bee6-608df185aaba.png)"", 'author': 'niegowski'}, {'body': ""Research summary:\r\n\r\n*   :red\\_circle:\xa0 Lazy render is tricky. Possible, but may cause instability by increasing the complexity.\r\n*   :green\\_circle:\xa0 Lazy initialization worked great. It's the first thing to change.\r\n*   :yellow\\_circle:\xa0 We recommend avoiding automatic toolbar grouping when initialization performance is crucial. No actions from this item for now, though.\r\n*   :question:\xa0 SVG parsing might be negatively impacting the performance. We were testing completely disabled SVGs. We'd need more time to verify a more realistic case where they are created, but without parsing.\r\n*   :red\\_circle: Cloning vs creating new elements. No difference or even worse results.\r\n\r\nPlan:\r\n\r\n*   Let's work on lazy initialization.\r\n*   Let's devote some more time to check SVGs. Especially that we were considering this anyway: #12515."", 'author': 'Reinmar'}, {'body': ""> *   🟢\xa0 Lazy initialization worked great. It's the first thing to change.\r\n\r\nExtracted to #12890."", 'author': 'Reinmar'}, {'body': ""> *   ❓\xa0 SVG parsing might be negatively impacting the performance. We were testing completely disabled SVGs. We'd need more time to verify a more realistic case where they are created, but without parsing.\r\n\r\nExtracted to #12891."", 'author': 'Reinmar'}]","['package:ui', 'type:performance', 'squad:core']",CLOSED,12682,[],[UI initialization performance] Research how the UI is initialized (the flow) and which steps take significant amount of time Part of #12592.,20,24
ckeditor,ckeditor5,[TS] Research how to make import and re-export cleaner,"Currently, we have the following ways of importing from other packages:
1. In all non-essential packages, we import from `ckeditor5/src/*`. In practice, that mean importing from respective `index.js`.
2. In essential packages, we import either from package's `index.js` or directly from a specific file. The way seems to depend on what IDE suggested at the time of adding this import.

The stuff being exported from `index.js`es (and, from `ckeditor5/src`) are helper functions and classes meant to be instantiated directly. However, when moving to TypeScript, a code have to import way more classes (and interfaces) from other packages. That is because every local helper function needs to annotate its parameters. And there are local variables where type inference is not enough.
There are also 

Let's research how to make all of it look clean and consistent. Consider the following:
- An Essential package importing stuff from other essential package.
- Not essential package importing stuff from essential one.
- Not essential package importing types from another non-essential package (new case added by TypeScript).

Scope:
1. Create a branch with example how it could look like.
2. Propose tasks to create.",arkflpc,['arkflpc'],[],"['type:task', 'squad:core', 'domain:ts']",CLOSED,12720,[],"[TS] Research how to make import and re-export cleaner Currently, we have the following ways of importing from other packages:
1. In all non-essential packages, we import from `ckeditor5/src/*`. In practice, that mean importing from respective `index.js`.
2. In essential packages, we import either from package's `index.js` or directly from a specific file. The way seems to depend on what IDE suggested at the time of adding this import.

The stuff being exported from `index.js`es (and, from `ckeditor5/src`) are helper functions and classes meant to be instantiated directly. However, when moving to TypeScript, a code have to import way more classes (and interfaces) from other packages. That is because every local helper function needs to annotate its parameters. And there are local variables where type inference is not enough.
There are also 

Let's research how to make all of it look clean and consistent. Consider the following:
- An Essential package importing stuff from other essential package.
- Not essential package importing stuff from essential one.
- Not essential package importing types from another non-essential package (new case added by TypeScript).

Scope:
1. Create a branch with example how it could look like.
2. Propose tasks to create.",23,22
ckeditor,ckeditor5,"New list plugin doesn't convert subsequent lists with a different type properly (aka resetting numbering, splitting lists)","## 📝 Provide detailed reproduction steps (if any)

For context this is a simplified markup produced by MS Word.

1.  Copy following HTML to your clipboard:

```html
<p style=""margin-top: 0px; margin-bottom: 0px; line-height: 1"">foo</p>

<p style=""margin-top: 0px; margin-bottom: 0px; margin-left: 24px; line-height: 1"">&nbsp;</p>
<ol style=""list-style-type: decimal"">
    <li>

        <p style=""margin-top: 0px; margin-bottom: 10.67px; line-height: 1.05"">foobar</p>
    </li>
</ol>

<p style=""margin-top: 0px; margin-bottom: 10.67px; margin-left: 24px; line-height: 1.05"">&nbsp;</p>
<ol style=""list-style-type: lower-latin"">
    <li>

        <p style=""margin-top: 0px; margin-bottom: 10.67px; line-height: 1.05"">foobar</p>
    </li>
    <li>

        <p style=""margin-top: 0px; margin-bottom: 10.67px; line-height: 1.05"">foobar</p>
    </li>
</ol>
<ol start=""2"" style=""list-style-type: decimal"">
    <li>

        <p style=""margin-top: 0px; margin-bottom: 10.67px; line-height: 1.05"">Decimal list item again</p>
    </li>
    <li>

        <p style=""margin-top: 0px; margin-bottom: 10.67px; line-height: 1.05"">Decimal list item again
        </p>
    </li>
</ol>

<p style=""margin-top: 0px; margin-bottom: 10.67px; margin-left: 48px; line-height: 1.05"">&nbsp;</p>
<ol style=""list-style-type: lower-latin"">
    <li>

        <p style=""margin-top: 0px; margin-bottom: 10.67px; line-height: 1.05"">foobar</p>
    </li>
    <li>

        <p style=""margin-top: 0px; margin-bottom: 10.67px; line-height: 1.05"">foobar</p>
    </li>
</ol>
<ul style=""list-style-type: disc"">
    <li>

        <p style=""margin-top: 0px; margin-bottom: 10.67px; line-height: 1.05"">foobar</p>
    </li>
</ul>
<ol start=""3"" style=""list-style-type: lower-latin"">
    <li>

        <p style=""margin-top: 0px; margin-bottom: 10.67px; line-height: 1.05"">foobar
        </p>
    </li>
</ol>
```

1.  Open a demo that has new list (a.k.a. document list) implementation in it. [Import from Word guide](https://ckeditor.com/docs/ckeditor5/latest/features/import-word/import-word.html) is a good example.
2.  Open js dev console.
3.  Execute ``editor.setData( `<copiedMarkupHere>` )``.

### ✔️ Expected result

List with two ""Decimal list item again"" items should be a numbered list.

![](https://user-images.githubusercontent.com/5353898/198069987-e3d2614a-55e4-48d0-8506-740fbdf75f86.png)

### ❌ Actual result

List goes on as alphanum list.

![](https://user-images.githubusercontent.com/5353898/198070238-e92efedb-45a7-443a-bada-4f04a3a4eb84.png)

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",mlewand,['filipsobol'],"[{'body': ""There's a chance we're running here into a limitation of the current implementation – that it does not allow having two subsequent lists of the same type.\r\n\r\n@niegowski or @arkflpc, could you confirm that I'm right? Or perhaps this is indeed a bug (as opposed to a missing feature)?"", 'author': 'Reinmar'}, {'body': ""> There's a chance we're running here into a limitation of the current implementation – that it does not allow having two subsequent lists of the same type.\r\n\r\nYou are right. We even implemented a post-fixer to make sure this would not break in RTC: [https://github.com/ckeditor/ckeditor5/blob/13d98de12b265f25eb1cc82c4020c013b207564c/packages/ckeditor5-list/src/documentlistproperties/documentlistpropertiesediting.js#L150-L151](https://github.com/ckeditor/ckeditor5/blob/13d98de12b265f25eb1cc82c4020c013b207564c/packages/ckeditor5-list/src/documentlistproperties/documentlistpropertiesediting.js#L150-L151)\r\n\r\nI could imagine a case where one user is modifying a style of the list and some other user is at the same time adding a new list item.\xa0\r\n\r\nThis probably could be someday resolved by adding `listId` attribute to mark strict boundaries for lists, but currently, it's a missing feature."", 'author': 'niegowski'}, {'body': ""Just theoretically, how feasible would be that fix if IFW would mark lists with an additional attribute? Like a unique ID or something, so it's possible to distinguish different lists? Would that help?"", 'author': 'jacekbogdanski'}, {'body': ""> Just theoretically, how feasible would be that fix if IFW would mark lists with an additional attribute? Like a unique ID or something, so it's possible to distinguish different lists? Would that help?\r\n\r\nIt's not the input problem, it's internally stored in the model (in an input-compatible way) and fixed by the post-fixer."", 'author': 'niegowski'}, {'body': 'Very old DUP of this ticket: #3000.', 'author': 'Reinmar'}, {'body': '\n## Scope\n\n1. Only for `DocumentList` plugin.\n2. Requires a new docs page / section.\n\n### Enablement\n\nNew plugin that is added by the user.\n\n### Behaviour\n\n1. Always show two or more separate lists when we have two or more separate lists in the data.\n2. List separator - create an element in the model (not visible, margins will be probably larger) - to explore.\n3. Check the behavior for backspace and forward delete (problems may appear).\n\nTwo `ul`’s next to each other:\n\n```html\n<ul>\n\t<li>LOREM</li>\n\t<li>IPSUM</li>\n</ul>\n<ul>\n\t<li>LOREM</li>\n\t<li>IPSUM</li>\n</ul>\n```\n\n**Outcome**: This should not be merged.\n\n---\n\nTwo `ul`’s next to each other, different styles (only `list-style-type:` or more styles?):\n\n```html\n<ul style=""list-style-type: square;"">\n\t<li>LOREM</li>\n\t<li>IPSUM</li>\n</ul>\n<ul style=""list-style-type: disc;"">\n\t<li>LOREM</li>\n\t<li>IPSUM</li>\n</ul>\n```\n\n**Outcome**: This should **not** be merged.\n\n### ol\'s\n\nTwo `ol`’s next to each other:\n\n```html\n<ol>\n\t<li>LOREM</li>\n\t<li>IPSUM</li>\n</ol>\n<ol>\n\t<li>LOREM</li>\n\t<li>IPSUM</li>\n</ol>\n```\n\n**Outcome**: This should **not** be merged.\n\n---\n\nTwo `ol`’s next to each other, different styles (only `list-style-type:` or more styles?).\nProbably not relevant as it will be handled by the case above anyway.\n\n```html\n<ol>\n\t<li>LOREM</li>\n\t<li>IPSUM</li>\n</ol>\n<ol style=""list-style-type:decimal-leading-zero;"">\n\t<li>LOREM</li>\n\t<li>IPSUM</li>\n</ol>\n```\n\n**Outcome**: This should **not** be merged.\n\n## Real life examples\n* https://github.com/ckeditor/ckeditor5/issues/13945#issuecomment-1519550101\n* https://github.com/ckeditor/ckeditor5/issues/13945#issuecomment-1519556022\n', 'author': 'Witoso'}]","['type:bug', 'package:list', 'support:2', 'squad:core']",CLOSED,12738,[],"New list plugin doesn't convert subsequent lists with a different type properly (aka resetting numbering, splitting lists) ## 📝 Provide detailed reproduction steps (if any)

For context this is a simplified markup produced by MS Word.

1.  Copy following HTML to your clipboard:

```html
<p style=""margin-top: 0px; margin-bottom: 0px; line-height: 1"">foo</p>

<p style=""margin-top: 0px; margin-bottom: 0px; margin-left: 24px; line-height: 1"">&nbsp;</p>
<ol style=""list-style-type: decimal"">
    <li>

        <p style=""margin-top: 0px; margin-bottom: 10.67px; line-height: 1.05"">foobar</p>
    </li>
</ol>

<p style=""margin-top: 0px; margin-bottom: 10.67px; margin-left: 24px; line-height: 1.05"">&nbsp;</p>
<ol style=""list-style-type: lower-latin"">
    <li>

        <p style=""margin-top: 0px; margin-bottom: 10.67px; line-height: 1.05"">foobar</p>
    </li>
    <li>

        <p style=""margin-top: 0px; margin-bottom: 10.67px; line-height: 1.05"">foobar</p>
    </li>
</ol>
<ol start=""2"" style=""list-style-type: decimal"">
    <li>

        <p style=""margin-top: 0px; margin-bottom: 10.67px; line-height: 1.05"">Decimal list item again</p>
    </li>
    <li>

        <p style=""margin-top: 0px; margin-bottom: 10.67px; line-height: 1.05"">Decimal list item again
        </p>
    </li>
</ol>

<p style=""margin-top: 0px; margin-bottom: 10.67px; margin-left: 48px; line-height: 1.05"">&nbsp;</p>
<ol style=""list-style-type: lower-latin"">
    <li>

        <p style=""margin-top: 0px; margin-bottom: 10.67px; line-height: 1.05"">foobar</p>
    </li>
    <li>

        <p style=""margin-top: 0px; margin-bottom: 10.67px; line-height: 1.05"">foobar</p>
    </li>
</ol>
<ul style=""list-style-type: disc"">
    <li>

        <p style=""margin-top: 0px; margin-bottom: 10.67px; line-height: 1.05"">foobar</p>
    </li>
</ul>
<ol start=""3"" style=""list-style-type: lower-latin"">
    <li>

        <p style=""margin-top: 0px; margin-bottom: 10.67px; line-height: 1.05"">foobar
        </p>
    </li>
</ol>
```

1.  Open a demo that has new list (a.k.a. document list) implementation in it. [Import from Word guide](https://ckeditor.com/docs/ckeditor5/latest/features/import-word/import-word.html) is a good example.
2.  Open js dev console.
3.  Execute ``editor.setData( `<copiedMarkupHere>` )``.

### ✔️ Expected result

List with two ""Decimal list item again"" items should be a numbered list.

![](https://user-images.githubusercontent.com/5353898/198069987-e3d2614a-55e4-48d0-8506-740fbdf75f86.png)

### ❌ Actual result

List goes on as alphanum list.

![](https://user-images.githubusercontent.com/5353898/198070238-e92efedb-45a7-443a-bada-4f04a3a4eb84.png)

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",9,26
ckeditor,ckeditor5,[TS] Remove `I` type parameter from `Collection`,"Currently the `Collection` class has two generic parameters: `T` - item type and `I` - its id property name. It was inspired by [community types](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/ckeditor__ckeditor5-utils/src/collection.d.ts). However, it seems redundant and overthought. I'd remove it.

Part of #12027.",arkflpc,[],"[{'body': 'Scope:\r\n\r\n*   Remove the param from the class definition.\r\n*   Review existing usage.\r\n*   Review existing Collection documentation (API docs).', 'author': 'Reinmar'}, {'body': 'Closed in #12823', 'author': 'niegowski'}]","['type:improvement', 'squad:core', 'domain:ts']",CLOSED,12763,[],"[TS] Remove `I` type parameter from `Collection` Currently the `Collection` class has two generic parameters: `T` - item type and `I` - its id property name. It was inspired by [community types](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/ckeditor__ckeditor5-utils/src/collection.d.ts). However, it seems redundant and overthought. I'd remove it.

Part of #12027.",11,22
ckeditor,ckeditor5,Styles Feature: Hide inapplicable styles instead of disabling them,"## 📝 Provide a description of the improvement

**Motivation:** If dealing with many styles, it is easy losing the overview, especially if (for block elements) many styles are disabled for a given context.

**Example:** Given an example, which may be worth an extra issue (should be possible to specify multiple elements for block elements) the resulting UI will render previews for irrelevant headings:

![Styles Feature Example](https://user-images.githubusercontent.com/71911/199276121-89db80bd-c44a-430c-94c2-eb52ffaa2ec4.png)

based on configuration (excerpt):

```javascript
{
  name: `Aqua <h1>`,
  element: ""h1"",
  classes: [""background-color--aqua""],
},
{
  name: `Aqua <h2>`,
  element: ""h2"",
  classes: [""background-color--aqua""],
},
{
  name: `Aqua <h3>`,
  element: ""h3"",
  classes: [""background-color--aqua""],
},
```

I would suggest to (at least by configuration option) hide any inapplicable styles, which will make the UI much cleaner. Of course, this would also require some nice ""empty"" state (like completely hiding the block element block).

**Workaround:** You may add the following style addition, to hide disabled block styles:

```css
.ck.ck-style-panel .ck-style-grid .ck-style-grid__button.ck-disabled {
    display: none; /* Add this */
}
```

## 📃 Other details

* Browser: Chrome
* OS: Windows
* CKEditor version: 35.2.1
* Installed CKEditor plugins: [Styles](https://ckeditor.com/docs/ckeditor5/35.2.1/features/style.html)

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",mmichaelis,[],"[{'body': 'To preserve accessibility, we may want to have some option that on toggle hides the disabled styles.', 'author': 'Witoso'}]","['type:improvement', 'support:2']",OPEN,12770,[],"Styles Feature: Hide inapplicable styles instead of disabling them ## 📝 Provide a description of the improvement

**Motivation:** If dealing with many styles, it is easy losing the overview, especially if (for block elements) many styles are disabled for a given context.

**Example:** Given an example, which may be worth an extra issue (should be possible to specify multiple elements for block elements) the resulting UI will render previews for irrelevant headings:

![Styles Feature Example](https://user-images.githubusercontent.com/71911/199276121-89db80bd-c44a-430c-94c2-eb52ffaa2ec4.png)

based on configuration (excerpt):

```javascript
{
  name: `Aqua <h1>`,
  element: ""h1"",
  classes: [""background-color--aqua""],
},
{
  name: `Aqua <h2>`,
  element: ""h2"",
  classes: [""background-color--aqua""],
},
{
  name: `Aqua <h3>`,
  element: ""h3"",
  classes: [""background-color--aqua""],
},
```

I would suggest to (at least by configuration option) hide any inapplicable styles, which will make the UI much cleaner. Of course, this would also require some nice ""empty"" state (like completely hiding the block element block).

**Workaround:** You may add the following style addition, to hide disabled block styles:

```css
.ck.ck-style-panel .ck-style-grid .ck-style-grid__button.ck-disabled {
    display: none; /* Add this */
}
```

## 📃 Other details

* Browser: Chrome
* OS: Windows
* CKEditor version: 35.2.1
* Installed CKEditor plugins: [Styles](https://ckeditor.com/docs/ckeditor5/35.2.1/features/style.html)

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",8,28
ckeditor,ckeditor5,Styles Feature: Allow specifying multiple (block) elements to apply to,"## 📝 Provide a description of the improvement

The suggestion is to have a configuration such as (taken and extended from [config example](https://ckeditor.com/docs/ckeditor5/35.2.1/api/module_style_style-StyleDefinition.html)):

```javascript
{
	name: 'Example style',
	element: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],
	classes: [ 'foo' ]
}
```

This would decrease duplication for such scenarios and would be one way to reducing the impact of:

* #12770

which would, for the workaround of adding all elements one by one, bloat up the UI a lot.

Note, that such multi-element approach may make sense only for block-elements, as (unfortunately, from my point of view, as it raises other already reported issues) for inline elements also the inline elements will be created (instead of also applying only to the matched element). Thus, a configuration like this would be ambiguous:

```javascript
{
	name: 'Example style',
	element: ['span', 'strong'],
	classes: [ 'foo' ]
}
```

and, if allowed, would require a clear contract like: The first element wins.

## 📃 Other details

* Browser: Chrome
* OS: Windows
* CKEditor version: 35.2.1
* Installed CKEditor plugins: [Styles](https://ckeditor.com/docs/ckeditor5/35.2.1/features/style.html)

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",mmichaelis,[],"[{'body': 'I second this and find this feature, that has been worked in CK4, absolutely necessary', 'author': 'tohett'}]","['type:improvement', 'support:2']",OPEN,12771,[],"Styles Feature: Allow specifying multiple (block) elements to apply to ## 📝 Provide a description of the improvement

The suggestion is to have a configuration such as (taken and extended from [config example](https://ckeditor.com/docs/ckeditor5/35.2.1/api/module_style_style-StyleDefinition.html)):

```javascript
{
	name: 'Example style',
	element: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],
	classes: [ 'foo' ]
}
```

This would decrease duplication for such scenarios and would be one way to reducing the impact of:

* #12770

which would, for the workaround of adding all elements one by one, bloat up the UI a lot.

Note, that such multi-element approach may make sense only for block-elements, as (unfortunately, from my point of view, as it raises other already reported issues) for inline elements also the inline elements will be created (instead of also applying only to the matched element). Thus, a configuration like this would be ambiguous:

```javascript
{
	name: 'Example style',
	element: ['span', 'strong'],
	classes: [ 'foo' ]
}
```

and, if allowed, would require a clear contract like: The first element wins.

## 📃 Other details

* Browser: Chrome
* OS: Windows
* CKEditor version: 35.2.1
* Installed CKEditor plugins: [Styles](https://ckeditor.com/docs/ckeditor5/35.2.1/features/style.html)

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",14,28
ckeditor,ckeditor5,Styles Feature Clashes With Font Styling Features Regarding Downcast Priority,"## 📝 Provide detailed reproduction steps (if any)

1. Configure [Styles Feature](https://ckeditor.com/docs/ckeditor5/35.2.1/features/style.html) and [Font Feature](https://ckeditor.com/docs/ckeditor5/35.2.1/features/font.html) similar to this:

    ```javascript
    style: {
      definitions: [
        {
          name: ""Purple"",
          element: ""span"",
          classes: [""background-color--purple""],
        },
      ],
    }

    fontBackgroundColor: {
      colors: [{
        color: ""red"",
        label: ""Red"",
      }],
    },
    ```

3. Enter some text, select it.
4. Select background color from Fonts UI.
5. Select background style from Styles UI.

### ✔️ Expected result

As `style` attribute takes precedence over styles defined by `class` attribute, the background is red.

And preferably a corresponding view like:

```html
<span style=""background-color:red;"" class=""background-color--purple"">
  Test
</span>
```

### ❌ Actual result

The background is purple, as the corresponding view is:

```html
<span style=""background-color:red;"">
  <span class=""background-color--purple"">
    Test
  </span>
</span>
```

The model does not have any preferred style here:

```text
<paragraph>
  [fontBackgroundColor][htmlSpan]Test
</paragraph>
```

### ❓ Possible solution

As stated, the preferred result would be

```html
<span style=""background-color:red;"" class=""background-color--purple"">
  Test
</span>
```

as this can easier be handled in data-processing. As an alternative, at least the downcast result should be just the other way round to match HTML specification:

```html
<span class=""background-color--purple"">
  <span style=""background-color:red;"">
    Test
  </span>
</span>
```


## 📃 Other details

* Browser: Chrome
* OS: Windows
* First affected CKEditor version: 35.2.1
* Installed CKEditor plugins: [Styles](https://ckeditor.com/docs/ckeditor5/35.2.1/features/style.html), [Font (Background Color)](https://ckeditor.com/docs/ckeditor5/35.2.1/features/font.html)

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",mmichaelis,[],[],"['type:bug', 'support:2', 'package:style']",OPEN,12777,[],"Styles Feature Clashes With Font Styling Features Regarding Downcast Priority ## 📝 Provide detailed reproduction steps (if any)

1. Configure [Styles Feature](https://ckeditor.com/docs/ckeditor5/35.2.1/features/style.html) and [Font Feature](https://ckeditor.com/docs/ckeditor5/35.2.1/features/font.html) similar to this:

    ```javascript
    style: {
      definitions: [
        {
          name: ""Purple"",
          element: ""span"",
          classes: [""background-color--purple""],
        },
      ],
    }

    fontBackgroundColor: {
      colors: [{
        color: ""red"",
        label: ""Red"",
      }],
    },
    ```

3. Enter some text, select it.
4. Select background color from Fonts UI.
5. Select background style from Styles UI.

### ✔️ Expected result

As `style` attribute takes precedence over styles defined by `class` attribute, the background is red.

And preferably a corresponding view like:

```html
<span style=""background-color:red;"" class=""background-color--purple"">
  Test
</span>
```

### ❌ Actual result

The background is purple, as the corresponding view is:

```html
<span style=""background-color:red;"">
  <span class=""background-color--purple"">
    Test
  </span>
</span>
```

The model does not have any preferred style here:

```text
<paragraph>
  [fontBackgroundColor][htmlSpan]Test
</paragraph>
```

### ❓ Possible solution

As stated, the preferred result would be

```html
<span style=""background-color:red;"" class=""background-color--purple"">
  Test
</span>
```

as this can easier be handled in data-processing. As an alternative, at least the downcast result should be just the other way round to match HTML specification:

```html
<span class=""background-color--purple"">
  <span style=""background-color:red;"">
    Test
  </span>
</span>
```


## 📃 Other details

* Browser: Chrome
* OS: Windows
* First affected CKEditor version: 35.2.1
* Installed CKEditor plugins: [Styles](https://ckeditor.com/docs/ckeditor5/35.2.1/features/style.html), [Font (Background Color)](https://ckeditor.com/docs/ckeditor5/35.2.1/features/font.html)

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",3,28
ckeditor,ckeditor5,Move EditorUI to ckeditor5-ui,"There is circular dependency between `ckeditor5-core` and `ckeditor5-ui` packages. The problematic class is `EditorUI` that has dependency to `ckeditor5-ui`. The idea is to move `EditorUI` to `ckeditor5-ui`.

It would allow full implementation of #12720 (so that imports from other packages are only through `index.ts`, now it is not fully possible because of this circular dependency).

Scope:

*   Move `EditorUI` to `ckeditor5-ui` along with its tests.
*   Move `ckeditor5-ui` from `dependencies` to `devDependencies` in `packages/ckeditor5-core/package.json`.
*   Update all imports.
*   Update the documentation: https://ckeditor.com/docs/ckeditor5/latest/framework/guides/deep-dive/ui/custom-editor-creator.html + https://ckeditor.com/docs/ckeditor5/latest/examples/framework/multi-root-editor.html  and test implementations of the MultiRootEditor.
*   Create a migration guide (we know there are integrators that created their own editor implementations, so let's help them a bit).

Out of scope:

*   `ClassicTestEditor` etc. can stay where it is.
*   `Editor` class may import `EditorUI` as `import type` (circular type dependencies are ok).

This will be minor breaking change.",arkflpc,['arkflpc'],[],"['type:task', 'package:core', 'package:ui', 'squad:core', 'domain:ts']",CLOSED,12853,[],"Move EditorUI to ckeditor5-ui There is circular dependency between `ckeditor5-core` and `ckeditor5-ui` packages. The problematic class is `EditorUI` that has dependency to `ckeditor5-ui`. The idea is to move `EditorUI` to `ckeditor5-ui`.

It would allow full implementation of #12720 (so that imports from other packages are only through `index.ts`, now it is not fully possible because of this circular dependency).

Scope:

*   Move `EditorUI` to `ckeditor5-ui` along with its tests.
*   Move `ckeditor5-ui` from `dependencies` to `devDependencies` in `packages/ckeditor5-core/package.json`.
*   Update all imports.
*   Update the documentation: https://ckeditor.com/docs/ckeditor5/latest/framework/guides/deep-dive/ui/custom-editor-creator.html + https://ckeditor.com/docs/ckeditor5/latest/examples/framework/multi-root-editor.html  and test implementations of the MultiRootEditor.
*   Create a migration guide (we know there are integrators that created their own editor implementations, so let's help them a bit).

Out of scope:

*   `ClassicTestEditor` etc. can stay where it is.
*   `Editor` class may import `EditorUI` as `import type` (circular type dependencies are ok).

This will be minor breaking change.",14,22
ckeditor,ckeditor5,Make existing dropdowns initialize their panel content on first open,"Part of #12592[.](https://github.com/ckeditor/ckeditor5/issues/12592.) Research in #12682.

PoC in [`ck/12682-performance-reference...ck/12682-performance-lazy-init`](https://github.com/ckeditor/ckeditor5/compare/ck/12682-performance-reference...ck/12682-performance-lazy-init).

Scope:

*   Check with @oleq whether the change is fine.
*   Make existing UI components (dropdowns, widget toolbar repository, table cell and table props balloons) create their content on demand (this is – on first show).
    *   Scope: Most of that was already proposed in the PoC linked above. Let's not search for more types of UI – we got enough already. Additionally, we have many dropdowns that are parts of UI that is loaded on demand anyway (e.g. ones deep inside the table cell props panel), so optimizing them make no sense. The downside of this will be that we'll have two types of dropdowns: optimized and not optimized.
    *   Note: In cases where changing the code to use deferred initialization will turn out to significantly increase the complexity or require a larger refactoring of that part of the code, we can safely abort. It's not crucial to have all places changed as many of them will not have any visible impact on performance.
    *   Note: Tests will need to be updated.
*   Review existing documentation and align with our code changes:
    *   API docs for dropdown, its helpers, etc. E.g. https://ckeditor.com/docs/ckeditor5/latest/api/module_ui_dropdown_utils.html#function-addListToDropdown
    *   Guides, if any exist, regarding dropdown creation. E.g. [https://ckeditor.com/docs/ckeditor5/latest/framework/guides/architecture/ui-library.html#using-the-existing-components](https://ckeditor.com/docs/ckeditor5/latest/framework/guides/architecture/ui-library.html#using-the-existing-components)
    *   To not overcomplicate these examples and especially that our dropdowns will still use two ways to initialize their content, let's only add here side notes covering the ""Optimizing the initialization performance"" topic).",Reinmar,['niegowski'],"[{'body': ""My 2c regarding [https://github.com/ckeditor/ckeditor5/compare/ck/12682-performance-reference...ck/12682-performance-lazy-init#diff-5848ac0a8fcb5189cbf784a5a29e686ce98406901539650cee81f0a473df2c03R77-R81:](https://github.com/ckeditor/ckeditor5/compare/ck/12682-performance-reference...ck/12682-performance-lazy-init#diff-5848ac0a8fcb5189cbf784a5a29e686ce98406901539650cee81f0a473df2c03R77-R81:)\r\n\r\n* The whole concept is cool :)\r\n*   [https://github.com/ckeditor/ckeditor5/compare/ck/12682-performance-reference...ck/12682-performance-lazy-init#diff-5848ac0a8fcb5189cbf784a5a29e686ce98406901539650cee81f0a473df2c03R78](https://github.com/ckeditor/ckeditor5/compare/ck/12682-performance-reference...ck/12682-performance-lazy-init#diff-5848ac0a8fcb5189cbf784a5a29e686ce98406901539650cee81f0a473df2c03R78)\r\n\r\n```\r\ndropdownView.on( 'change:isOpen', ( evt, name, isOpen ) => {\r\n\t\t\t\tif ( isOpen && !dropdownView.listView ) {\r\n```\r\n\r\ncan be simplified into\r\n\r\n```\r\ndropdownView.once( 'change:isOpen', () => {\r\n```\r\n\r\nbecause every dropdown is closed when created\r\n\r\n*   Idea (for later): `addListToDropdown` could be smarter and check if the dropdown is open at the moment of execution and add things right away or create a `dropdownView.once( 'change:isOpen',` listener for itself if not.\xa0\r\n    *   This would hide the whole logic from features and keep it in dropdown utils.\r\n    *   Same in `addToolbarToDropdown`.\r\n    *   Problem: Things like `this._getLanguageListItemDefinitions` in [https://github.com/ckeditor/ckeditor5/compare/ck/12682-performance-reference...ck/12682-performance-lazy-init#diff-5848ac0a8fcb5189cbf784a5a29e686ce98406901539650cee81f0a473df2c03R79](https://github.com/ckeditor/ckeditor5/compare/ck/12682-performance-reference...ck/12682-performance-lazy-init#diff-5848ac0a8fcb5189cbf784a5a29e686ce98406901539650cee81f0a473df2c03R79) would not get deferred that way.\xa0\r\n        *   Off-the-bat solution: Make the collection of items (2nd argument) a `Collection|() => Collection`.\r\n* Idea: Let's defer the `ContextualBalloon` DOM elements initialization until the first show https://github.com/ckeditor/ckeditor5/blob/10f9f865e9b5830876529c0572b72e4e18300c5c/packages/ckeditor5-ui/src/panel/balloon/contextualballoon.ts#L138-L139."", 'author': 'oleq'}, {'body': ""> *   Idea: Let's defer the `ContextualBalloon` DOM elements initialization until the first show https://github.com/ckeditor/ckeditor5/blob/10f9f865e9b5830876529c0572b72e4e18300c5c/packages/ckeditor5-ui/src/panel/balloon/contextualballoon.ts#L138-L139  \r\n>     .\r\n\r\nThis case is not so simple, the `ContextualBalloon#view` is referenced on init in the following places (before showing code uses `view.element` to init `clickOutsideHandler()`):\r\n\r\n*   `ImageTextAlternativeUI`\r\n*   `MentionUI`\r\n*   `LinkUI`\r\n*   `WidgetToolbarRepository` (this might be not an issue)\r\n*   `BalloonToolbar` (this might be not an issue)\r\n*   `TableCellPropertiesUI` and `TablePropertiesUI` is already deferred by postponing panel view creation."", 'author': 'niegowski'}, {'body': '> This case is not so simple, the `ContextualBalloon#view` is referenced on init in the following places (before showing code uses `view.element` to init `clickOutsideHandler()`):\r\n\r\nLooks like it comes down to `clickOutsideHandler` initialization in most cases\r\n\r\n[https://github.com/ckeditor/ckeditor5/blob/30acb8f9d748dbd3159b8d56d69602f53e48200b/packages/ckeditor5-mention/src/mentionui.js#L133-L138](https://github.com/ckeditor/ckeditor5/blob/30acb8f9d748dbd3159b8d56d69602f53e48200b/packages/ckeditor5-mention/src/mentionui.js#L133-L138)\r\n\r\nWe could probably make `contextElements` a callback and work around this problem.', 'author': 'oleq'}, {'body': 'The ""minor"" breaking changes for release v36.0.0 state that you have to ""make sure that you access the dropdown panel/toolbar items after the dropdown is open/the toolbar is visible.\r\n\r\nWell, how exactly can this be done? It would be nice to have some examples in the update guide for v36.x. Custom plugins of our build need to listen to the submit-event of LinkUI.formView or manipulate the listView of dropdown buttons, for example. And this should only happen once, I obviously don\'t want to bind events everytime a view is opened or manipulate a listView everytime it is shown.', 'author': 'TobiasHartlehnert'}, {'body': ""@niegowski I think we had somewhere an example but I'm not sure. Does it ring any bells on your side?"", 'author': 'Witoso'}, {'body': '@Witoso maybe you are looking for this? https://github.com/ckeditor/ckeditor5/issues/4836#issuecomment-1422740830', 'author': 'niegowski'}, {'body': ""> @Witoso maybe you are looking for this? [#4836 (comment)](https://github.com/ckeditor/ckeditor5/issues/4836#issuecomment-1422740830)\r\n\r\nThanks, listening to change:visibleView of ContextualBalloon works great. I figured this would be the solution, just wasn't sure if this is best practice in this scenario.\r\n\r\nNow, this seems to work only for toolbars that are triggered by actions inside the editable, i.e. clicking on links or images. When clicking a button in the main editor toolbar that opens a dropdown (like the headings dropdown from the HeadingUI), change:visibleView of ContextualBalloon is not triggered. I need to now when the buttons of theses dropdowns are initially rendered/visible. What would be the correct emitter and event in this case?"", 'author': 'TobiasHartlehnert'}, {'body': ""Maybe this will help with dropdowns: \r\n\r\nhttps://github.com/ckeditor/ckeditor5/blob/2cffea94688e06c424d513d41d3fa88bb54a4189/packages/ckeditor5-ui/src/dropdown/utils.ts#L195-L199\r\n\r\nI tested it in some manual test where the first toolbar item is a headings dropdown: \r\n```js\r\neditor.ui.view.toolbar.items.first.once( 'change:isOpen', ( { source } ) => console.log( source.listView ) )\r\n```\r\n\r\nSo more generic it would be:\r\n```js\r\ndropdownView.once( 'change:isOpen', ( { source } ) => console.log( source.listView ) )\r\n```"", 'author': 'niegowski'}, {'body': 'Thanks, works great, too! Appreciate the quick help.', 'author': 'TobiasHartlehnert'}]","['type:task', 'package:ui', 'package:widget', 'package:table', 'domain:ui/ux', 'support:2', 'squad:core', 'domain:performance', 'follow-up:how-to']",CLOSED,12890,['12592'],"Make existing dropdowns initialize their panel content on first open Part of #12592[.](https://github.com/ckeditor/ckeditor5/issues/12592.) Research in #12682.

PoC in [`ck/12682-performance-reference...ck/12682-performance-lazy-init`](https://github.com/ckeditor/ckeditor5/compare/ck/12682-performance-reference...ck/12682-performance-lazy-init).

Scope:

*   Check with @oleq whether the change is fine.
*   Make existing UI components (dropdowns, widget toolbar repository, table cell and table props balloons) create their content on demand (this is – on first show).
    *   Scope: Most of that was already proposed in the PoC linked above. Let's not search for more types of UI – we got enough already. Additionally, we have many dropdowns that are parts of UI that is loaded on demand anyway (e.g. ones deep inside the table cell props panel), so optimizing them make no sense. The downside of this will be that we'll have two types of dropdowns: optimized and not optimized.
    *   Note: In cases where changing the code to use deferred initialization will turn out to significantly increase the complexity or require a larger refactoring of that part of the code, we can safely abort. It's not crucial to have all places changed as many of them will not have any visible impact on performance.
    *   Note: Tests will need to be updated.
*   Review existing documentation and align with our code changes:
    *   API docs for dropdown, its helpers, etc. E.g. https://ckeditor.com/docs/ckeditor5/latest/api/module_ui_dropdown_utils.html#function-addListToDropdown
    *   Guides, if any exist, regarding dropdown creation. E.g. [https://ckeditor.com/docs/ckeditor5/latest/framework/guides/architecture/ui-library.html#using-the-existing-components](https://ckeditor.com/docs/ckeditor5/latest/framework/guides/architecture/ui-library.html#using-the-existing-components)
    *   To not overcomplicate these examples and especially that our dropdowns will still use two ways to initialize their content, let's only add here side notes covering the ""Optimizing the initialization performance"" topic).",14,24
ckeditor,ckeditor5,Cannot drop between widgets,"## 📝 Provide a description of the improvement

1. Create a content when there are two block object widgets (e.g. two images).
2. Try to drag&drop something (another widget) between them.
3. This is impossible, there's no drop target, when dropped the dragged widget will overwrite one of the existing widgets.",scofalik,[],"[{'body': ""Related issue https://github.com/ckeditor/ckeditor5/issues/11737\r\nMoreover, you can select part of the text and drag'n'drop it on the image - the image will be replaced by the text. So if you have several images (widgets) in a row it is impossible to drop an image (or text) between existing ones."", 'author': 'leonkj'}, {'body': ""We've improved drag-and-drop of blocks in \\[v40.0.0\\](https://github.com/ckeditor/ckeditor5/releases/tag/v40.0.0), which has just been released, and the placement between widgets is possible!\r\n\r\nGot more thoughts or feedback? There are still improvements we would like to make, follow and 👍 the #15110, if you're interested."", 'author': 'Witoso'}]","['type:improvement', 'package:widget', 'squad:core']",CLOSED,12894,[],"Cannot drop between widgets ## 📝 Provide a description of the improvement

1. Create a content when there are two block object widgets (e.g. two images).
2. Try to drag&drop something (another widget) between them.
3. This is impossible, there's no drop target, when dropped the dragged widget will overwrite one of the existing widgets.",19,25
ckeditor,ckeditor5,Can't set the style on <div> using Styles dropdown,"## 📝 Provide detailed reproduction steps (if any)

*   Add GHS configuration:

```javascript
htmlSupport: {
                allow: [
                    {
                        name: /.*/,
                        attributes: true,
                        classes: true,
                        styles: true
                    }
                ] 
 }
```

*   Add Styles configuration:

```javascript
style: {
   definitions: [
      { name: 'Message: Success', element: 'div', classes: ['alert', 'alert-success'] },
      { name: 'Message: Info', element: 'div', classes: ['info-boxalert', 'alert-info'] }
   ]
}
```

*   Call `editor.setData( '<div>Test</div>' )` and put the selection inside of it.
*   Try to apply defined styles.

### ✔️ Expected result

_It's possible to apply styles to the element._

### ❌ Actual result

_It's impossible to apply styles to the element._

## 📃 Other details

Might be related - #12625.

The same scenario works fine for the example `<section>` element.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",Mgsy,['niegowski'],"[{'body': 'Possibly related to https://github.com/ckeditor/ckeditor5/issues/11577', 'author': 'JTubex'}, {'body': ""Confirming as per #13763.\r\nOn `div`'s it works partially.\r\nWorks:\r\n```html\r\n<div>\r\n    <p>\r\n        Hello, world!\r\n    </p>\r\n</div>\r\n```\r\n\r\nDoesn't work:\r\n```html\r\n<div>\r\n  Hello, world!\r\n</div>\r\n```"", 'author': 'Witoso'}, {'body': 'This is a fairly significant regression for several folks trying to upgrade CKEditor 4 to CKEditor 5 on Drupal 9 and losing what were previously working block styles. \r\n\r\nhttps://www.drupal.org/project/drupal/issues/3326261#comment-15031422 (33 followers on the issue)\r\n', 'author': 'jameswilson'}, {'body': 'Thanks for raising this @jameswilson, we are going to ship a few updates and fixes of the Style dropdown in the next release. This is not part of it unfortunately but we will discuss it internally.', 'author': 'Witoso'}, {'body': '@wimleers requested I upload some screenshots from Drupal 9 + CKEditor 4 config vs. same config in CKE5 to demonstrate the basics of the issue. (We have plugins to make adding style dropdowns easier than writing the JS demonstrated in previous comments of this issue).\r\n\r\nI should note that the issue here isn\'t limited to DIV, but pretty much any block-level element appearing in the styles dropdown, like UL, OL, DL, TABLE, H1, H2, etc.  I havent done extensive testing on which block level items are affected.\r\n\r\n<img width=""922"" alt=""Screen Shot 2023-05-01 at 1 41 04 PM"" src=""https://user-images.githubusercontent.com/243532/236233165-557697b6-2981-40e5-a669-8f0a1011b53f.png"">\r\n\r\nI’ve explicitly allowed the `<div>` tag in the ""manually editable tags"" settings as well, but they’re still disabled in the dropdown even when cursor placed inside an empty `<div>` manually added in Source mode.\r\n\r\n<img width=""883"" alt=""Screen Shot 2023-05-01 at 1 40 43 PM"" src=""https://user-images.githubusercontent.com/243532/236233206-52c5693f-6066-44c1-9dcc-0f32b1904d98.png"">\r\n\r\n\r\nCKE4: \r\n<img width=""234"" alt=""Screen Shot 2023-05-01 at 1 39 21 PM"" src=""https://user-images.githubusercontent.com/243532/236233820-686a8316-c9aa-44d5-9682-2724a424c9af.png"">\r\n\r\n\r\nCKE5:\r\n<img width=""462"" alt=""Screen Shot 2023-05-01 at 1 39 02 PM"" src=""https://user-images.githubusercontent.com/243532/236233937-e7367f00-2d50-4d8f-b71a-de83a334938e.png"">\r\n\r\nI should note that one can still manually switch to Source mode, and enter the HTML code manually and it works.  Eg `<div class=""alert success""> </div>`\r\n\r\nCKE5, with manual edits via src mode:\r\n<img width=""1312"" alt=""Screen Shot 2023-05-01 at 2 21 13 PM"" src=""https://user-images.githubusercontent.com/243532/236234221-074d974f-1fb3-4e4a-a641-09755429b93a.png"">\r\n\r\n\r\n', 'author': 'jameswilson'}, {'body': ""There's one important difference between CKE4 and CKEdi5 that needs mentioning, that relates to your case @jameswilson as well.\r\n\r\nStyle dropdown in CKE5 will not add the div when you select the style. I noticed it [was possible in CKE4](https://ckeditor.com/docs/ckeditor4/latest/examples/styles.html). The style in CKE5 is only applicable to the element that is already in the editor and matches the element criteria. The addition of a new div element would need to be entered with the Source editing which is not the best content creation experience. I'm afraid we also need to consider how the divs should be added (or an element that resembles their purpose) or we should allow the style dropdown to create such elements. WDYT @Reinmar?\r\n\r\n@wimleers FYI we need to think a bit on this, so it may take time.\r\n"", 'author': 'Witoso'}, {'body': '1. First action on our side could be enabling the styling on ""paragraph like"" `<div>`s (model\'s `htmlDivParagraph`). To unblock this on Drupal\'s side and the current CKEditor 4 content.\r\n2. Second step is to refine and figure out from the UX side how to add the divs (containers vs blocks).\r\n\r\nThoughts:\r\n* container divs are similar in behavior to the blockquote feature.\r\n* blocks divs are similar in behavior to the paragraph/headings features.', 'author': 'Witoso'}, {'body': ""Inserting elements by Style dropdown will be tracked in the https://github.com/ckeditor/ckeditor5/issues/14372\n\n**Scope:**\nEnable the possibility of styling and removing the style of already present `div`'s. (`htmlDivParagraph`)"", 'author': 'Witoso'}, {'body': '👍 Captured and shared with the Drupal community at https://www.drupal.org/project/drupal/issues/3326261#comment-15107914 😊', 'author': 'wimleers'}, {'body': '🥳 ', 'author': 'wimleers'}]","['type:bug', 'support:2', 'squad:core', 'package:style']",CLOSED,13341,[],"Can't set the style on <div> using Styles dropdown ## 📝 Provide detailed reproduction steps (if any)

*   Add GHS configuration:

```javascript
htmlSupport: {
                allow: [
                    {
                        name: /.*/,
                        attributes: true,
                        classes: true,
                        styles: true
                    }
                ] 
 }
```

*   Add Styles configuration:

```javascript
style: {
   definitions: [
      { name: 'Message: Success', element: 'div', classes: ['alert', 'alert-success'] },
      { name: 'Message: Info', element: 'div', classes: ['info-boxalert', 'alert-info'] }
   ]
}
```

*   Call `editor.setData( '<div>Test</div>' )` and put the selection inside of it.
*   Try to apply defined styles.

### ✔️ Expected result

_It's possible to apply styles to the element._

### ❌ Actual result

_It's impossible to apply styles to the element._

## 📃 Other details

Might be related - #12625.

The same scenario works fine for the example `<section>` element.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",3,28
ckeditor,ckeditor5,[TS] Add linter rules for enforcing imports of module augmentation and no explicit return type,"This is a follow-up of #13433.

Let's create `eslint` rules that will help to avoid errors described in #13433.
[Error] Eslint rules should throw an error if we import from `src`. 

[Error] We should also have a rule that will enforce no explicit return type in requires() methods. Return type should be inferred. Related to #13714.

Third case: as const, and TBD what to do there (rule, types specs).

Fourth case:
[Error] PluginName returns a specific name (string literal), not a generic string.",arkflpc,['filipsobol'],"[{'body': 'We should also have a rule that will enforce **no explicit return type** in `requires()` methods. Return type should be inferred. Related to https://github.com/ckeditor/ckeditor5/pull/13714.', 'author': 'filipsobol'}, {'body': 'Third case: `as const`, and TBD what to do there (rule, types specs)', 'author': 'Witoso'}]","['squad:devops', 'squad:core', 'domain:ts']",CLOSED,13434,[],"[TS] Add linter rules for enforcing imports of module augmentation and no explicit return type This is a follow-up of #13433.

Let's create `eslint` rules that will help to avoid errors described in #13433.
[Error] Eslint rules should throw an error if we import from `src`. 

[Error] We should also have a rule that will enforce no explicit return type in requires() methods. Return type should be inferred. Related to #13714.

Third case: as const, and TBD what to do there (rule, types specs).

Fourth case:
[Error] PluginName returns a specific name (string literal), not a generic string.",23,22
ckeditor,ckeditor5,[TS] Suggest and validate names of plugins and commands at type level,"Currently, TypeScript doesn't suggest names for available plugins and commands. It also doesn't check whether plugins or commands with the given name even exist.

Ideally, TypeScript should suggest names of registered plugins and commands, and show errors if we pass an invalid name.

![](https://user-images.githubusercontent.com/4145208/227228241-21e0626b-cd37-48a0-a97e-bb6cac567bfb.png)",filipsobol,[],"[{'body': 'What about `editor.execute()`? AFAIU the augmentation was supposed to ensure exactly that.', 'author': 'Reinmar'}, {'body': '`editor.execute()` behaves exactly the same.\r\n\r\n![](https://user-images.githubusercontent.com/4145208/227244502-d241836e-b798-4326-ac83-a56ec47d80d6.jpg)', 'author': 'filipsobol'}, {'body': 'This is working as expected. We did not want to force plugin developers to augment `PluginsMap` and `CommandsMap` so we added a fallback for not registered plugins and commands: \r\n\r\nhttps://github.com/ckeditor/ckeditor5/blob/e40ee9cdef3ff420bb6454bf0e209c65e0bf187c/packages/ckeditor5-core/src/plugincollection.ts#L648-L650\r\n\r\nhttps://github.com/ckeditor/ckeditor5/blob/e40ee9cdef3ff420bb6454bf0e209c65e0bf187c/packages/ckeditor5-core/src/commandcollection.ts#L133-L135\r\n\r\nThe progressive improvement with those maps is that if you specify a mapped command name then other parameters are validated:\r\n\r\n![image](https://user-images.githubusercontent.com/1232187/227501046-097b6a4f-a5f4-453b-a902-8f5a37673160.png)\r\n\r\nSame for `PluginsMap`, it provides a plugin type for a specified plugin name:\r\n\r\n![image](https://user-images.githubusercontent.com/1232187/227501389-11811b58-d3a9-4451-a0fa-3a1c793e532d.png)\r\n', 'author': 'niegowski'}, {'body': 'I guess the scope of this would be to include information in the docs on how to properly augment Plugins and Commands.', 'author': 'Witoso'}]","['type:improvement', 'domain:dx', 'squad:core', 'domain:integration-dx', 'domain:framework-dx']",OPEN,13743,[],"[TS] Suggest and validate names of plugins and commands at type level Currently, TypeScript doesn't suggest names for available plugins and commands. It also doesn't check whether plugins or commands with the given name even exist.

Ideally, TypeScript should suggest names of registered plugins and commands, and show errors if we pass an invalid name.

![](https://user-images.githubusercontent.com/4145208/227228241-21e0626b-cd37-48a0-a97e-bb6cac567bfb.png)",31,22
ckeditor,ckeditor5,[TS] Add editingDowncast and dataDowncast in conversion.for,"## 📝 Provide a description of the improvement

Add specific types to the method of `conversion.for`, `editingDowncast|Upcast`, `dataDowncast|Upcast`, to achieve better completion and interface description.
To answer if a general string is needed there.

![image](https://user-images.githubusercontent.com/9881379/234527797-86f25fc1-7306-447d-9331-873c1ddcb4c8.png)

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",Witoso,['filipsobol'],[],"['type:improvement', 'squad:core']",CLOSED,13750,[],"[TS] Add editingDowncast and dataDowncast in conversion.for ## 📝 Provide a description of the improvement

Add specific types to the method of `conversion.for`, `editingDowncast|Upcast`, `dataDowncast|Upcast`, to achieve better completion and interface description.
To answer if a general string is needed there.

![image](https://user-images.githubusercontent.com/9881379/234527797-86f25fc1-7306-447d-9331-873c1ddcb4c8.png)

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",31,22
ckeditor,ckeditor5,[Style dropdown] Add styles to images <img>,"Add a missing integration of Style dropdown with images (`img`).

Styling of images is already possible via the `ImageStyle` [plugin](https://ckeditor.com/docs/ckeditor5/latest/features/images/images-styles.html#approaches-to-styling-images). We would need to understand how do we approach this in relation to this feature.

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.",Witoso,[],[],"['type:task', 'squad:core', 'package:style']",OPEN,13778,[],"[Style dropdown] Add styles to images <img> Add a missing integration of Style dropdown with images (`img`).

Styling of images is already possible via the `ImageStyle` [plugin](https://ckeditor.com/docs/ckeditor5/latest/features/images/images-styles.html#approaches-to-styling-images). We would need to understand how do we approach this in relation to this feature.

---

If you'd like to see this feature implemented, add a 👍 reaction to this post.",14,28
ckeditor,ckeditor5,[TS] Remove community types in @types,"Follow the procedure to remove the types after our native types release from **all** ckeditor__ckeditor5-* packages.
https://github.com/DefinitelyTyped/DefinitelyTyped#removing-a-package

",Witoso,['filipsobol'],"[{'body': 'Waiting for https://github.com/DefinitelyTyped/DefinitelyTyped/pull/65277 to be reviewed and merged.', 'author': 'filipsobol'}]","['type:task', 'squad:core', 'domain:ts']",CLOSED,13830,[],"[TS] Remove community types in @types Follow the procedure to remove the types after our native types release from **all** ckeditor__ckeditor5-* packages.
https://github.com/DefinitelyTyped/DefinitelyTyped#removing-a-package

",11,22
ckeditor,ckeditor5,[TS] Update README,"Add a section to quickstart and describe this project is written in typescript, provides types, and link to: https://ckeditor.com/docs/ckeditor5/latest/installation/working-with-typescript.html

A badge maybe could be added to catch the sight earlier: https://github.com/microsoft/TypeScript/issues/31569",Witoso,['gorzelinski'],"[{'body': 'Questions to answer:\n* should we add the badge?\n* should it be added to all READMEs?', 'author': 'Witoso'}, {'body': '@apadol-cksource could you take it and discuss it with your team?', 'author': 'Witoso'}, {'body': '@Witoso will do. ', 'author': 'apadol-cksource'}]","['type:improvement', 'squad:ccx']",CLOSED,13831,[],"[TS] Update README Add a section to quickstart and describe this project is written in typescript, provides types, and link to: https://ckeditor.com/docs/ckeditor5/latest/installation/working-with-typescript.html

A badge maybe could be added to catch the sight earlier: https://github.com/microsoft/TypeScript/issues/31569",6,22
ckeditor,ckeditor5,[TS] Add types to DLLs,"When using DLL's I want to have access to types.

Examples from the prototypes: 
```ts
// image.d.ts:
import type * as image from '@ckeditor/ckeditor5-image';

declare module 'ckeditor5/build/ckeditor5-dll.js' {
	interface CKEditor5DLL {
		image: typeof image;
	}
}
```
```ts
// ckeditor5-dll.d.ts
import type * as clipboard from '@ckeditor/ckeditor5-clipboard';
import type * as core from '@ckeditor/ckeditor5-core';
import type * as engine from '@ckeditor/ckeditor5-engine';
import type * as enter from '@ckeditor/ckeditor5-enter';
import type * as paragraph from '@ckeditor/ckeditor5-paragraph';
import type * as selectAll from '@ckeditor/ckeditor5-select-all';
import type * as typing from '@ckeditor/ckeditor5-typing';
import type * as ui from '@ckeditor/ckeditor5-ui';
import type * as undo from '@ckeditor/ckeditor5-undo';
import type * as upload from '@ckeditor/ckeditor5-upload';
import type * as utils from '@ckeditor/ckeditor5-utils';
import type * as watchdog from '@ckeditor/ckeditor5-watchdog';
import type * as widget from '@ckeditor/ckeditor5-widget';

export interface CKEditor5DLL {
	clipboard: typeof clipboard;
	core: typeof core;
	engine: typeof engine;
	enter: typeof enter;
	paragraph: typeof paragraph;
	selectAll: typeof selectAll;
	typing: typeof typing;
	ui: typeof ui;
	undo: typeof undo;
	upload: typeof upload;
	utils: typeof utils;
	watchdog: typeof watchdog;
	widget: typeof widget;
}

declare global {
	interface Window {
		CKEditor5: CKEditor5DLL;
	}
}
```",Witoso,['niegowski'],"[{'body': 'Decisions to make:\n1. generate from some file? vs manual creation of`d.ts`\n2. if the manual method, where to keep them? `build` may not be the best place for this.\n3. one file: `index-dll.ts` that is used during DLL build?\n\nWe need to start to check this.\n', 'author': 'Witoso'}]","['squad:core', 'status:planned']",OPEN,13855,[],"[TS] Add types to DLLs When using DLL's I want to have access to types.

Examples from the prototypes: 
```ts
// image.d.ts:
import type * as image from '@ckeditor/ckeditor5-image';

declare module 'ckeditor5/build/ckeditor5-dll.js' {
	interface CKEditor5DLL {
		image: typeof image;
	}
}
```
```ts
// ckeditor5-dll.d.ts
import type * as clipboard from '@ckeditor/ckeditor5-clipboard';
import type * as core from '@ckeditor/ckeditor5-core';
import type * as engine from '@ckeditor/ckeditor5-engine';
import type * as enter from '@ckeditor/ckeditor5-enter';
import type * as paragraph from '@ckeditor/ckeditor5-paragraph';
import type * as selectAll from '@ckeditor/ckeditor5-select-all';
import type * as typing from '@ckeditor/ckeditor5-typing';
import type * as ui from '@ckeditor/ckeditor5-ui';
import type * as undo from '@ckeditor/ckeditor5-undo';
import type * as upload from '@ckeditor/ckeditor5-upload';
import type * as utils from '@ckeditor/ckeditor5-utils';
import type * as watchdog from '@ckeditor/ckeditor5-watchdog';
import type * as widget from '@ckeditor/ckeditor5-widget';

export interface CKEditor5DLL {
	clipboard: typeof clipboard;
	core: typeof core;
	engine: typeof engine;
	enter: typeof enter;
	paragraph: typeof paragraph;
	selectAll: typeof selectAll;
	typing: typeof typing;
	ui: typeof ui;
	undo: typeof undo;
	upload: typeof upload;
	utils: typeof utils;
	watchdog: typeof watchdog;
	widget: typeof widget;
}

declare global {
	interface Window {
		CKEditor5: CKEditor5DLL;
	}
}
```",27,22
ckeditor,ckeditor5,[Experimental] Drag and Drop of blocks,"We aim to have a working experimental feature/plugin/configuration flag that we could test. It's an MVP, this would be a starting point for future capabilities with a limited scope.

### Use cases

As a user of the **Balloon block editor**, when I select a block e.g. a paragraph, image, or table, I can drag it, and place it between other blocks.

### Out of scope

* Hover to pick the block - due to complexity we decided that we will stay with select.
* Working on all editors, now we will focus on the Balloon block editor.
* Moving the mouse outside of the editable (e.g. left side).

### Scope

1. Finding the block to move:
    1. Showing the d&d action
        1. the icon should show on selecting the block(s) (as now).
        2. placement of the icon will be configurable via CSS (as now).
    2. D&D of multiple selected blocks
        1. the icon shows near the first of the selected blocks (as now).
2. When I hover over the icon, the hand appears.
    1. Actions - on click: open toolbar, hold: d&d.
    2. Change the tooltip’s text to mention ""open toolbar"" and ""drag and drop"" actions.
3. The logic of the drag & drop:
    1. if an inline element is selected, possible drop locations:
        1. between blocks,
        2. inline.
    2. if one block or multiple block elements are selected, possible drop locations:
        1. between blocks
4. Visual indication (blue line) appears where the block will be placed for the before/after placements possibility.
    1. as you move the cursor the dimmed block/element should move with the mouse (default browser's behavior).
    2. the blue line appears between blocks (MVP: it's possible that it will be on some elements like floated images)
    3. the placement of the line logic should be applied, see **Moving** ([internal Miro](https://miro.com/app/board/uXjVMWG-W7M=/?moveToWidget=3458764551341037627&cot=14)). For example, if I'm moving the cursor in the first half of the multiline block, it should suggest above the block placement. If the lower half, show below the block placement.
5. Enabling the block d&d.
6. Maturity of pilcrow handling.
7. On scrolling behavior (line adapts).

### Other thoughts

* blue line’s height should be as the width of the current drag and drop cursor.
* showing line with position absolute? (ref: pagination, magic line CKE4). Other CSS may cause layout shifts.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",Witoso,['niegowski'],"[{'body': '@niegowski could you update the TBD section on decisions we need to make?', 'author': 'Witoso'}, {'body': 'Videos/GIFs here would be _really_ valuable 😇 🤓 ', 'author': 'wimleers'}, {'body': '@wimleers here you go!\r\n\r\nhttps://user-images.githubusercontent.com/9881379/236452449-95df5e46-f845-4dd0-9391-8d5b74a2379a.mov\r\n\r\n', 'author': 'Witoso'}]","['type:improvement', 'package:clipboard', 'domain:ui/ux', 'squad:core']",CLOSED,14033,[],"[Experimental] Drag and Drop of blocks We aim to have a working experimental feature/plugin/configuration flag that we could test. It's an MVP, this would be a starting point for future capabilities with a limited scope.

### Use cases

As a user of the **Balloon block editor**, when I select a block e.g. a paragraph, image, or table, I can drag it, and place it between other blocks.

### Out of scope

* Hover to pick the block - due to complexity we decided that we will stay with select.
* Working on all editors, now we will focus on the Balloon block editor.
* Moving the mouse outside of the editable (e.g. left side).

### Scope

1. Finding the block to move:
    1. Showing the d&d action
        1. the icon should show on selecting the block(s) (as now).
        2. placement of the icon will be configurable via CSS (as now).
    2. D&D of multiple selected blocks
        1. the icon shows near the first of the selected blocks (as now).
2. When I hover over the icon, the hand appears.
    1. Actions - on click: open toolbar, hold: d&d.
    2. Change the tooltip’s text to mention ""open toolbar"" and ""drag and drop"" actions.
3. The logic of the drag & drop:
    1. if an inline element is selected, possible drop locations:
        1. between blocks,
        2. inline.
    2. if one block or multiple block elements are selected, possible drop locations:
        1. between blocks
4. Visual indication (blue line) appears where the block will be placed for the before/after placements possibility.
    1. as you move the cursor the dimmed block/element should move with the mouse (default browser's behavior).
    2. the blue line appears between blocks (MVP: it's possible that it will be on some elements like floated images)
    3. the placement of the line logic should be applied, see **Moving** ([internal Miro](https://miro.com/app/board/uXjVMWG-W7M=/?moveToWidget=3458764551341037627&cot=14)). For example, if I'm moving the cursor in the first half of the multiline block, it should suggest above the block placement. If the lower half, show below the block placement.
5. Enabling the block d&d.
6. Maturity of pilcrow handling.
7. On scrolling behavior (line adapts).

### Other thoughts

* blue line’s height should be as the width of the current drag and drop cursor.
* showing line with position absolute? (ref: pagination, magic line CKE4). Other CSS may cause layout shifts.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",5,25
ckeditor,ckeditor5,🖼️  Supporting image height attribute,"# Image feature compatibility with CKEditor 4 (height)

**[UPDATE]**

### Please test things out if you can, the more feedback and eyeballs we get, the more confident we will be that the implementation is correct.

This feature hit the `master` branch and is available on nightly releases and [nightly docs](https://ckeditor5.github.io/docs/nightly/ckeditor5/latest/examples/builds-custom/full-featured-editor.html) to test.

[The details of the changes are described in the comment below.
](https://github.com/ckeditor/ckeditor5/issues/14146#issuecomment-1632607316)

<details>
  <summary>Archive of discovery</summary>

## Main problem statements

When implementing images it looks like there are still some areas in which CKEditor 5 lags behind the CKE4. This applies only to inline images because CKEditor 4’s `image` plugin could only generate inline images. We don’t have to care about the behavior of `image2` (low popularity).

After initial research, it looks like the main missing attribute is height, and the following problems need to be solved.

1. How to preserve the image’s height and width with **the content that is already out there** and is loaded to the editor.
2. Should **we eagerly set image height and width** as it will produce better rendering? What about:
    1. the resizing implementation?
    2. should we set those values proactively when uploading of the image happens?

## Feedback and Community

- This is very important for modern browsers as height and width [prevent layout shifts and improve the experience of your site visitors.](https://www.smashingmagazine.com/2020/03/setting-height-width-images-important-again/)
- We have reports from Drupal about missing `height` and its relation to image resizing.
    - [https://www.drupal.org/project/drupal/issues/3336446#comment-14888366](https://www.drupal.org/project/drupal/issues/3336446#comment-14888366)
    - [https://www.drupal.org/project/drupal/issues/3321296](https://www.drupal.org/project/drupal/issues/3321296)
    - When the image is resized in CKEditor 4, both `height` and `width` attributes are added. The attributes persist if the text format is upgraded to use CKEditor 5.
- https://github.com/ckeditor/ckeditor5/issues/5154
- https://github.com/ckeditor/ckeditor5/issues/10838
- https://github.com/ckeditor/ckeditor5/issues/11393

### FYI

The `srcset` attribute specifies the image variants dedicated for the various screen sizes for the web browser to choose from (360px, 720px, 1080px, 1440px, etc.). For instance, the `image.jpg` file uploaded by the user will have the following markup:

`sizes`One or more strings separated by commas, indicating a set of source sizes. Each source size consists of:
1. A [media condition](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries#syntax). This must be omitted for the last item in the list.
2. A source size value.
Media Conditions describe properties of the *viewport*, not of the *image*. For example, `(max-height: 500px) 1000px` proposes to use a source of 1000px width, if the *viewport* is not higher than 500px.

If the `srcset` attribute uses width descriptors, the `sizes` attribute must also be present, or the `srcset` itself will be ignored.

CKEditor5 when **using responsive image** (EasyImage) the `width` attribute is set but not the `height`. CKBox is not doing it.

Good explanation of the impact to `width` and `height` on CLS: [https://www.aleksandrhovhannisyan.com/blog/setting-width-and-height-on-images/](https://www.aleksandrhovhannisyan.com/blog/setting-width-and-height-on-images/)

> Essentially, the width and height attributes are meant for **initializing an image’s aspect ratio**, not for dictating the width and height at which it renders—that’s the job of CSS. Once an image has loaded in, if you want to apply some custom CSS to size it differently, you can do so without changing the image’s intrinsic aspect ratio sizing.

## Use cases

Problem 1: I have HTML with `width` and `height` set and it doesn't load to the editor.
Outcome: Load the width and height attributes of the image, e.g. setData content to the model (no GHS).

---

Problem 2: When I resized an image (with `width` and `height`), and I have the resized image placed on the page there should not be a layout shift. Also, I still want to resize with **the aspect ratio locked**.
Outcome: `width` and `height` stay but the image is resized with the aspect ratio intact.

---

Problem 3: When I insert images, I want `width` and `height` set automatically.
Outcome: After upload those attributes appear on the image element.


## Scope

* [x] https://github.com/ckeditor/ckeditor5/issues/14147
* [x] https://github.com/ckeditor/ckeditor5/issues/14313
* [x] #14201 (solving problems 1 and 2)
* [x] #14202 (solving problem 3)
* [x] https://github.com/ckeditor/ckeditor5/issues/14357
* [x] https://github.com/ckeditor/ckeditor5/issues/14366
* [x] https://github.com/ckeditor/ckeditor5/issues/14542
* [x] https://github.com/ckeditor/ckeditor5/issues/14532
* [x] https://github.com/ckeditor/ckeditor5/issues/14557
* [x] https://github.com/ckeditor/ckeditor5/issues/14531

## Out of scope

Problem 4: As a user, I want to change the `width` and `height` attributes.
Outcome: `width` and `height` attributes are configurable on the UI.

Decided to keep it out of scope for now. `width` and `height` should set the [intrinsic size of the image](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#supported_image_formats) to lock the aspect ratio for the browser, and restyling of images should be done via the CSS. 
</details>
",Witoso,['mmotyczynska'],"[{'body': 'Questions:\n* non intuitive when setting only `height`.\n* `height: auto` collides with a set height in the content.\n* Should there be a config option that turns it off?\n* Where to put it in the docs?', 'author': 'Witoso'}, {'body': ""We decided that we will set those attributes on upload by default as the most content-friendly option.\r\n\r\nHowever, research needs to be conducted on how the proposed solution will behave in a variety of content sources. This initiative is a hit or miss as we cannot roll back easily. CKEditor 4 output data, and Drupal's content, as well as users' intent preservation, need to be taken into account. One of the challenges is resizing in CKE4 by tweaking the aspect ratio of the original image.\r\n\r\nTracking in: https://github.com/ckeditor/ckeditor5/issues/14313"", 'author': 'Witoso'}, {'body': ""We want to share what's our approach to this topic so far and what are the changes that will. We will not share yet detailed rational why some decisions were made, as we plan to write everything down after we complete all tasks and cover the edge cases.\r\n\r\nThe brief summary of the context and decisions:\r\n\r\n*   We intend to support `height` and `width` attributes as it produces good quality content:\r\n    *   Those attributes **will be set automatically on the upload step**.\r\n    *   We will not change already existing content, loading HTML (i.e., `setData`) with images will not set up those attributes.\r\n    *   Changes to an image (e.g., resize) will trigger creation of those attributes. We decided that those attributes are crucial, and actions on a current image that doesn't have them, should improve this image's markup.\r\n*   We need to support as much as possible the user intents, especially from the content that was produced in the CKEditor 4.\r\n    *   In CKE4, it was possible to tweak the aspect-ratio of an image. We decided to support this in the editor, and if the aspect-ratio was changed, we should show it as changed.\r\n*   We don't introduce now the options to set `width` and `height` via the editor's UI or a resize with unlocked aspect-ratio. Mostly due to the complexities of the changes so far, we try not to introduce a scope creep.\r\n\r\nThis is a very complex, and multidimensional change as the scenarios and different configs create a very challenging matrix of behaviors and effects. We spent a lot of time on this, and we are close to the finish line.\r\n\r\nThe changes can be tested on the `ck/epic/14146-support-image-height-attribute` branch. A special manual test was created to reflect different scenarios, \\`[imagesizeattributesallcases.html](http://localhost:8125/ckeditor5-image/tests/manual/imagesizeattributesallcases.html) (launched by the `yarn manual -sw -f 'image'`).  \r\n  \r\nPlease test things out if you can, the more feedback and eyeballs we get, the more confident we will be that the implementation is correct.\r\n\r\n_What follows below is a detailed explanation of what changes in the editor's model, and pipelines. If you're not integrating deeply with our images, you can skip this section._\r\n\r\n### Image styles/attributes vs. model attributes\r\n\r\n*   Style `width` → model `resizedWidth` (changed from `width`).\r\n*   Style `height` → model `resizedHeight` (new).\r\n*   Attribute `width` → model `width` (new).\r\n*   Attribute `height` → model `height` (new).\r\n\r\n### Upcast:\r\n\r\n*   **Style** `width` & `height` set (in px) → upcast to `width` & `height` (because styles override width and height attributes).\r\n*   Else if **attributes** `width` & `height` set → upcast to `width` & `height`\r\n*   Only **style** `width` set (% or px) → upcast to `resizedWidth`\r\n*   **Style** `width` & `height` set (in %)\r\n    *   set `resizedHeight`, but remove when resizing.\r\n*   **Style** `height` only (in %)\r\n    *   set `resizedHeight`, but remove when resizing.\r\n*   Style `height` only (in px)\r\n    *   set `resizedHeight`, but remove when resizing.\r\n\r\n### Editing downcast:\r\n\r\n*   Resizing in % → set `resizedWidth`.\r\n*   Resizing in px → set `resizedWidth`.\r\n*   If `resizedHeight` was set in data → remove it while resizing.\r\n    *   So, we don’t break how resizing in CKE5 works right now (keeping the aspect ratio).\r\n*   Height: auto (in content styles) (for `<img>`):\r\n    *   **Inline**\r\n        *   set for all.\r\n    *   **Block**\r\n        *   set for all.\r\n*   Aspect-ratio **inline style** (for `<img>`):\r\n    *   **Inline**\r\n        *   set for all.\r\n    *   **Block**\r\n        *   set for all.\r\n\r\n### Data downcast:\r\n\r\n*   Height: auto (for `<img>`):\r\n    *   **Inline**\r\n        *   needed for resized images only (class `image_resized` on `<img>`)\r\n        *   we set it for resized only\r\n    *   **block**\r\n        *   set for all\r\n*   Aspect-ratio style (for `<img>`):\r\n    *   **Inline**\r\n        *   needed for resized images with broken aspect ratio only (otherwise height:auto style resets aspect ratio to proportional sizes).\r\n        *   we set it for resized only.\r\n    *   **Block**\r\n        *   set for all."", 'author': 'Witoso'}, {'body': ""> In CKE4, it was possible to tweak the aspect-ratio of an image. We decided to support this in the editor, and if the aspect-ratio was changed, we should show it as changed.\r\n\r\nIIRC we had previously concluded that this was very rarely used? Am I now misremembering that? 🤔 Asking because this this complicates the implementation enormously.\r\nChecking … found it: [the `image2` demo](https://ckeditor.com/docs/ckeditor4/latest/examples/image2.html) clearly shows that there's no ability to customize the aspect ratio?\r\n\r\nPinged @lauriii to analyze/respond in detail, because I'm not sure yet how all of the above applies to Drupal's `DrupalImage` plugin which extends CKEditor 5's own `ImageInsertUI` and `ImageUpload` — to _never_ generate `style` attributes but `width` instead."", 'author': 'wimleers'}, {'body': ""Unfortunately, it may be a rare case the case in Drupal which, I think, didn't implement the modal. In the plain CKE4, double-click on an image showed the dimensions, with a pretty obvious mechanism to unlock the aspect ratio.\r\n\r\n![](https://github.com/ckeditor/ckeditor5/assets/9881379/831a099b-0318-4951-b429-79a66f6257d1)"", 'author': 'Witoso'}, {'body': 'This feature hit the `master` and is available on [nightly releases](https://github.com/ckeditor/ckeditor5/issues/14724) and [nightly docs](https://ckeditor5.github.io/docs/nightly/ckeditor5/latest/examples/builds-custom/full-featured-editor.html) to test.', 'author': 'Witoso'}, {'body': 'Nice, thank you!', 'author': 'KlemenDEV'}, {'body': 'Setting the width/height via the UI: https://github.com/ckeditor/ckeditor5/issues/15044.\r\n', 'author': 'Witoso'}]","['package:image', 'domain:ui/ux', 'Epic', 'squad:core']",CLOSED,14146,"['14202', '14146', '11393', '14366', '14357', '5154', '14531', '14201', '14147', '14542', '14557', '14313', '10838', '14532']","🖼️  Supporting image height attribute # Image feature compatibility with CKEditor 4 (height)

**[UPDATE]**

### Please test things out if you can, the more feedback and eyeballs we get, the more confident we will be that the implementation is correct.

This feature hit the `master` branch and is available on nightly releases and [nightly docs](https://ckeditor5.github.io/docs/nightly/ckeditor5/latest/examples/builds-custom/full-featured-editor.html) to test.

[The details of the changes are described in the comment below.
](https://github.com/ckeditor/ckeditor5/issues/14146#issuecomment-1632607316)

<details>
  <summary>Archive of discovery</summary>

## Main problem statements

When implementing images it looks like there are still some areas in which CKEditor 5 lags behind the CKE4. This applies only to inline images because CKEditor 4’s `image` plugin could only generate inline images. We don’t have to care about the behavior of `image2` (low popularity).

After initial research, it looks like the main missing attribute is height, and the following problems need to be solved.

1. How to preserve the image’s height and width with **the content that is already out there** and is loaded to the editor.
2. Should **we eagerly set image height and width** as it will produce better rendering? What about:
    1. the resizing implementation?
    2. should we set those values proactively when uploading of the image happens?

## Feedback and Community

- This is very important for modern browsers as height and width [prevent layout shifts and improve the experience of your site visitors.](https://www.smashingmagazine.com/2020/03/setting-height-width-images-important-again/)
- We have reports from Drupal about missing `height` and its relation to image resizing.
    - [https://www.drupal.org/project/drupal/issues/3336446#comment-14888366](https://www.drupal.org/project/drupal/issues/3336446#comment-14888366)
    - [https://www.drupal.org/project/drupal/issues/3321296](https://www.drupal.org/project/drupal/issues/3321296)
    - When the image is resized in CKEditor 4, both `height` and `width` attributes are added. The attributes persist if the text format is upgraded to use CKEditor 5.
- https://github.com/ckeditor/ckeditor5/issues/5154
- https://github.com/ckeditor/ckeditor5/issues/10838
- https://github.com/ckeditor/ckeditor5/issues/11393

### FYI

The `srcset` attribute specifies the image variants dedicated for the various screen sizes for the web browser to choose from (360px, 720px, 1080px, 1440px, etc.). For instance, the `image.jpg` file uploaded by the user will have the following markup:

`sizes`One or more strings separated by commas, indicating a set of source sizes. Each source size consists of:
1. A [media condition](https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Using_media_queries#syntax). This must be omitted for the last item in the list.
2. A source size value.
Media Conditions describe properties of the *viewport*, not of the *image*. For example, `(max-height: 500px) 1000px` proposes to use a source of 1000px width, if the *viewport* is not higher than 500px.

If the `srcset` attribute uses width descriptors, the `sizes` attribute must also be present, or the `srcset` itself will be ignored.

CKEditor5 when **using responsive image** (EasyImage) the `width` attribute is set but not the `height`. CKBox is not doing it.

Good explanation of the impact to `width` and `height` on CLS: [https://www.aleksandrhovhannisyan.com/blog/setting-width-and-height-on-images/](https://www.aleksandrhovhannisyan.com/blog/setting-width-and-height-on-images/)

> Essentially, the width and height attributes are meant for **initializing an image’s aspect ratio**, not for dictating the width and height at which it renders—that’s the job of CSS. Once an image has loaded in, if you want to apply some custom CSS to size it differently, you can do so without changing the image’s intrinsic aspect ratio sizing.

## Use cases

Problem 1: I have HTML with `width` and `height` set and it doesn't load to the editor.
Outcome: Load the width and height attributes of the image, e.g. setData content to the model (no GHS).

---

Problem 2: When I resized an image (with `width` and `height`), and I have the resized image placed on the page there should not be a layout shift. Also, I still want to resize with **the aspect ratio locked**.
Outcome: `width` and `height` stay but the image is resized with the aspect ratio intact.

---

Problem 3: When I insert images, I want `width` and `height` set automatically.
Outcome: After upload those attributes appear on the image element.


## Scope

* [x] https://github.com/ckeditor/ckeditor5/issues/14147
* [x] https://github.com/ckeditor/ckeditor5/issues/14313
* [x] #14201 (solving problems 1 and 2)
* [x] #14202 (solving problem 3)
* [x] https://github.com/ckeditor/ckeditor5/issues/14357
* [x] https://github.com/ckeditor/ckeditor5/issues/14366
* [x] https://github.com/ckeditor/ckeditor5/issues/14542
* [x] https://github.com/ckeditor/ckeditor5/issues/14532
* [x] https://github.com/ckeditor/ckeditor5/issues/14557
* [x] https://github.com/ckeditor/ckeditor5/issues/14531

## Out of scope

Problem 4: As a user, I want to change the `width` and `height` attributes.
Outcome: `width` and `height` attributes are configurable on the UI.

Decided to keep it out of scope for now. `width` and `height` should set the [intrinsic size of the image](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#supported_image_formats) to lock the aspect ratio for the browser, and restyling of images should be done via the CSS. 
</details>
",14,27
ckeditor,ckeditor5,Restore and check image attributes POC,"Restore, check, and demo the PoC from @oleq 
- [PoC](https://github.com/ckeditor/ckeditor5/tree/ci/1580-img-width-height)
- https://github.com/cksource/ckeditor5-internal/issues/1580


* It's one year old but may have useful code and approach that we might reuse. Check how well it solves our problems and use cases: https://github.com/ckeditor/ckeditor5/issues/14146.
* `img > height:auto` should we add it to our CSS?
",Witoso,['mmotyczynska'],"[{'body': 'PoC on branch: `ck/14147-image-attributes-poc`', 'author': 'mmotyczynska'}]","['package:image', 'domain:ui/ux', 'squad:core']",CLOSED,14147,['14146'],"Restore and check image attributes POC Restore, check, and demo the PoC from @oleq 
- [PoC](https://github.com/ckeditor/ckeditor5/tree/ci/1580-img-width-height)
- https://github.com/cksource/ckeditor5-internal/issues/1580


* It's one year old but may have useful code and approach that we might reuse. Check how well it solves our problems and use cases: https://github.com/ckeditor/ckeditor5/issues/14146.
* `img > height:auto` should we add it to our CSS?
",14,27
ckeditor,ckeditor5,Allow and preserve image width and height attributes,"After checking the PoC check in #14147, we decided that we want to go further with this approach.

### Scope
* load the `width` and `height` attributes from HTML (done in the PoC).
* breaking change: model `width`-> `resizedWidth`, `widthAttribute` -> `width` (it was not a part of the PoC).
* breaking change: streamlined the `srcset` attribute in the model. On master it is `{ data: ""..."", width: """" }` but since now width has been delegated to I`mageSizeAttributes`, I figured this object form is useless (done in the PoC).
* resize stays as is but we add `height: auto` to the styles to preserve the proper aspect ratio. (Is it a BC?)

We need to test it against our current upload adapters if this doesn't break anything.
",Witoso,['mmotyczynska'],[],"['type:task', 'package:image', 'squad:core']",CLOSED,14201,[],"Allow and preserve image width and height attributes After checking the PoC check in #14147, we decided that we want to go further with this approach.

### Scope
* load the `width` and `height` attributes from HTML (done in the PoC).
* breaking change: model `width`-> `resizedWidth`, `widthAttribute` -> `width` (it was not a part of the PoC).
* breaking change: streamlined the `srcset` attribute in the model. On master it is `{ data: ""..."", width: """" }` but since now width has been delegated to I`mageSizeAttributes`, I figured this object form is useless (done in the PoC).
* resize stays as is but we add `height: auto` to the styles to preserve the proper aspect ratio. (Is it a BC?)

We need to test it against our current upload adapters if this doesn't break anything.
",29,27
ckeditor,ckeditor5,On image upload set the `width` and `height` attributes,"As described in the umbrella issue https://github.com/ckeditor/ckeditor5/issues/14146 the `width` and `height` attributes are crucial to prevent the layout shift. We should set them on the image upload.

### Scope 
* When an image is uploaded, set `width` and `height` on the `img`.
* It should work with our current adapters (CKBox, EasyImage, Base64, SimpleUpload) as well as custom ones.
* Update the image docs to mention, we set those attributes. As it's a complex matter, let's consult CCX on how to surface this info.

### TBD (we need to experiment)
* When to set it? When loading a placeholder to the editor from the blob? What API options do we have? Maybe after the upload?
* Should we set it by default or some configuration option should be turned on?",Witoso,['mmotyczynska'],[],"['type:task', 'package:image', 'squad:core']",CLOSED,14202,['14146'],"On image upload set the `width` and `height` attributes As described in the umbrella issue https://github.com/ckeditor/ckeditor5/issues/14146 the `width` and `height` attributes are crucial to prevent the layout shift. We should set them on the image upload.

### Scope 
* When an image is uploaded, set `width` and `height` on the `img`.
* It should work with our current adapters (CKBox, EasyImage, Base64, SimpleUpload) as well as custom ones.
* Update the image docs to mention, we set those attributes. As it's a complex matter, let's consult CCX on how to surface this info.

### TBD (we need to experiment)
* When to set it? When loading a placeholder to the editor from the blob? What API options do we have? Maybe after the upload?
* Should we set it by default or some configuration option should be turned on?",5,27
ckeditor,ckeditor5,[GHS/Style] List styles preserves itself and spreads to other list types and blocks.,"## 📝 Provide detailed reproduction steps (if any)

1. Have a style defined for the `ul`
2. Apply the style to the list.
3. Two enters.
4. Create an `ol` list.
5. The class and style are there and it's not possible to disable it.

https://github.com/ckeditor/ckeditor5/assets/9881379/0d20a7d4-34e3-4fa9-ab48-a0cd06719796


### ✔️ Expected result

`ol` doesn't have the style.

### ❌ Actual result

`ol` has the style.

### ❓ Possible solution

1. Clear the `htmlListAttributes` on non-list blocks.
2. Allow deleting the style even if it's on the wrong element! That would be at least some better UX for handling situations like this.

## 📃 Other details

Workarounds: delete the class via the Source mode or turn to a different list, disable the style turn back to the list type you wanted to have.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",Witoso,['filipsobol'],"[{'body': ""1. Research changing `htmlAttributes` to `htmlXAttributes` defined for each element (`X`). That would be a generic fix.\r\n2. On rename/change of the element remove the `htmlXAttributes` if they don't belong to the element."", 'author': 'Witoso'}, {'body': 'This task was split into 3 PRs:\r\n\r\n* Change `htmlAttributes` to `html*Attributes`, where `*` represents the name of the view element, e.g.: `htmlDivAttributes` - https://github.com/ckeditor/ckeditor5/pull/14271.\r\n* Remove unrelated `html*Attributes` from elements, e.g.: `htmlDivAttributes` from `paragraph` - https://github.com/ckeditor/ckeditor5/pull/14307.\r\n* Change `htmlListAttributes` to `htmlUlAttributes` or `htmlOlAttributes` depending on the list type - #14322.', 'author': 'filipsobol'}, {'body': ""Since styles leaking to other elements is a recurring problem, we decided to look at it more broadly and fix it so that it doesn't happen in any case, not just the one described in this ticket.\r\n\r\nWe decided to rename the attribute created by GHS (General HTML Support) that the `style` plugin depends on from a generic `htmlAttributes` used by all elements to a unique name `html*Attributes` for each element type, where `*` is the name of that element, e.g: `htmlDivAttributes` or `htmlH1Attributes`. This allows us to filter out unwanted attributes from the elements.\r\n\r\nThis way, when we:\r\n* insert an H1 element and press Enter at the end, the newly created paragraph will not inherit H1's HTML attributes (previously, this case required a special handler),\r\n* change the list type from ordered to unordered or vice versa, the old style will be removed,\r\n* Follow the steps described in this ticket, paragraph and subsequent lists will not inherit styles from the first list."", 'author': 'filipsobol'}]","['type:bug', 'squad:core', 'package:html-support', 'package:style']",CLOSED,14216,[],"[GHS/Style] List styles preserves itself and spreads to other list types and blocks. ## 📝 Provide detailed reproduction steps (if any)

1. Have a style defined for the `ul`
2. Apply the style to the list.
3. Two enters.
4. Create an `ol` list.
5. The class and style are there and it's not possible to disable it.

https://github.com/ckeditor/ckeditor5/assets/9881379/0d20a7d4-34e3-4fa9-ab48-a0cd06719796


### ✔️ Expected result

`ol` doesn't have the style.

### ❌ Actual result

`ol` has the style.

### ❓ Possible solution

1. Clear the `htmlListAttributes` on non-list blocks.
2. Allow deleting the style even if it's on the wrong element! That would be at least some better UX for handling situations like this.

## 📃 Other details

Workarounds: delete the class via the Source mode or turn to a different list, disable the style turn back to the list type you wanted to have.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",13,28
ckeditor,ckeditor5,Research how different sources of HTML interact with img height/width attributes,"As we implemented the image attributes to the model (#14202) let's test it out with the content that it's out there and what would be a behavior with this implementation.

Sources to check: 
* Test the new CKE5 height implementation by pasting from Word, Google Docs (https://github.com/ckeditor/ckeditor5/issues/10838), and random websites (like Wikipedia).
* CKE5 with GHS.
* [CKE4](https://ckeditor.com/docs/ckeditor4/latest/examples/acf.html) (ACF, custom ACF / non ACF).
* Drupal with CKE4 and CKE5.

Cases to check:
* Simple image upload.
* Image from URL.
* Resize of image.
* Resize of image (unlocked aspect ratio).

Let's create a doc in which we will have a summary of the scenarios and example data. Format proposal:

* Source: CKE4 with ACF.
* Input HTML to the source.
* Action on the image in the source (mention if any like resize).
* Output HTML from the source.
* Model/View after inserting to CKE5 (with height/width attributes)
* Is user intent preserved?



",Witoso,"['Witoso', 'mmotyczynska']","[{'body': '## Conclusions\r\n\r\n- `style=height:xx`, should we accept it and store in the model as resizedHeight?\r\n    - Proposed rule of thumb if **inline style** then the intent is that it may be a resize and we keep it in the model.\r\n    - GHS attribute height messes up the resize of the picture with inline styles. The inline-image will show differently in an editor and different in data output.\r\n    - `style=height:xx` == model: `resizedHeight` (this is what we could introduce)\r\n    - on resize should we set `resizedHeight` and `resizedWidth`?\r\n        - % may mess it up? Rounding problems…\r\n    - force `aspect-ratio` style, set an attribute on the model of `aspect-ratio`.\r\n- `height:auto` overwrites the non-proportional resize (in block as images are surrounded by `figure`). Should we accept images that are resized without keeping the aspect ratio?\r\n    - maybe integrators should unset `height:auto` if they want to tweak aspect ratio images?\r\n  \r\nFollow ups:\r\n* https://github.com/ckeditor/ckeditor5/issues/14357', 'author': 'Witoso'}]","['type:task', 'package:image', 'squad:core']",CLOSED,14313,['10838'],"Research how different sources of HTML interact with img height/width attributes As we implemented the image attributes to the model (#14202) let's test it out with the content that it's out there and what would be a behavior with this implementation.

Sources to check: 
* Test the new CKE5 height implementation by pasting from Word, Google Docs (https://github.com/ckeditor/ckeditor5/issues/10838), and random websites (like Wikipedia).
* CKE5 with GHS.
* [CKE4](https://ckeditor.com/docs/ckeditor4/latest/examples/acf.html) (ACF, custom ACF / non ACF).
* Drupal with CKE4 and CKE5.

Cases to check:
* Simple image upload.
* Image from URL.
* Resize of image.
* Resize of image (unlocked aspect ratio).

Let's create a doc in which we will have a summary of the scenarios and example data. Format proposal:

* Source: CKE4 with ACF.
* Input HTML to the source.
* Action on the image in the source (mention if any like resize).
* Output HTML from the source.
* Model/View after inserting to CKE5 (with height/width attributes)
* Is user intent preserved?



",5,27
ckeditor,ckeditor5,"Add image resizedHeight attribute, convert from style=height:xx","## Provide a description of the task

1. Convert `style=height:xx` to model’s `resizedHeight`.
2. After resize:

   - option 1: remove `resizedHeight`, change `resizedWidth`
   - option 2: change both  `resizedHeight & resizedWidth`

## 📃 Other details

* Browser: …
* OS: …
* CKEditor version: …
* Installed CKEditor plugins: …
",mmotyczynska,['mmotyczynska'],[],"['type:task', 'package:image', 'squad:core']",CLOSED,14357,[],"Add image resizedHeight attribute, convert from style=height:xx ## Provide a description of the task

1. Convert `style=height:xx` to model’s `resizedHeight`.
2. After resize:

   - option 1: remove `resizedHeight`, change `resizedWidth`
   - option 2: change both  `resizedHeight & resizedWidth`

## 📃 Other details

* Browser: …
* OS: …
* CKEditor version: …
* Installed CKEditor plugins: …
",3,27
ckeditor,ckeditor5,Research setting aspect-ratio,"After #14313 we want to check if we should set on the model, and later on inline styles in the data output an `aspect-ratio` style.

This attribute could help us to:
    1. remove `height:auto` style from the `img`.
    2. show non-proportionally resized images that come from CKEditor 4 for example.
   
Outcome:   
Research setting inline `aspect-ratio` based on `resizedHeight & resizedWidth` or fallback to attributes `width` and `height`.",Witoso,[],"[{'body': 'Closing as duplicate of #14357.', 'author': 'Witoso'}]","['type:task', 'squad:core']",CLOSED,14366,[],"Research setting aspect-ratio After #14313 we want to check if we should set on the model, and later on inline styles in the data output an `aspect-ratio` style.

This attribute could help us to:
    1. remove `height:auto` style from the `img`.
    2. show non-proportionally resized images that come from CKEditor 4 for example.
   
Outcome:   
Research setting inline `aspect-ratio` based on `resizedHeight & resizedWidth` or fallback to attributes `width` and `height`.",23,27
ckeditor,ckeditor5,[Style] Style dropdown should insert (some) elements.,"The main difference between CKEditor 4 and 5 in styling is the ability to insert and rename elements. CKEditor 4 added the elements from the Styles list like containers or headings:

https://github.com/ckeditor/ckeditor5/assets/9881379/e7b49a0d-ef45-4dd7-a4c5-928b5c4b57a5

CKEditor 5 only allows styling when the cursor is in the element. 


https://github.com/ckeditor/ckeditor5/assets/9881379/43f53d95-b981-4521-b672-22d946b961cd


Potential improvements are that styling will allow to insert/rename of some elements to allow for example insertion of `div`s (rel: https://github.com/ckeditor/ckeditor5/issues/13341).",Witoso,[],"[{'body': 'Hello, I\'m coming from #15031 (which is not 100% related), I\'m migrating from CKEditor 4 to 5  and I also found that we can\'t insert `<div class=""..."">` anymore with style definitions, or headings (which are scoped to paragraph and `<h...>` elements IINW): \r\n\r\nhttps://github.com/ckeditor/ckeditor5/assets/2103975/fbe44969-a2e3-4723-b4a4-143215f019fd\r\n\r\nWhat are the current workarounds if I want our users to still have the possibility to insert `<div class=""..."">` before this issue is resolved/a new release is tagged?:\r\n1. Create a custom plugin for inserting a single `<div>`, and tell them to stylise it after?\r\n2. Re-create a custom `Style` plugin which will works like CKEditor 4 (at least for the ""insert part"" ?)\r\n3. Tell them to switch to HTML mode, write themselves `<div></div>`, and switch to edition mode?\r\n4. Try to patch the plugin myself + open a PR later ? (it would be the best solution if I am able too) \r\n5. Or... maybe something else I didn\'t think about?\r\n\r\nThanks! :)\r\n\r\n**EDIT:** Finally we kept the `Styles` dropdown but we changed the `element: \'div\'` to `element: \'p\'` in order to provide a good UX to our CMS users. \r\nHowever we wrote something that transforms those `<p>` to `<div>` just before rendering the content to our final-users (because we really need to use `<div>` here).', 'author': 'Kocal'}, {'body': 'This keeps coming up as a question in the Drupal community. Latest occurrence: https://drupal.slack.com/archives/C01GWN3QYJD/p1696319376013359.', 'author': 'wimleers'}, {'body': 'Now tracking this explicitly in this `Drupal.org` issue: https://www.drupal.org/project/drupal/issues/3362451', 'author': 'wimleers'}]","['type:improvement', 'domain:ui/ux', 'squad:core', 'package:style']",OPEN,14372,['13341'],"[Style] Style dropdown should insert (some) elements. The main difference between CKEditor 4 and 5 in styling is the ability to insert and rename elements. CKEditor 4 added the elements from the Styles list like containers or headings:

https://github.com/ckeditor/ckeditor5/assets/9881379/e7b49a0d-ef45-4dd7-a4c5-928b5c4b57a5

CKEditor 5 only allows styling when the cursor is in the element. 


https://github.com/ckeditor/ckeditor5/assets/9881379/43f53d95-b981-4521-b672-22d946b961cd


Potential improvements are that styling will allow to insert/rename of some elements to allow for example insertion of `div`s (rel: https://github.com/ckeditor/ckeditor5/issues/13341).",0,28
ckeditor,ckeditor5,Image size attributes after uploading image,"## Provide a description of the task

Currently, we set width and height attributes on images when we add them in the editor (intrinsic sizes). We also set image attributes when, for example, we copy an image from Office. When such an image is uploaded to the server and comes back with the suggested width, it can happen that the aspect ratio is broken (new width does not match the original height).

Scope of this ticket: Check and decide whether we should keep the initial sizes or the sizes that come from the server. Although it seems to make sense to set new sizes (returned from the server) if the initial sizes are just original (intrinsic) sizes, this isn't necessarily the case if, for example, the user copies the resized image from Office (the user might expect the Office sizes to remain untouched).

A test case:

1. Copy the content of this file 
[word.docx](https://github.com/ckeditor/ckeditor5/files/11950651/word.docx)
2. Paste into http://localhost:8125/ckeditor5-image/tests/manual/imagesizeattributes.html manual test (it has paste from office and easy image plugins).

Instead of sizes from the Office:
![image](https://github.com/ckeditor/ckeditor5/assets/95343030/cc40ebce-bbec-407e-ae72-6db1cd494dbc)

We get this:
![image](https://github.com/ckeditor/ckeditor5/assets/95343030/c83ecdb5-4a54-451e-892b-8a7931e69ec6)


## 📃 Other details

* Browser: …
* OS: …
* CKEditor version: …
* Installed CKEditor plugins: …
",mmotyczynska,['mmotyczynska'],"[{'body': 'Decision: we should keep the sizes from the Office.', 'author': 'mmotyczynska'}]","['type:task', 'package:image', 'squad:core']",CLOSED,14531,[],"Image size attributes after uploading image ## Provide a description of the task

Currently, we set width and height attributes on images when we add them in the editor (intrinsic sizes). We also set image attributes when, for example, we copy an image from Office. When such an image is uploaded to the server and comes back with the suggested width, it can happen that the aspect ratio is broken (new width does not match the original height).

Scope of this ticket: Check and decide whether we should keep the initial sizes or the sizes that come from the server. Although it seems to make sense to set new sizes (returned from the server) if the initial sizes are just original (intrinsic) sizes, this isn't necessarily the case if, for example, the user copies the resized image from Office (the user might expect the Office sizes to remain untouched).

A test case:

1. Copy the content of this file 
[word.docx](https://github.com/ckeditor/ckeditor5/files/11950651/word.docx)
2. Paste into http://localhost:8125/ckeditor5-image/tests/manual/imagesizeattributes.html manual test (it has paste from office and easy image plugins).

Instead of sizes from the Office:
![image](https://github.com/ckeditor/ckeditor5/assets/95343030/cc40ebce-bbec-407e-ae72-6db1cd494dbc)

We get this:
![image](https://github.com/ckeditor/ckeditor5/assets/95343030/c83ecdb5-4a54-451e-892b-8a7931e69ec6)


## 📃 Other details

* Browser: …
* OS: …
* CKEditor version: …
* Installed CKEditor plugins: …
",8,27
ckeditor,ckeditor5,Image size attributes and picture (art direction),"## Provide a description of the task

Inline image (picture) doesn't look good with current ck-content styles if it is not resized. The output shows a much larger image compared to the editor content.

![image](https://github.com/ckeditor/ckeditor5/assets/95343030/fc718f78-2ba7-4205-9c6d-9c07a453c27b)

To re-create the issue:
1. Open http://localhost:8125/ckeditor5-image/tests/manual/imagesizeattributesallcases.html manual test.
2. For the first editor set data:
```
<p><picture><source srcset=""logo-square.png"" media=""(max-width: 800px)"" type=""image/png""><source srcset=""logo-wide.png"" media=""(min-width: 800px)"" type=""image/png""><img class=""image_resized"" style=""width:250px;"" src=""logo-wide.png"" alt=""Alt text of the block image.""></picture></p>
```
3. Shrink the browser so the images are small enough to see the difference.


## 📃 Other details

* Browser: …
* OS: …
* CKEditor version: …
* Installed CKEditor plugins: …
",mmotyczynska,['mmotyczynska'],"[{'body': 'We decided not to restrict the width in output data in this case. But keep the use cases in manual test, they will be useful when testing next changes for image sizes.', 'author': 'mmotyczynska'}]","['type:task', 'package:image', 'squad:core']",CLOSED,14532,[],"Image size attributes and picture (art direction) ## Provide a description of the task

Inline image (picture) doesn't look good with current ck-content styles if it is not resized. The output shows a much larger image compared to the editor content.

![image](https://github.com/ckeditor/ckeditor5/assets/95343030/fc718f78-2ba7-4205-9c6d-9c07a453c27b)

To re-create the issue:
1. Open http://localhost:8125/ckeditor5-image/tests/manual/imagesizeattributesallcases.html manual test.
2. For the first editor set data:
```
<p><picture><source srcset=""logo-square.png"" media=""(max-width: 800px)"" type=""image/png""><source srcset=""logo-wide.png"" media=""(min-width: 800px)"" type=""image/png""><img class=""image_resized"" style=""width:250px;"" src=""logo-wide.png"" alt=""Alt text of the block image.""></picture></p>
```
3. Shrink the browser so the images are small enough to see the difference.


## 📃 Other details

* Browser: …
* OS: …
* CKEditor version: …
* Installed CKEditor plugins: …
",8,27
ckeditor,ckeditor5,Images wider than editor are shrunk horizontally,"## Provide a description of the task

After introducing the width and height attributes for images, if an image is added that is wider than the width of the editor, it will be shrunk horizontally. This is due to the max-width: 100% for images, while the height is taken from the new height attribute. As a result, the image is only as wide as the editor, but the height remains unchanged.

The task is to force the images to have a good appearance in the above cases.

![image](https://github.com/ckeditor/ckeditor5/assets/95343030/c58cb1f6-71c4-42e4-b470-2a36c6e3c90e)

",mmotyczynska,['mmotyczynska'],"[{'body': '### Problems to be solved:\r\n- [Problem 1] Images (inline) wider than editor and with height set are shrunk (in editing)\r\n- [Problem 2] Images (block) wider than editor and with height set are shrunk (in editing)\r\n- [Problem 3] Images (block) wider than parent container and with height set are shrunk (in data)\r\n\r\nSolution for [Problem 1]:\r\n- [editing] `height: auto` (for all <img> inline) -> fixes the [Problem 1], but creates:\r\n- [Problem 4] Images (inline) with broken aspect ratio are displayed incorrectly, because `height: auto` overrides the height of the image (in editing)\r\n\r\nSolution for [Problem 2]:\r\n- [editing] `height: auto` (for all <img> block) -> fixes the [Problem 2], but creates:\r\n- [Problem 5] Images (block) with broken aspect ratio are displayed incorrectly, because `height: auto` overrides the height of the image (in editing)\r\n\r\nSolution for [Problem 3]:\r\n- `height: auto` (for <img> block also for data) -> fixes [Problem 3], but there is one more:\r\n- [Problem 6] Images (block) with broken aspect ratio are displayed incorrectly, because `height: auto` overrides the height of the image (in data)\r\n\r\nSolution for [Problem 4]:\r\n- [editing] set `aspect-ratio` (for <img> inline) -> fixes [Problem 4]\r\n\r\nSolution for [Problem 5]:\r\n- [editing] set `aspect-ratio` (for <img> block) -> fixes [Problem 5]\r\n\r\nSolution for [Problem 6]:\r\n- [data] set `aspect-ratio` (for <img> block) -> fixes [Problem 6]\r\n\r\n[Problem 7]: Inline images with broken aspect ratio and resized are not displayed correctly (data).\r\n\r\nSolution for [Problem 7]:\r\n- [data] set `aspect-ratio` (for <img> inline) but only if it’s resized -> fixes [Problem 7]\r\n\r\n### Summary - we should add:\r\n- `height: auto` for:\r\n    - Editing inline\r\n    - Data inline (resized only)\r\n    - Editing block\r\n    - Data block\r\n- `aspect-ratio` for:\r\n    - Editing inline\r\n    - Data inline (resized only)\r\n    - Editing block\r\n    - Data block', 'author': 'mmotyczynska'}]","['type:task', 'package:image', 'squad:core']",CLOSED,14542,[],"Images wider than editor are shrunk horizontally ## Provide a description of the task

After introducing the width and height attributes for images, if an image is added that is wider than the width of the editor, it will be shrunk horizontally. This is due to the max-width: 100% for images, while the height is taken from the new height attribute. As a result, the image is only as wide as the editor, but the height remains unchanged.

The task is to force the images to have a good appearance in the above cases.

![image](https://github.com/ckeditor/ckeditor5/assets/95343030/c58cb1f6-71c4-42e4-b470-2a36c6e3c90e)

",1,27
ckeditor,ckeditor5,Set image width and height on resize (and possibly other image changes),"## Provide a description of the task

Image width and height should be added when the user edits the image.
Currently, image sizes are added after switching from block to inline (and vice versa).
This should also happen when the image is resized and, if possible, when other changes are made to the image (e.g. alignment).

## 📃 Other details

* Browser: …
* OS: …
* CKEditor version: …
* Installed CKEditor plugins: …
",mmotyczynska,['mmotyczynska'],[],"['type:task', 'package:image', 'squad:core']",CLOSED,14557,[],"Set image width and height on resize (and possibly other image changes) ## Provide a description of the task

Image width and height should be added when the user edits the image.
Currently, image sizes are added after switching from block to inline (and vice versa).
This should also happen when the image is resized and, if possible, when other changes are made to the image (e.g. alignment).

## 📃 Other details

* Browser: …
* OS: …
* CKEditor version: …
* Installed CKEditor plugins: …
",21,27
ckeditor,ckeditor5,Document list feature parity,"The goal of this initiative is to make `Document lists` implementation equivalent of the `List` plugin.

The following features need to be done:

*   [x] #11620 and implementation of to-do lists.
    *   [x] #14663
*   [x] #14634.

And possibly some critical bug fixes:

*   [x] #12466 comes to mind as it creates a very weird experience when pasting from Word, related #14155. Most likely, the option here would be to disable the possibility to indent paragraphs (of list items).",Witoso,[],[],"['type:task', 'Epic', 'squad:core']",CLOSED,14632,"['14634', '12466', '14663', '11620']","Document list feature parity The goal of this initiative is to make `Document lists` implementation equivalent of the `List` plugin.

The following features need to be done:

*   [x] #11620 and implementation of to-do lists.
    *   [x] #14663
*   [x] #14634.

And possibly some critical bug fixes:

*   [x] #12466 comes to mind as it creates a very weird experience when pasting from Word, related #14155. Most likely, the option here would be to disable the possibility to indent paragraphs (of list items).",29,30
ckeditor,ckeditor5,Document lists should have a “simple list” config option,"As we decided to make the Document list the only plugin that introduces the lists, we need to add a config option that still allows creating simple lists.

### Why?

Integrators may want to allow simpler content editing, and block creation of blocks in the lists. We have a similar use case in our comments' system. You rarely may want to have a complex markup in small editors. etc.

### Scope

*   This option should be opt-in. By default, lists will allow blocks.
*   After setting this option
    *   I can only insert list items. Simplified data output `<ul><li>a</li><li>b</li></ul>` (for `ol` as well).
    *   Typing actions that we have in the document lists (e.g., enter+backspace creates a block) should work differently (as current lists).
*   Documentation.
    *   Simple list config in the feature.
    *   Release and update guide information.",Witoso,"['niegowski', 'arkflpc']","[{'body': ""Refinement notes:\r\n\r\n*   When there's an option in the config, don't register the command that merges blocks, etc.\r\n*   Schema needs to change (e.g., no heading in the list item).\r\n*   Postfixers: all id's in list items need to be unique."", 'author': 'Witoso'}, {'body': 'Should we deny multiple types of nested lists in a single list item? Shall simple list allow such structure or should it not (in legacy lists it was not possible):\r\n```html\r\n<ul>\r\n    <li>\r\n        a\r\n        <ol>\r\n            <li>\r\n                b\r\n            </li>\r\n        </ol>\r\n        <ul>\r\n            <li>\r\n                c\r\n            </li>\r\n        </ul>\r\n    </li>\r\n</ul>\r\n```\r\n', 'author': 'niegowski'}, {'body': ""I don't see a reason why not. I see it as a good enhancement for the user that they can have a bulleted list and inside it have a numbered one. It still matches my definition of simple.\r\n\r\n@Reinmar do you remember why Lists v1 didn't have it? Or was it only scope cutting?"", 'author': 'Witoso'}]","['type:improvement', 'package:list', 'squad:core']",CLOSED,14634,[],"Document lists should have a “simple list” config option As we decided to make the Document list the only plugin that introduces the lists, we need to add a config option that still allows creating simple lists.

### Why?

Integrators may want to allow simpler content editing, and block creation of blocks in the lists. We have a similar use case in our comments' system. You rarely may want to have a complex markup in small editors. etc.

### Scope

*   This option should be opt-in. By default, lists will allow blocks.
*   After setting this option
    *   I can only insert list items. Simplified data output `<ul><li>a</li><li>b</li></ul>` (for `ol` as well).
    *   Typing actions that we have in the document lists (e.g., enter+backspace creates a block) should work differently (as current lists).
*   Documentation.
    *   Simple list config in the feature.
    *   Release and update guide information.",29,29
ckeditor,ckeditor5,"[Drag & drop, intro] Blockquote formatting is lost","## 📝 Provide detailed reproduction steps (if any)

In the experimental drag and drop:

https://github.com/ckeditor/ckeditor5/assets/9881379/05660c9a-6e9b-4635-b10b-a6a2581e0de9

### ✔️ Expected result

Formatting is preserved.

### ❌ Actual result

Formatting is lost.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",Witoso,['filipsobol'],"[{'body': 'What should happen when only part of the blockquote is selected? Is it ""all or nothing"" or should we automagically split the blockquote?', 'author': 'filipsobol'}, {'body': '> What should happen when only part of the blockquote is selected? Is it ""all or nothing"" or should we automagically split the blockquote?\r\n\r\nI would say that we need to do a bit of predicting of the user intent (and choosing what\'s the strongest/most popular/maakes more sense).\r\n\r\nPossible intents of partial select and dragging:\r\n\r\n1.  I would like to split the quote into two quotes (it\'s too big? Parts of the quote in different parts of the document?) \xa0\r\n2.  I would like to extract something out of the quote. (I think this one is tricky, why it ended up in a quote? Semantically, part of a quote is a quote, extracting something to not be a quote only makes sense when it was added there mistakenly?).\r\n\r\nI\'m leaning towards, no 1. As an experiment, I added a quote from you to the top, and I wanted to extract _""Is it (...)""_ to pull it above this sentence as a quote. This is a valid case, and nice behavior (if it worked :stuck\\_out\\_tongue: ). WDYT? @dagdzi', 'author': 'Witoso'}, {'body': ""@Witoso I am also leaning towards solution no 1. \r\n\r\nCode blocks currently behave this way, and I think it's intuitive. When we repeat this behavior in the case of blockquote, it will also be a consistent solution."", 'author': 'dagdzi'}, {'body': ""Due to technical limitations, in the PR #14891 we will only add support for extending the range when ALL child elements are selected. I've created a new issue #14940 to also extend the range when the selection touches the beginning or end of the parent elements.\r\n\r\n@Witoso I've added this new issue to the list of `New behaviors` under the `things could be moved v2.` group in our [D&D epic](https://github.com/ckeditor/ckeditor5/issues/13933). Feel free to move it if you don't agree with this."", 'author': 'filipsobol'}, {'body': ""@filipsobol not sure what are the product/user consequences, it's a bit too tech for me to decide :smile:"", 'author': 'Witoso'}, {'body': ""Sorry, let me explain this better using the blockquote example from above.\r\n\r\nWith PR #14891, the blockquote style is only maintained if EVERYTHING within it is selected before dragging (**Example 1**).\r\n\r\nHowever, it would be nice to maintain the blockquote style when the selection doesn't include everything, but touches the beginning or end of the blockquote (**Examples 2 and 3**). This is skipped for now due to technical limitations described in #14940.\r\n\r\nOnce this is fixed, the blockquote style will NOT be copied only if the selection doesn't touch any of the blockquote ends (**Example 4**).\r\n\r\n**Example 1**: :heavy_check_mark: The blockquote style is copied when all paragraphs are selected.\r\n![Blockquote with all three paragraphs selected](https://github.com/ckeditor/ckeditor5/assets/4145208/cd4c174c-1fbe-4b28-833a-a9286df47f24)\r\n\r\n**Example 2**: :heavy_check_mark: The blockquote style is copied when the first two paragraphs are selected (currently skipped).\r\n![Blockquote with first two paragraphs selected](https://github.com/ckeditor/ckeditor5/assets/4145208/29386271-7a4f-465f-8154-a8eefb50dce0)\r\n\r\n**Example 3**: :heavy_check_mark: The blockquote style is copied when the last two paragraphs are selected (currently skipped).\r\n![Blockquote with last two paragraphs selected](https://github.com/ckeditor/ckeditor5/assets/4145208/0ba84254-8532-4bc9-bb83-107516231fac)\r\n\r\n**Example 4**: :heavy_multiplication_x: The blockquote style is NOT copied when only the middle paragraph is selected.\r\n![Blockquote with only the middle paragraph selected](https://github.com/ckeditor/ckeditor5/assets/4145208/2d338a8c-13f6-4b08-b223-52538d3ebcab)\r\n"", 'author': 'filipsobol'}, {'body': ""Gotcha, so for now let's do the simplest case I agree, then we can move to more specific scenarios."", 'author': 'Witoso'}]","['type:bug', 'package:clipboard', 'squad:core']",CLOSED,14640,[],"[Drag & drop, intro] Blockquote formatting is lost ## 📝 Provide detailed reproduction steps (if any)

In the experimental drag and drop:

https://github.com/ckeditor/ckeditor5/assets/9881379/05660c9a-6e9b-4635-b10b-a6a2581e0de9

### ✔️ Expected result

Formatting is preserved.

### ❌ Actual result

Formatting is lost.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",12,25
ckeditor,ckeditor5,[Drag & drop] Can't place the content in the code block,"In the experimental drag and drop:

https://github.com/ckeditor/ckeditor5/assets/9881379/ba1a8781-e5ef-4228-9c74-1b68878e6910

### ✔️ Expected result

You can place the content in the code block.

### ❌ Actual result

You cannot place the content there.


---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",Witoso,[],[],['type:bug'],OPEN,14641,[],"[Drag & drop] Can't place the content in the code block In the experimental drag and drop:

https://github.com/ckeditor/ckeditor5/assets/9881379/ba1a8781-e5ef-4228-9c74-1b68878e6910

### ✔️ Expected result

You can place the content in the code block.

### ❌ Actual result

You cannot place the content there.


---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",12,31
ckeditor,ckeditor5,"[Drag & drop, intro] Can't take out the text out of the image/table caption","In the experimental drag and drop (as well as the current implementation):

https://github.com/ckeditor/ckeditor5/assets/9881379/27f90bbb-a83e-4cb2-930f-7e9ccc52ea06


### ✔️ Expected result

You can take out the text from the caption.

### ❌ Actual result

You can't take out the text from the caption.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",Witoso,['illia-stv'],"[{'body': 'Cause: selection grew too large.', 'author': 'Witoso'}, {'body': 'Why has it been closed?', 'author': 'arkflpc'}]","['type:bug', 'squad:core']",OPEN,14643,[],"[Drag & drop, intro] Can't take out the text out of the image/table caption In the experimental drag and drop (as well as the current implementation):

https://github.com/ckeditor/ckeditor5/assets/9881379/27f90bbb-a83e-4cb2-930f-7e9ccc52ea06


### ✔️ Expected result

You can take out the text from the caption.

### ❌ Actual result

You can't take out the text from the caption.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",12,31
ckeditor,ckeditor5,"[Drag & drop, intro] Improve the drop target line","We want to improve the drop target line for both horizontal and vertical lines:

*   Symmetrical approach – arrow should also be added in the horizontal line, 
    * RTL, the arrow should be on the other side.
*   For darker background
    * The lines vertical and horizontal by default should be surrounded by the white stroke (0.5-1px).
    * Outline may be tricky to style, intersections, etc., SVG?
    * _Possible scope cut._
*   I should be possible to style both line color and the surrounding stroke by the CSS.

[Internal Figma file.](https://www.figma.com/file/B20B2kvXTDzzO0zvNZmPE4/Enhanced-drag-and-drop-of-block?type=design&node-id=13-755&mode=design&t=9mSNImGgnYAmLhXL-4)
---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",Witoso,['pszczesniak'],"[{'body': '@dagdzi very worthwhile comment from @niegowski, having half-pixels could look messy (antialiasing, and other subpixel rendering magic), and it would be better to use full pixels.', 'author': 'Witoso'}, {'body': ""@Witoso In that case, I'd stick with the 2 px line. I think it will be more visible and consistent with the rest of the interface elements."", 'author': 'dagdzi'}]","['type:improvement', 'package:clipboard', 'squad:core']",CLOSED,14645,[],"[Drag & drop, intro] Improve the drop target line We want to improve the drop target line for both horizontal and vertical lines:

*   Symmetrical approach – arrow should also be added in the horizontal line, 
    * RTL, the arrow should be on the other side.
*   For darker background
    * The lines vertical and horizontal by default should be surrounded by the white stroke (0.5-1px).
    * Outline may be tricky to style, intersections, etc., SVG?
    * _Possible scope cut._
*   I should be possible to style both line color and the surrounding stroke by the CSS.

[Internal Figma file.](https://www.figma.com/file/B20B2kvXTDzzO0zvNZmPE4/Enhanced-drag-and-drop-of-block?type=design&node-id=13-755&mode=design&t=9mSNImGgnYAmLhXL-4)
---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",1,25
ckeditor,ckeditor5,"[Drag & drop + Balloon block, intro] Change the default icon","We plan to change the default icon of the Balloon block editor. The new icon will be more recognizable as a drag handle.

*   The default one should be ⠿, 
*   On hover, add information, something along “Drag to move”.
*   [It should be configurable](https://ckeditor.com/docs/ckeditor5/latest/features/toolbar/toolbar.html#changing-the-icon).

[Internal figma.
](https://www.figma.com/file/B20B2kvXTDzzO0zvNZmPE4/%5BD%26D%5D-Enhanced-drag-and-drop-of-block?type=design&node-id=50-484&mode=design&t=U0hemhUHJ4ulbcnY-4)
---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",Witoso,['pszczesniak'],"[{'body': ""```javascript\r\n\tblockToolbar: {\r\n\t\titems: [\r\n\t\t\t'bold',\r\n\t\t\t'italic',\r\n\t\t\t'link'\r\n\t\t],\r\n\t\ticon: 'pilcrow' // or SVG.\r\n\t},\r\n```\r\n\r\n\r\n:point\\_up: possible configuration approach."", 'author': 'Witoso'}, {'body': 'Got a questions about the button of the Balloon block editor:\r\n\r\n*   should the label (tooltip shown on hover) also mention about edit possibility? for example `Click to edit block / drag to move` or something similar, cause now it will covers two functionality at once,\r\n*   what kind of cursor should it be on hover? Should it stay as `default` as it is now or maybe change it into `grab`?\r\n\r\ncc @dagdzi , @oleq\r\n\r\nWDYT about multi-line tooltip? \r\n<img width=""185"" alt=""Screenshot 2023-08-29 at 12 05 18"" src=""https://github.com/ckeditor/ckeditor5/assets/7074833/ca8ab5ed-3e35-40cd-88de-5651d8fa6a2d"">\r\n', 'author': 'pszczesniak'}, {'body': '@oleq could you explain why here :point\\_down:\r\n\r\n\xa0https://github.com/ckeditor/ckeditor5/blob/52231a24d8e2721e91d589d58cdf921557660899/packages/ckeditor5-ui/src/toolbar/toolbarview.ts#L50:L58 we got this list cropped instead of using all existing `icons`?\r\n\r\nWe want to use this icon list as a predefined list for configuration/customizing the icon of `Balloon Block Editor` toolbar.', 'author': 'pszczesniak'}, {'body': '@pszczesniak \r\n\r\nI think in this case displaying information about two functionalities in the tooltip is better than displaying only one of them (because when we have information only about one functionality it kind of suggests that the other functionality is not present).\r\n\r\nIn the case of the cursor, maybe the solution is to change it to grab cursor only when grabbing and otherwise have default one?', 'author': 'dagdzi'}, {'body': '> In the case of the cursor, maybe the solution is to change it to grab cursor only when grabbing and otherwise have default one?\r\n\r\n@dagdzi was thinking about same thing also, but this will be moved as a follow-up i think :slightly\\_smiling\\_face: Thank You!', 'author': 'pszczesniak'}, {'body': ""> https://github.com/ckeditor/ckeditor5/blob/52231a24d8e2721e91d589d58cdf921557660899/packages/ckeditor5-ui/src/toolbar/toolbarview.ts#L50:L58 we got this list cropped instead of using all existing `icons`?\r\n\r\nBecause then, all production builds of all editors would get bloated with dozens of bulky icons that would only be used by like 5% of users and increase the size of distributed packages by many kilobytes. It's a usability vs. size kind of trade-off.\r\n\r\nWhat we could do is make all built-in icons (all icons in a specific production build) available at some central point so at least they could be re-used across features. If you think this is a good idea, please vote for https://github.com/ckeditor/ckeditor5/issues/12496. "", 'author': 'oleq'}, {'body': '@Witoso  - is this configurable they way you put it?\r\n\r\nAlso, I believe the configuration part should rather be added here: https://ckeditor.com/docs/ckeditor5/latest/features/toolbar/blocktoolbar.html#configuration', 'author': 'godai78'}]","['type:improvement', 'package:clipboard', 'squad:core']",CLOSED,14646,[],"[Drag & drop + Balloon block, intro] Change the default icon We plan to change the default icon of the Balloon block editor. The new icon will be more recognizable as a drag handle.

*   The default one should be ⠿, 
*   On hover, add information, something along “Drag to move”.
*   [It should be configurable](https://ckeditor.com/docs/ckeditor5/latest/features/toolbar/toolbar.html#changing-the-icon).

[Internal figma.
](https://www.figma.com/file/B20B2kvXTDzzO0zvNZmPE4/%5BD%26D%5D-Enhanced-drag-and-drop-of-block?type=design&node-id=50-484&mode=design&t=U0hemhUHJ4ulbcnY-4)
---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",31,25
ckeditor,ckeditor5,[Drag & drop] Scroll while dragging,"When I drag the content, I want the content to scroll up/down inside the editor when I arrive with the drop target (marker) at the edge so that I can place it in the proper place outside the current viewport.

**Questions**:

* What about the cases when there's `overflow: y` and the editor has the max-height?
    * being close to the edge of visible editable viewport, it should start scrolling.

**Possible solution**:
* `scrollToTheSelection`

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",Witoso,[],[],"['type:improvement', 'package:clipboard', 'squad:core']",OPEN,14647,[],"[Drag & drop] Scroll while dragging When I drag the content, I want the content to scroll up/down inside the editor when I arrive with the drop target (marker) at the edge so that I can place it in the proper place outside the current viewport.

**Questions**:

* What about the cases when there's `overflow: y` and the editor has the max-height?
    * being close to the edge of visible editable viewport, it should start scrolling.

**Possible solution**:
* `scrollToTheSelection`

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",5,31
ckeditor,ckeditor5,Todo lists in Document lists,"Implement todo lists for the document lists.

This closes also https://github.com/ckeditor/ckeditor5/issues/11620.",Witoso,['niegowski'],[],"['package:list', 'squad:core']",CLOSED,14663,['11620'],"Todo lists in Document lists Implement todo lists for the document lists.

This closes also https://github.com/ckeditor/ckeditor5/issues/11620.",6,29
ckeditor,ckeditor5,"[Drag & drop, intro] Prevent dropping in the impossible places (a.k.a. inception)","## 📝 Provide detailed reproduction steps (if any)

Don’t show the drop target inside the element that is selected or where you cannot place it, examples:

1.  Table into itself,
2.  Block quote into itself.
3.  Inline image to block's image caption.

### ✔️ Expected result

Drop target line doesn't show.

### ❌ Actual result

Drop target line does show.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",Witoso,['filipsobol'],"[{'body': '@Witoso ,\r\nI feel inline element to itself also need to blocked.[see here\r\n](https://ckeditor.com/docs/ckeditor5/latest/framework/tutorials/implementing-an-inline-widget.html#demo)\r\n\r\nwe can drop a inline element over other. Is there any temporary solution available for this ?', 'author': 'pranavmappoli'}, {'body': ""Replacement via drag & drop is a standard behavior, so the issue won't change this."", 'author': 'Witoso'}, {'body': '@Witoso , Is there any way to block this behavior?. if something dropped on the span, it should get rejected.', 'author': 'pranavmappoli'}]","['type:bug', 'package:clipboard', 'squad:core']",CLOSED,14709,[],"[Drag & drop, intro] Prevent dropping in the impossible places (a.k.a. inception) ## 📝 Provide detailed reproduction steps (if any)

Don’t show the drop target inside the element that is selected or where you cannot place it, examples:

1.  Table into itself,
2.  Block quote into itself.
3.  Inline image to block's image caption.

### ✔️ Expected result

Drop target line doesn't show.

### ❌ Actual result

Drop target line does show.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",19,25
ckeditor,ckeditor5,[Drag & drop] Don't replace the image if dropped below,"## 📝 Provide detailed reproduction steps (if any)

1.  Drag and drop a new image (e.g., from the desktop folder) under the selected image.

### ✔️ Expected result

The image appears below the selected image.

### ❌ Actual result

The image replaces the selected image.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",Witoso,['illia-stv'],[],"['type:bug', 'package:clipboard', 'squad:core']",CLOSED,14710,[],"[Drag & drop] Don't replace the image if dropped below ## 📝 Provide detailed reproduction steps (if any)

1.  Drag and drop a new image (e.g., from the desktop folder) under the selected image.

### ✔️ Expected result

The image appears below the selected image.

### ❌ Actual result

The image replaces the selected image.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",19,25
ckeditor,ckeditor5,[Drag & drop] Hide contextual balloon toolbar while dragging,"## 📝 Provide detailed reproduction steps (if any)

1.  Select the content in the editor that has a balloon toolbar.
2.  Drag and drop.

![](https://github.com/ckeditor/ckeditor5/assets/9881379/bc755bea-1111-49ac-a6e1-b6f1a408b113)

### ✔️ Expected result

Balloon hides.

### ❌ Actual result

Balloon stays open.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",Witoso,[],[],"['type:bug', 'package:clipboard']",OPEN,14711,[],"[Drag & drop] Hide contextual balloon toolbar while dragging ## 📝 Provide detailed reproduction steps (if any)

1.  Select the content in the editor that has a balloon toolbar.
2.  Drag and drop.

![](https://github.com/ckeditor/ckeditor5/assets/9881379/bc755bea-1111-49ac-a6e1-b6f1a408b113)

### ✔️ Expected result

Balloon hides.

### ❌ Actual result

Balloon stays open.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",12,31
ckeditor,ckeditor5,"[Drag & drop + Balloon block, intro] Select the blocks when dragging with the drag handle","## 📝 Provide detailed reproduction steps (if any)

1.  Select multiple blocks.
2.  Use the drag handle to drag.

![](https://github.com/ckeditor/ckeditor5/assets/9881379/b44d2449-7c53-4a2c-ae89-dfc02bb92e61)

### ✔️ Expected result

Whole blocks are selected.

### ❌ Actual result

Selection stays the same, even though entire blocks are moved.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",Witoso,[],"[{'body': 'Possible fix: editable focus.', 'author': 'Witoso'}]","['type:bug', 'package:clipboard', 'squad:core']",OPEN,14712,[],"[Drag & drop + Balloon block, intro] Select the blocks when dragging with the drag handle ## 📝 Provide detailed reproduction steps (if any)

1.  Select multiple blocks.
2.  Use the drag handle to drag.

![](https://github.com/ckeditor/ckeditor5/assets/9881379/b44d2449-7c53-4a2c-ae89-dfc02bb92e61)

### ✔️ Expected result

Whole blocks are selected.

### ❌ Actual result

Selection stays the same, even though entire blocks are moved.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",12,31
ckeditor,ckeditor5,[Drag & drop] Enable block drag and drop by default,"1.  Add drag and drop of blocks to work by default.
2.  Add drag and drop by block toolbar handle to work by default when block toolbar is used.
3.  Remove the old implementation of Drag & drop.",Witoso,['illia-stv'],"[{'body': 'Tactical Killroy to remember to update feature guide if this gets merged.', 'author': 'godai78'}]","['type:task', 'squad:core']",CLOSED,14734,[],"[Drag & drop] Enable block drag and drop by default 1.  Add drag and drop of blocks to work by default.
2.  Add drag and drop by block toolbar handle to work by default when block toolbar is used.
3.  Remove the old implementation of Drag & drop.",19,25
ckeditor,ckeditor5,[Drag & drop + Balloon block]  Misplaced toolbar after movement,"## 📝 Provide detailed reproduction steps (if any)

1.  Select block.
2.  Drag bottom to top.
3.  Drag by the handle.

https://github.com/ckeditor/ckeditor5/assets/9881379/c463ba67-599c-4d9d-8972-636bcb6a6f8e

### ✔️ Expected result

Handle shows in the first block.

### ❌ Actual result

Handle shows in the last block (the one you started selection in).

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",Witoso,[],"[{'body': ""Logic of where to place the selection needs to be written.\r\n\r\nIf it's simple paste, the logic is correct right now, this is the case of dragging multiple blocks."", 'author': 'Witoso'}]","['type:bug', 'squad:core']",OPEN,14735,[],"[Drag & drop + Balloon block]  Misplaced toolbar after movement ## 📝 Provide detailed reproduction steps (if any)

1.  Select block.
2.  Drag bottom to top.
3.  Drag by the handle.

https://github.com/ckeditor/ckeditor5/assets/9881379/c463ba67-599c-4d9d-8972-636bcb6a6f8e

### ✔️ Expected result

Handle shows in the first block.

### ❌ Actual result

Handle shows in the last block (the one you started selection in).

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",12,31
ckeditor,ckeditor5,[Drag & drop + RTC] Should we paste data that was updated while dragging?,"Imagine a scenario in the RTC:

1.  Person A: Select a text.
2.  Person A: Start moving it.
3.  Person B: Write in the selected text.
4.  Person A: Drop.
5.  Inserted text by person B vanishes.

Interestingly, the GDoc or Notion preserves it.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",Witoso,[],[],"['type:improvement', 'squad:core']",OPEN,14737,[],"[Drag & drop + RTC] Should we paste data that was updated while dragging? Imagine a scenario in the RTC:

1.  Person A: Select a text.
2.  Person A: Start moving it.
3.  Person B: Write in the selected text.
4.  Person A: Drop.
5.  Inserted text by person B vanishes.

Interestingly, the GDoc or Notion preserves it.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",19,31
ckeditor,ckeditor5,[Drag & drop] Fix d&d between editors and roots ,"## 📝 Provide detailed reproduction steps (if any)

1.  Drag in one editor/one root.
2.  Drop in another editor/root.

### ✔️ Expected result

Formatting and behavior stays the same as d&d in the same editor.

### ❌ Actual result

Content differs. TODO add specific examples.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",Witoso,[],[],"['type:bug', 'squad:core']",OPEN,14738,[],"[Drag & drop] Fix d&d between editors and roots  ## 📝 Provide detailed reproduction steps (if any)

1.  Drag in one editor/one root.
2.  Drop in another editor/root.

### ✔️ Expected result

Formatting and behavior stays the same as d&d in the same editor.

### ❌ Actual result

Content differs. TODO add specific examples.

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",19,31
ckeditor,ckeditor5,[Drag & drop] Preview quirks,"## 📝 Provide detailed reproduction steps (if any)

1.  Drag an image (with disabled cache), and the image doesn't show.

![](https://github.com/ckeditor/ckeditor5/assets/9881379/3045758a-4576-4f4f-b1d0-b8e2fccdd274)

2\. To check, in the manual test everything works correctly, in the demos it doesn't, e.g., no bold/lists in table.

![](https://github.com/ckeditor/ckeditor5/assets/9881379/5de4ce46-f70b-4331-b523-addf4af5126f)

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",Witoso,[],[],"['type:bug', 'squad:core']",OPEN,14739,[],"[Drag & drop] Preview quirks ## 📝 Provide detailed reproduction steps (if any)

1.  Drag an image (with disabled cache), and the image doesn't show.

![](https://github.com/ckeditor/ckeditor5/assets/9881379/3045758a-4576-4f4f-b1d0-b8e2fccdd274)

2\. To check, in the manual test everything works correctly, in the demos it doesn't, e.g., no bold/lists in table.

![](https://github.com/ckeditor/ckeditor5/assets/9881379/5de4ce46-f70b-4331-b523-addf4af5126f)

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",12,31
ckeditor,ckeditor5,[Drag & drop] Upload image issues,"## 📝 Provide detailed reproduction steps (if any)

❌ dropping an image to the table from the external source doesn’t work if you want to drop the image below or above the code block (but the drop target line is visible).

❌ when you want to drop an image under or above text or block quote, the image appears inline (even if the drop target line is visible).

*   the logic if it's inline or block should be joined with the pasting of images. Initial logic: paragraph with text, always inline, etc.

https://github.com/ckeditor/ckeditor5/assets/9881379/f82df7be-f259-42fd-98b8-75e8779d2997

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",Witoso,['illia-stv'],"[{'body': 'This issue is resolved by another PR: https://github.com/ckeditor/ckeditor5/pull/14986\r\nSo after merging it could be closed', 'author': 'illia-stv'}, {'body': 'AFAIK @illia-stv you can close two issues with one PR.', 'author': 'Witoso'}]","['type:bug', 'squad:core']",CLOSED,14740,[],"[Drag & drop] Upload image issues ## 📝 Provide detailed reproduction steps (if any)

❌ dropping an image to the table from the external source doesn’t work if you want to drop the image below or above the code block (but the drop target line is visible).

❌ when you want to drop an image under or above text or block quote, the image appears inline (even if the drop target line is visible).

*   the logic if it's inline or block should be joined with the pasting of images. Initial logic: paragraph with text, always inline, etc.

https://github.com/ckeditor/ckeditor5/assets/9881379/f82df7be-f259-42fd-98b8-75e8779d2997

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",1,25
ckeditor,ckeditor5,[Drag & drop] Improve images preview,"We want to improve the image preview (especially for large images) so that they do not cover the content during using drag and drop feature.

We have chosen the following approach: **Image preview cannot be bigger than 50% of editor area.** 
The preview is smaller when the image is bigger than 50% of editor area, and the user drags the image by clicking on it.

In the Balloon block editor, when the user uses the drag handle to drag an image, the preview is the same size as the image size. 

[Figma prototype ](https://www.figma.com/proto/B20B2kvXTDzzO0zvNZmPE4/Enhanced-drag-and-drop-of-block?type=design&node-id=191-484&t=6RLoxFqczYmzUYzf-1&scaling=min-zoom&page-id=191%3A428&starting-point-node-id=191%3A484&show-proto-sidebar=1&mode=design)(click on the image to see the preview).

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",dagdzi,['pszczesniak'],"[{'body': ""> **Image preview cannot be bigger than 50% of editor area.**\r\n\r\n@dagdzi do I understand correctly that if it's bigger than 50%, we resize the width of the image in preview to 50% of the editor's width."", 'author': 'Witoso'}, {'body': ""@Witoso Yes, that's correct. \r\n\r\n"", 'author': 'dagdzi'}, {'body': 'Will be solved by #14968 (native browser solution was chosen).', 'author': 'pszczesniak'}]","['type:improvement', 'package:clipboard', 'squad:core', 'resolution:resolved']",CLOSED,14744,[],"[Drag & drop] Improve images preview We want to improve the image preview (especially for large images) so that they do not cover the content during using drag and drop feature.

We have chosen the following approach: **Image preview cannot be bigger than 50% of editor area.** 
The preview is smaller when the image is bigger than 50% of editor area, and the user drags the image by clicking on it.

In the Balloon block editor, when the user uses the drag handle to drag an image, the preview is the same size as the image size. 

[Figma prototype ](https://www.figma.com/proto/B20B2kvXTDzzO0zvNZmPE4/Enhanced-drag-and-drop-of-block?type=design&node-id=191-484&t=6RLoxFqczYmzUYzf-1&scaling=min-zoom&page-id=191%3A428&starting-point-node-id=191%3A484&show-proto-sidebar=1&mode=design)(click on the image to see the preview).

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",1,25
ckeditor,ckeditor5,[Drag & drop] Creation of subitems in the lists,"## 📝 Provide a description of the improvement

Currently, when you:

*   Drop the same list type item into a list, it merges with the list.
*   Drop a different list type item, it splits the list.
*   Drop a different content (paragraph, image, etc.), it splits the list.

On top of this, we want to add a new action. When moving a cursor, you can indent and create an indented item:

https://github.com/ckeditor/ckeditor5/assets/9881379/538a3493-779a-47c6-8d6c-40db1a4a0339

The scenarios then are:

*   Start drop action of the same list type item into a list, move to the right, drop:
    *   it creates a new subitem.
*   Start drop action of a different list type item, move to the right, drop:
    *   it creates a list **inside** the list item.
*   Start drop action of a different content (paragraph, image, etc.)
    *   it adds the content **inside** the list item.

Questions:

*   RTL support?
*   This will be planned for the Document list but what if they have #14634?

[Internal figma.](https://www.figma.com/file/B20B2kvXTDzzO0zvNZmPE4/Enhanced-drag-and-drop-of-block?type=design&node-id=123-1470&mode=design&t=AtBn7LMCxOs8f341-0)

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",Witoso,[],[],"['type:improvement', 'package:clipboard', 'squad:core']",OPEN,14766,[],"[Drag & drop] Creation of subitems in the lists ## 📝 Provide a description of the improvement

Currently, when you:

*   Drop the same list type item into a list, it merges with the list.
*   Drop a different list type item, it splits the list.
*   Drop a different content (paragraph, image, etc.), it splits the list.

On top of this, we want to add a new action. When moving a cursor, you can indent and create an indented item:

https://github.com/ckeditor/ckeditor5/assets/9881379/538a3493-779a-47c6-8d6c-40db1a4a0339

The scenarios then are:

*   Start drop action of the same list type item into a list, move to the right, drop:
    *   it creates a new subitem.
*   Start drop action of a different list type item, move to the right, drop:
    *   it creates a list **inside** the list item.
*   Start drop action of a different content (paragraph, image, etc.)
    *   it adds the content **inside** the list item.

Questions:

*   RTL support?
*   This will be planned for the Document list but what if they have #14634?

[Internal figma.](https://www.figma.com/file/B20B2kvXTDzzO0zvNZmPE4/Enhanced-drag-and-drop-of-block?type=design&node-id=123-1470&mode=design&t=AtBn7LMCxOs8f341-0)

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",8,31
ckeditor,ckeditor5,[Drag and drop] Test coverage,"## 📝 Provide a description of the improvement

Ensure proper test coverage for the experimental drag and drop and its stabilization efforts.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",Witoso,"['filipsobol', 'illia-stv']",[],"['type:improvement', 'squad:core']",CLOSED,14831,[],"[Drag and drop] Test coverage ## 📝 Provide a description of the improvement

Ensure proper test coverage for the experimental drag and drop and its stabilization efforts.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",18,25
ckeditor,ckeditor5,[Drag & drop] Extend range when it touches beginning or end of the parent element,"PR #14891 added support for extending drag-and-drop selection range to parent elements when all their children are selected. For example, if all paragraphs in `blockquote` are selected, the range is extended to `blockquote` as well.

```html
<!-- Selection including all child elements ... -->
<blockQuote>
  <paragraph>[Test 1</paragraph>
  <paragraph>Test 2</paragraph>
  <paragraph>Test 3]</paragraph>
<blockQuote>

<!-- ... is extended to the parent element -->
[<blockQuote>
  <paragraph>Test 1</paragraph>
  <paragraph>Test 2</paragraph>
  <paragraph>Test 3</paragraph>
<blockQuote>]
```

We should also consider extending the range if the selection doesn't cover all child elements, but:
* the beginning of the selection touches the beginning of the parent elements,
* the end of the selection touches the end of the parent elements.

```html
<!-- Selection touching the beginning of the parent element... -->
<blockQuote>
  <paragraph>[Test 1</paragraph>
  <paragraph>Test 2]</paragraph>
  <paragraph>Test 3</paragraph>
<blockQuote>

<!-- ... should be extended -->
[<blockQuote>
  <paragraph>Test 1</paragraph>
  <paragraph>Test 2]</paragraph>
  <paragraph>Test 3</paragraph>
<blockQuote>
```

```html
<!-- Selection touching the end of the parent element... -->
<blockQuote>
  <paragraph>Test 1</paragraph>
  <paragraph>T[est 2</paragraph>
  <paragraph>Test 3]</paragraph>
<blockQuote>

<!-- ... should be extended -->
<blockQuote>
  <paragraph>Test 1</paragraph>
  <paragraph>[Test 2</paragraph>
  <paragraph>Test 3</paragraph>
<blockQuote>]
```

The `getRangeIncludingFullySelectedParents` function was created with this in mind. Extending the range can be done by adding the following code inside [this `if` statement](https://github.com/ckeditor/ckeditor5/pull/14891/files#diff-bba9ea473a81dd7170bab8b24c20c6958de6620a370868969d15d1b775591663R717-R730):

```js
if ( touchesStart ) {
  startPosition = parentRange.start;
}

if ( touchesEnd ) {
  endPosition = parentRange.end;
}
```

Unfortunately, such a range fails on [these lines](https://github.com/ckeditor/ckeditor5/blob/master/packages/ckeditor5-engine/src/model/utils/getselectedcontent.ts#L71-L74), so we need to add support for it.

For related discussion, see https://github.com/ckeditor/ckeditor5/issues/14640.",filipsobol,[],[],"['type:improvement', 'package:clipboard', 'squad:core']",OPEN,14940,['14640'],"[Drag & drop] Extend range when it touches beginning or end of the parent element PR #14891 added support for extending drag-and-drop selection range to parent elements when all their children are selected. For example, if all paragraphs in `blockquote` are selected, the range is extended to `blockquote` as well.

```html
<!-- Selection including all child elements ... -->
<blockQuote>
  <paragraph>[Test 1</paragraph>
  <paragraph>Test 2</paragraph>
  <paragraph>Test 3]</paragraph>
<blockQuote>

<!-- ... is extended to the parent element -->
[<blockQuote>
  <paragraph>Test 1</paragraph>
  <paragraph>Test 2</paragraph>
  <paragraph>Test 3</paragraph>
<blockQuote>]
```

We should also consider extending the range if the selection doesn't cover all child elements, but:
* the beginning of the selection touches the beginning of the parent elements,
* the end of the selection touches the end of the parent elements.

```html
<!-- Selection touching the beginning of the parent element... -->
<blockQuote>
  <paragraph>[Test 1</paragraph>
  <paragraph>Test 2]</paragraph>
  <paragraph>Test 3</paragraph>
<blockQuote>

<!-- ... should be extended -->
[<blockQuote>
  <paragraph>Test 1</paragraph>
  <paragraph>Test 2]</paragraph>
  <paragraph>Test 3</paragraph>
<blockQuote>
```

```html
<!-- Selection touching the end of the parent element... -->
<blockQuote>
  <paragraph>Test 1</paragraph>
  <paragraph>T[est 2</paragraph>
  <paragraph>Test 3]</paragraph>
<blockQuote>

<!-- ... should be extended -->
<blockQuote>
  <paragraph>Test 1</paragraph>
  <paragraph>[Test 2</paragraph>
  <paragraph>Test 3</paragraph>
<blockQuote>]
```

The `getRangeIncludingFullySelectedParents` function was created with this in mind. Extending the range can be done by adding the following code inside [this `if` statement](https://github.com/ckeditor/ckeditor5/pull/14891/files#diff-bba9ea473a81dd7170bab8b24c20c6958de6620a370868969d15d1b775591663R717-R730):

```js
if ( touchesStart ) {
  startPosition = parentRange.start;
}

if ( touchesEnd ) {
  endPosition = parentRange.end;
}
```

Unfortunately, such a range fails on [these lines](https://github.com/ckeditor/ckeditor5/blob/master/packages/ckeditor5-engine/src/model/utils/getselectedcontent.ts#L71-L74), so we need to add support for it.

For related discussion, see https://github.com/ckeditor/ckeditor5/issues/14640.",9,31
ckeditor,ckeditor5,Depreciate Old `List` Plugins in Favor of `DocumentList` Equivalents,"## Provide a description of the task

Part of #14632.

### Scope
1. Rename existing `List*` plugins to `LegacyList*` plugins.
  This change will allow integrators to fall back to the old solution if they encounter any issues after an update.
2. Promote `DocumentList*` Plugins (by renaming them to `List*`)
  This should enable document lists for all integrations. Assuming we achieved feature parity, users should not miss any feature.
3. Support current configurations:
    - Introduce `DocumentList*` plugins that pull the new `List*` plugins as a requirement.
    - If an integration currently uses the `DocumentList`, it should continue to work without necessitating any configuration changes.
    - `console.warn`ing should suggest updating configurations.
4. Completely remove the `ListStyle` plugin. It has been deprecated for some time now.
5. Write migration guide. Mention the possibility of using `LegacyList` in case of issues.

## 📃 Other details

* Browser: …
* OS: …
* CKEditor version: …
* Installed CKEditor plugins: …
",arkflpc,[],[],"['type:task', 'squad:core']",OPEN,14942,[],"Depreciate Old `List` Plugins in Favor of `DocumentList` Equivalents ## Provide a description of the task

Part of #14632.

### Scope
1. Rename existing `List*` plugins to `LegacyList*` plugins.
  This change will allow integrators to fall back to the old solution if they encounter any issues after an update.
2. Promote `DocumentList*` Plugins (by renaming them to `List*`)
  This should enable document lists for all integrations. Assuming we achieved feature parity, users should not miss any feature.
3. Support current configurations:
    - Introduce `DocumentList*` plugins that pull the new `List*` plugins as a requirement.
    - If an integration currently uses the `DocumentList`, it should continue to work without necessitating any configuration changes.
    - `console.warn`ing should suggest updating configurations.
4. Completely remove the `ListStyle` plugin. It has been deprecated for some time now.
5. Write migration guide. Mention the possibility of using `LegacyList` in case of issues.

## 📃 Other details

* Browser: …
* OS: …
* CKEditor version: …
* Installed CKEditor plugins: …
",7,30
ckeditor,ckeditor5,"Improvement for the styles definitions, multiple selector and class removal","## 📝 Provide a description of the improvement

The style definition should be improved with the following features:
- The `element` attribute should allow arrays to group style definitions.
This would reduce the number of entry in the style box.
- A new property should be added to resolve class conflicts.
by selecting the class `Heading Blue` the class `heading--red` and `heading--green` should be removed automatically.

```js
{
 name: 'Heading Blue',
 element: ['h1','h2','h3'],
 classes: ['heading','heading--blue'],
 conflictClasses: ['heading--red','heading--green']
},
{
 name: 'Heading Red',
 element: ['h1','h2','h3'],
 classes: ['heading','heading--red'],
 conflictClasses: ['heading--blue','heading--green']
},
...
```

## 📃 Other details
* CKEditor version: 5

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",Megafry,[],"[{'body': 'Thanks for the report! Added to the #14274.', 'author': 'Witoso'}]","['type:improvement', 'domain:ui/ux', 'package:style']",OPEN,14946,[],"Improvement for the styles definitions, multiple selector and class removal ## 📝 Provide a description of the improvement

The style definition should be improved with the following features:
- The `element` attribute should allow arrays to group style definitions.
This would reduce the number of entry in the style box.
- A new property should be added to resolve class conflicts.
by selecting the class `Heading Blue` the class `heading--red` and `heading--green` should be removed automatically.

```js
{
 name: 'Heading Blue',
 element: ['h1','h2','h3'],
 classes: ['heading','heading--blue'],
 conflictClasses: ['heading--red','heading--green']
},
{
 name: 'Heading Red',
 element: ['h1','h2','h3'],
 classes: ['heading','heading--red'],
 conflictClasses: ['heading--blue','heading--green']
},
...
```

## 📃 Other details
* CKEditor version: 5

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.
",3,28
ckeditor,ckeditor5,In Drag and Drop not able to drop entire paragraph to caption,"## 📝 Provide detailed reproduction steps (if any)

1. Go to http://localhost:8125/ckeditor5-clipboard/tests/manual/dragdropexperimental.html
2. Create paragraph with e.g. ""Caption"" text
3. Try to drag and drop it into image caption

### ✔️ Expected result

You could drop it

### ❌ Actual result

https://github.com/ckeditor/ckeditor5/assets/47000454/be0cf688-11dd-42a6-81e7-73d8001bcb23

You can't not drop entire paragraph only part of paragraph. I guess because in selection we have to inline element ( part of text ) but block element ( paragraph )

### ❓ Possible solution

_If you have ideas, you can list them here. Otherwise, you can delete this section._

## 📃 Other details

* Browser: …
* OS: …
* First affected CKEditor version: …
* Installed CKEditor plugins: …

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",illia-stv,[],[],"['type:bug', 'package:clipboard', 'squad:core']",OPEN,14950,[],"In Drag and Drop not able to drop entire paragraph to caption ## 📝 Provide detailed reproduction steps (if any)

1. Go to http://localhost:8125/ckeditor5-clipboard/tests/manual/dragdropexperimental.html
2. Create paragraph with e.g. ""Caption"" text
3. Try to drag and drop it into image caption

### ✔️ Expected result

You could drop it

### ❌ Actual result

https://github.com/ckeditor/ckeditor5/assets/47000454/be0cf688-11dd-42a6-81e7-73d8001bcb23

You can't not drop entire paragraph only part of paragraph. I guess because in selection we have to inline element ( part of text ) but block element ( paragraph )

### ❓ Possible solution

_If you have ideas, you can list them here. Otherwise, you can delete this section._

## 📃 Other details

* Browser: …
* OS: …
* First affected CKEditor version: …
* Installed CKEditor plugins: …

---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.
",13,31
ckeditor,ckeditor5,[Drag & Drop] Preview logic requires tweaking.  ,"## 📝 Provide detailed reproduction steps (if any)

Fix the logic:

1.  When selected above the block toolbar ⇒ above the editable.
    1.  This works now, we may check if the implementation in the experimental is correct.
2.  When in the editable, show preview near the cursor.

Otherwise, in some cases, the preview won't be visible.

https://github.com/ckeditor/ckeditor5/assets/9881379/2833fea6-50b6-44cf-a7af-3abf3b4389c6


---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",Witoso,['illia-stv'],[],"['type:bug', 'squad:core']",CLOSED,14968,[],"[Drag & Drop] Preview logic requires tweaking.   ## 📝 Provide detailed reproduction steps (if any)

Fix the logic:

1.  When selected above the block toolbar ⇒ above the editable.
    1.  This works now, we may check if the implementation in the experimental is correct.
2.  When in the editable, show preview near the cursor.

Otherwise, in some cases, the preview won't be visible.

https://github.com/ckeditor/ckeditor5/assets/9881379/2833fea6-50b6-44cf-a7af-3abf3b4389c6


---

If you'd like to see this fixed sooner, add a 👍 reaction to this post.",1,25
ckeditor,ckeditor5,[Drag & drop] Handle of list item's selection and dropping (document lists),"**Scenario 1.**

Triple-click select a list item or a paragraph, with an empty paragraph after it.

https://github.com/ckeditor/ckeditor5/assets/9881379/9d9ac98c-0c97-454b-9107-0494f74d19fd

**Expected Outcome:**

The empty paragraph should not land in the list.

**Scenario 2.**

Mouse/keyboard selection of an entire list item.

https://github.com/ckeditor/ckeditor5/assets/9881379/36e74da6-3c0b-48d6-8bd6-79a8e7263917

**Expected Outcome:**

The **whole** list item is dropped inside the list, not just text. 

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",Witoso,['pszczesniak'],[],"['type:improvement', 'package:clipboard', 'squad:core']",CLOSED,14969,[],"[Drag & drop] Handle of list item's selection and dropping (document lists) **Scenario 1.**

Triple-click select a list item or a paragraph, with an empty paragraph after it.

https://github.com/ckeditor/ckeditor5/assets/9881379/9d9ac98c-0c97-454b-9107-0494f74d19fd

**Expected Outcome:**

The empty paragraph should not land in the list.

**Scenario 2.**

Mouse/keyboard selection of an entire list item.

https://github.com/ckeditor/ckeditor5/assets/9881379/36e74da6-3c0b-48d6-8bd6-79a8e7263917

**Expected Outcome:**

The **whole** list item is dropped inside the list, not just text. 

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",0,25
ckeditor,ckeditor5,[Drag & drop] Balloon block button,"## 📝 Provide a description of the improvement

*   Implement the support for the RTL in block balloon toolbar drag.
*   During the start of the dragging by icon focus the editable.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",Witoso,[],"[{'body': 'RTL support: add implementation to check the elements on the **left.**\r\n\r\nhttps://github.com/ckeditor/ckeditor5/blob/613b8e26949743d301dc21c6101aeda1286f2950/packages/ckeditor5-clipboard/src/dragdropblocktoolbar.ts#L122-L124', 'author': 'Witoso'}]","['type:improvement', 'package:clipboard', 'squad:core']",CLOSED,15029,[],"[Drag & drop] Balloon block button ## 📝 Provide a description of the improvement

*   Implement the support for the RTL in block balloon toolbar drag.
*   During the start of the dragging by icon focus the editable.

---

If you'd like to see this improvement implemented, add a 👍 reaction to this post.",18,25
ckeditor,ckeditor5,Drag by balloon block toolbar improvements,"As we implemented the new drag behavior by balloon block toolbar in the #13933, the logic of its implementation could be improved and strengthened.

Currently, we are checking the elements on the left/right by 100px, which could be problematic for some integrations.
",Witoso,[],[],"['type:improvement', 'package:clipboard', 'squad:core']",OPEN,15058,[],"Drag by balloon block toolbar improvements As we implemented the new drag behavior by balloon block toolbar in the #13933, the logic of its implementation could be improved and strengthened.

Currently, we are checking the elements on the left/right by 100px, which could be problematic for some integrations.
",21,31
ckeditor,ckeditor5,Find issues matching criteria to mark them as stale,"## Provide a description of the task

The goal is to find issues and pull requests without activity over the last `365 days` and apply the following actions:

* add the `status:stale` label,
* write a comment informing the issue/PR will be closed within 30 days.

### How to determine an issue as ""stale""?

* Must be created before `365 days`.
* PR/issue must be open.
* Does not contain the reserved labels (`support:*`).
* The last activity (the youngest of: added a label, removed a label, a change in any comment, a change in the first issue comment) must happen within 365 days.
	* Ignore the bot activity.

### Configuration fields

* repository slug / name / owner (whatever) to determine a repository to process
* GitHub token with the `repo:write` access to modify issues
* `365 days` – a number of days without any activity in an issue/pr that should be considered stale
* `status:stale` – an array of labels to attach to an issue if it's stale
* a message to be sent by the bot when an issue is marked as stale
* a message to be sent by the bot when a pull request is marked as stale
* an array of labels to ignore (issues) – if an issue is assigned to the given label, it should not be processed
* an array of labels to ignore (PRs) – if a PR is assigned to the given label, it should not be processed
* an array of labels which assignment is ignored while determining if the issue is stale, e.g., if the `stale` label was assigned to an issue, the bot ignores this event when calculating the last updated at date



_Part of ckeditor/ckeditor5#15399._",pomek,['psmyrek'],"[{'body': '@psmyrek, could we add a dry mode to avoid adding comments and updating the issues? Instead, it drops a message that the issue matches the criteria to mark it as stale.', 'author': 'pomek'}, {'body': '> @psmyrek, could we add a dry mode to avoid adding comments and updating the issues? Instead, it drops a message that the issue matches the criteria to mark it as stale.\r\n\r\nSure, it will be useful at the beginning.', 'author': 'psmyrek'}]","['type:task', 'squad:devops', 'package:dev', 'status:in-progress']",OPEN,15400,['15399'],"Find issues matching criteria to mark them as stale ## Provide a description of the task

The goal is to find issues and pull requests without activity over the last `365 days` and apply the following actions:

* add the `status:stale` label,
* write a comment informing the issue/PR will be closed within 30 days.

### How to determine an issue as ""stale""?

* Must be created before `365 days`.
* PR/issue must be open.
* Does not contain the reserved labels (`support:*`).
* The last activity (the youngest of: added a label, removed a label, a change in any comment, a change in the first issue comment) must happen within 365 days.
	* Ignore the bot activity.

### Configuration fields

* repository slug / name / owner (whatever) to determine a repository to process
* GitHub token with the `repo:write` access to modify issues
* `365 days` – a number of days without any activity in an issue/pr that should be considered stale
* `status:stale` – an array of labels to attach to an issue if it's stale
* a message to be sent by the bot when an issue is marked as stale
* a message to be sent by the bot when a pull request is marked as stale
* an array of labels to ignore (issues) – if an issue is assigned to the given label, it should not be processed
* an array of labels to ignore (PRs) – if a PR is assigned to the given label, it should not be processed
* an array of labels which assignment is ignored while determining if the issue is stale, e.g., if the `stale` label was assigned to an issue, the bot ignores this event when calculating the last updated at date



_Part of ckeditor/ckeditor5#15399._",26,32
ckeditor,ckeditor5,"Determine if stale issues need an action (close, unlabel, ignore)","## Provide a description of the task

The goal is to iterate over issues and PRs marked as stale and do one of the following action:

* If there is a new activity since marking as stale ⇒ unmark the issue/PR
* If there has been no activity over `30 days` since marking ⇒ unlabel & close the issue/PR
* Otherwise, leave the issue as it is still pending feedback

### Configuration fields

* repository slug / name / owner (whatever) to determine a repository to process
* GitHub token with the `repo:write` access to modify issues
* `30 days` – a number of days without any activity in an issue/pr to close the given item
* `status:stale` – an array of labels to figure out the stale issues
* an array of labels to apply when an issue or a pr is being closed
* a message to be sent by the bot when an issue is closed
* a message to be sent by the bot when a pull request is closed


_Part of ckeditor/ckeditor5#15399._",pomek,['psmyrek'],[],"['type:task', 'squad:devops', 'package:dev', 'status:planned']",OPEN,15401,['15399'],"Determine if stale issues need an action (close, unlabel, ignore) ## Provide a description of the task

The goal is to iterate over issues and PRs marked as stale and do one of the following action:

* If there is a new activity since marking as stale ⇒ unmark the issue/PR
* If there has been no activity over `30 days` since marking ⇒ unlabel & close the issue/PR
* Otherwise, leave the issue as it is still pending feedback

### Configuration fields

* repository slug / name / owner (whatever) to determine a repository to process
* GitHub token with the `repo:write` access to modify issues
* `30 days` – a number of days without any activity in an issue/pr to close the given item
* `status:stale` – an array of labels to figure out the stale issues
* an array of labels to apply when an issue or a pr is being closed
* a message to be sent by the bot when an issue is closed
* a message to be sent by the bot when a pull request is closed


_Part of ckeditor/ckeditor5#15399._",26,32
ckeditor,ckeditor5,Create an executable script for the stale bot,"## Provide a description of the task

The goal is to create a friendly command line interface that allows running the stale bot.

```bash
yarn ckeditor5-dev-stale-bot --config-path ./path/to/config.js
```

The configuration file should export an object containing properties that are required by sub-tasks (find stale and close stale items).


_Part of ckeditor/ckeditor5#15399._",pomek,['psmyrek'],[],"['type:task', 'squad:devops', 'package:dev']",OPEN,15402,['15399'],"Create an executable script for the stale bot ## Provide a description of the task

The goal is to create a friendly command line interface that allows running the stale bot.

```bash
yarn ckeditor5-dev-stale-bot --config-path ./path/to/config.js
```

The configuration file should export an object containing properties that are required by sub-tasks (find stale and close stale items).


_Part of ckeditor/ckeditor5#15399._",11,32
ckeditor,ckeditor5,Replace the existing stale bot with the new one,"## Provide a description of the task

Replace the existing stale bot with the new one.

I think, we can create a new task on CI that will be executed daily.


_Part of ckeditor/ckeditor5#15399._",pomek,['psmyrek'],[],"['type:task', 'squad:devops', 'package:dev']",OPEN,15403,['15399'],"Replace the existing stale bot with the new one ## Provide a description of the task

Replace the existing stale bot with the new one.

I think, we can create a new task on CI that will be executed daily.


_Part of ckeditor/ckeditor5#15399._",11,32
